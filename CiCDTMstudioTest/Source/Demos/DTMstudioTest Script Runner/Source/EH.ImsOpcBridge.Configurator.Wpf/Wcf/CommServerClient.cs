//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using EH.ImsOpcBridge.Wcf.Interfaces;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ICommServerChannel : ICommServer, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CommServerClient : System.ServiceModel.ClientBase<ICommServer>, ICommServer
{

    public CommServerClient()
    {
    }

    public CommServerClient(string endpointConfigurationName) :
        base(endpointConfigurationName)
    {
    }

    public CommServerClient(string endpointConfigurationName, string remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
    {
    }

    public CommServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
    {
    }

    public CommServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
        base(binding, remoteAddress)
    {
    }

    public void LoadConfigurationRequest(string callbackEndpointAddress, System.Guid invokeId)
    {
        base.Channel.LoadConfigurationRequest(callbackEndpointAddress, invokeId);
    }

    public void SaveConfigurationRequest(string callbackEndpointAddress, System.Guid invokeId, EH.ImsOpcBridge.DataContracts.Configuration configuration)
    {
        base.Channel.SaveConfigurationRequest(callbackEndpointAddress, invokeId, configuration);
    }

    public void ImportConfigurationRequest(string callbackEndpointAddress, System.Guid invokeId, string fileName)
    {
        base.Channel.ImportConfigurationRequest(callbackEndpointAddress, invokeId, fileName);
    }

    public void ExportConfigurationRequest(string callbackEndpointAddress, System.Guid invokeId, EH.ImsOpcBridge.DataContracts.Configuration configuration, string fileName)
    {
        base.Channel.ExportConfigurationRequest(callbackEndpointAddress, invokeId, configuration, fileName);
    }

    public void ReadLocalOpcServersRequest(string callbackEndpointAddress, System.Guid invokeId)
    {
        base.Channel.ReadLocalOpcServersRequest(callbackEndpointAddress, invokeId);
    }

    public void ReadOpcAddressSpaceRequest(string callbackEndpointAddress, System.Guid invokeId, string serverName)
    {
        base.Channel.ReadOpcAddressSpaceRequest(callbackEndpointAddress, invokeId, serverName);
    }

    public void StartMonitorRequest(string callbackEndpointAddress, System.Guid invokeId, EH.ImsOpcBridge.DataContracts.ConfiguredMeasurements configuredMeasurements)
    {
        base.Channel.StartMonitorRequest(callbackEndpointAddress, invokeId, configuredMeasurements);
    }

    public void StopMonitorRequest(string callbackEndpointAddress, System.Guid invokeId)
    {
        base.Channel.StopMonitorRequest(callbackEndpointAddress, invokeId);
    }

    public void DiagnosticsRequest(string callbackEndpointAddress, System.Guid invokeId)
    {
        base.Channel.DiagnosticsRequest(callbackEndpointAddress, invokeId);
    }

    public void FisRegistrationRequest(string callbackEndpointAddress, System.Guid invokeId)
    {
        base.Channel.FisRegistrationRequest(callbackEndpointAddress, invokeId);
    }

    public void OnClientStartIndication(string callbackEndpointAddress)
    {
        base.Channel.OnClientStartIndication(callbackEndpointAddress);
    }

    public void OnClientStopIndication(string callbackEndpointAddress)
    {
        base.Channel.OnClientStopIndication(callbackEndpointAddress);
    }
}
