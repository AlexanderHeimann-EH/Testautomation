<UserControl x:Class="EH.ImsOpcBridge.Configurator.View.MappingDataGridCtrl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:bv="clr-namespace:EH.ImsOpcBridge.UI.Wpf.View;assembly=EH.ImsOpcBridge.Base.UI.Wpf"
             xmlns:viewModel="clr-namespace:EH.ImsOpcBridge.Configurator.ViewModel"
             xmlns:model="clr-namespace:EH.ImsOpcBridge.Configurator.Model"
             xmlns:custom="clr-namespace:EH.ImsOpcBridge.UI.Wpf.EventArguments;assembly=EH.ImsOpcBridge.Base.UI.Wpf"

             xmlns:validationRules="clr-namespace:EH.ImsOpcBridge.Configurator.Rules"    
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="625"
             Background="#FFF6F8FA" AutomationProperties.AutomationId="automId_DeviceTypeInfoListView"
             d:DataContext="{d:DesignInstance {x:Type viewModel:MappingControlVm}, IsDesignTimeCreatable=False}">


    <UserControl.Resources>

        <ContextMenu x:Key="TextBoxContextMenu" Visibility="Hidden"/>

        <Style x:Uid="Style_1" x:Key="DeviceTypeItemStyle" TargetType="{x:Type DataGridRow}">
            <Setter x:Uid="Setter_36" Property="BorderThickness" Value="0"></Setter>
            <EventSetter x:Uid="EventSetter_1" Event="MouseDoubleClick" Handler="ItemDoubleClick" />
            <Style.Triggers>
                <Trigger x:Uid="Trigger_1" Property="ListBox.AlternationIndex" Value="0">
                    <Setter x:Uid="Setter_6" Property="Background" Value="WhiteSmoke" />
                </Trigger>
                <Trigger x:Uid="Trigger_2" Property="ListBox.AlternationIndex" Value="1">
                    <Setter x:Uid="Setter_5" Property="Background" Value="White" />
                </Trigger>
                
                <!--
                
                <MultiTrigger x:Uid="MultiTrigger_1">
                    <MultiTrigger.Conditions>
                        <Condition x:Uid="Condition_1" Property="ItemsControl.AlternationIndex" Value="0" />
                        <Condition x:Uid="Condition_2" Property="IsSelected" Value="False" />
                        <Condition x:Uid="Condition_3" Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter x:Uid="Setter_1" Property="Background" Value="AntiqueWhite" />
                </MultiTrigger>
                <MultiTrigger x:Uid="MultiTrigger_2">
                    <MultiTrigger.Conditions>
                        <Condition x:Uid="Condition_4" Property="ItemsControl.AlternationIndex" Value="1" />
                        <Condition x:Uid="Condition_5" Property="IsSelected" Value="False" />
                        <Condition x:Uid="Condition_6" Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter x:Uid="Setter_7" Property="Background" Value="AntiqueWhite" />
                </MultiTrigger>   
                
                -->
                
            </Style.Triggers>    
        </Style>

        
        <Style x:Uid="Style_2" x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter x:Uid="Setter_13" Property="Height" Value="55" />
            <Setter x:Uid="Setter_16" Property="Background" Value="Transparent" />
            <Setter x:Uid="Setter_48" Property="Margin" Value="-1,0,0,0"></Setter>
            <Setter x:Uid="Setter_57" Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <Style x:Uid="Style_9" x:Key="GridViewCellStyle" TargetType="{x:Type DataGridCell}">

            <Setter x:Uid="Setter_60" Property="BorderThickness" Value="0" />
            <Setter x:Uid="Setter_61" Property="Height" Value="46" />


            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource MenuPopupHighlightedBackgroundBrush}" />
                </Trigger>
                <Trigger Property="DataGridCell.IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MenuPopupHighlightedBackgroundBrush}" />
                </Trigger>

                <!--<Trigger Property="DataGridCell.i" Value="True">
                    <Setter Property="Background" Value="{StaticResource MenuPopupHighlightedBackgroundBrush}" />
                </Trigger>-->
                
            </Style.Triggers>     

        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">

            <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />

            <Style.Triggers>
                <Trigger Property="TextBox.IsReadOnly" Value="True">
                    <!-- <Setter Property="Background" Value="{StaticResource MenuPopupDisabledBackgroundBrush}" /> -->
                    <Setter Property="Background" Value="WhiteSmoke" />

                </Trigger>
                <Trigger Property="TextBox.IsReadOnly" Value="False">
                    <Setter Property="Background" Value="White" />
                </Trigger>

                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>

            </Style.Triggers>
        </Style>


    </UserControl.Resources>

    <Grid x:Uid="Grid_1">
     
 
            <Grid.RowDefinitions>
            <RowDefinition x:Uid="RowDefinition_1" Height="Auto" />
            <RowDefinition x:Uid="RowDefinition_2" Height="*" />
        </Grid.RowDefinitions>
        <bv:PageableDataGrid x:Uid="MappingDataGrid" Name="MappingDataGrid" Grid.Row="1"
                 
                  AutoGenerateColumns="False"
                
                  EnableColumnVirtualization="True"
                  EnableRowVirtualization="True"
                     
                            
                  AlternationCount="2"
                  ItemContainerStyle="{StaticResource DeviceTypeItemStyle}"
                  ItemsSource="{Binding Path=ConfiguredMeasurements, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                        
                              
                  HorizontalContentAlignment="Stretch"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                 
                              
                  SelectionMode="Single"
                             
                  SelectionUnit="Cell"
                  CurrentItem="{Binding Path=CurrentItem, Mode=TwoWay,  NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" 
                 
                            
                             
                  Grid.IsSharedSizeScope="True"
                  VirtualizingStackPanel.IsVirtualizing="False"
                  ColumnHeaderStyle="{StaticResource GridViewColumnHeaderStyle}"
                  CellStyle="{StaticResource GridViewCellStyle}"           
                  BorderThickness="1,1,1,1"
                  BorderBrush="LightGray"
                  RowHeaderWidth="1"
                 
                  FilterStringColumn1="{Binding Path=TextFilterDeviceId,  UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"    
                  FilterStringColumn2="{Binding Path=TextFilterSensorId,  UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"    
             
                  NumberOfPages="{Binding Path=NumberOfPages,  UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"             
                  CurrentPage="{Binding Path=CurrentPage,  UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   
                  ScrollPage="{Binding Path=ScrollPage,  UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   
                             
                  GridLinesVisibility="Vertical"
                  VerticalGridLinesBrush="LightGray"            
                  SelectedCellsList="{Binding Path=SelectedCellsList, Mode=TwoWay}"
                  DataContextChanged="MappingDataGridDataContextChanged">
                  
            
            <DataGrid.Background>
                <LinearGradientBrush x:Uid="LinearGradientBrush_1" EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop x:Uid="GradientStop_3" Color="#FFD6DEE2" Offset="1" />
                    <GradientStop x:Uid="GradientStop_4" Color="#FFEBF0F3" />
                </LinearGradientBrush>
            </DataGrid.Background>

            <DataGrid.Columns>

                <!-- Active -->
                <DataGridTemplateColumn x:Uid="DataGridTemplateColumn_1" Width="180"  IsReadOnly="True" DisplayIndex="0" ClipboardContentBinding="{Binding Path=Active}">

                    <DataGridTemplateColumn.Header >
                        <DataGridColumnHeader Content="{Binding Path=ActiveHeader}" />
                    </DataGridTemplateColumn.Header>

                    <DataGridTemplateColumn.HeaderStyle>       
                             <Style x:Uid="Style_4" TargetType="DataGridColumnHeader">                      
                            <Setter x:Uid="Setter_17" Property="BorderThickness" Value="0,0,1,1" />
                            <Setter x:Uid="Setter_18" Property="BorderBrush" Value="Gray" />
                            <Setter x:Uid="Setter_52" Property="Padding" Value="5,0,0,0" />
                            <Setter x:Uid="Setter_59" Property="AutomationProperties.AutomationId" Value="automnId_DeviceTypeInfoListVw_DtmDeviceType" />
                            
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate x:Uid="DataTemplate_2" DataType="model:ConfiguredMeasurementData">
                            <ComboBox x:Uid="ComboBox" Style="{DynamicResource SmallImageButtonComboBoxStyle}" AutomationProperties.AutomationId="ComboTextBoxControl"
                                      
                                        Height="40" Margin="2, 2, 2, 2" ItemsSource="{Binding Path=ActiveStates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedItem="{Binding Path=Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  custom:SelectionChangedBehavior.SelectionChangedCommand="{Binding ComboBoxSelectionChanged}"  IsSynchronizedWithCurrentItem="True" VerticalContentAlignment="Top"
                                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Text ="{Binding Path=Active, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsEditable="False">
                                       
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>

                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <!-- Device UID -->
                <DataGridTemplateColumn  x:Uid="DataGridTemplateColumn_2" Width="5*" IsReadOnly="True" DisplayIndex="1" ClipboardContentBinding="{Binding Path=DeviceId}">
               
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style x:Uid="Style_4" TargetType="DataGridColumnHeader">
                            <Setter x:Uid="Setter_17" Property="BorderThickness" Value="0,0,1,1" />
                            <Setter x:Uid="Setter_18" Property="BorderBrush" Value="Gray" />
                            <Setter x:Uid="Setter_52" Property="Padding" Value="5,0,0,0" />
                            <Setter x:Uid="Setter_59" Property="AutomationProperties.AutomationId" Value="automnId_DeviceTypeInfoListVw_DtmDeviceType" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>

                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate  DataType="viewModel:MappingControlVm">

                            <Grid IsHitTestVisible="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Uid="ColumnDefinition_1" Width="110" />
                                    <ColumnDefinition x:Uid="ColumnDefinition_1" Width="30" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition x:Uid="RowDefinition_13" Height="25" />
                                    <RowDefinition x:Uid="RowDefinition_13" Height="*" />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Column="0" VerticalAlignment="Center"  Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.DeviceUidHeader}"/>
                                <!--<Image Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom"  Height="24px" Width="24px"  Source="/EH.ImsOpcBridge.Configurator.Wpf;component/Resources/DesignA2/FilterSmall active.png"></Image>-->

                                <Expander IsExpanded="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.FilterDeviceIdActive, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                            Collapsed="ExpanderColumn1Collapsed" Grid.Column="0" Grid.Row="1" IsHitTestVisible="True" VerticalAlignment="Top" Header="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.FilterHeader}"
                                            ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.EnterFilterTerm}">
                                    
                                    <Border BorderThickness="2" >
                                        <StackPanel Margin="0 0 0 0">
                                            <!--FILTER TEXTBOX-->
                                            <TextBox Style="{DynamicResource TextBoxStyle}" Name="FilterTextBox" Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.TextFilterDeviceId, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                            ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.EnterFilterTerm}" Width="200" Height="20" FontSize="12"
                                                            BorderThickness="1" />
                                        </StackPanel>
                                    </Border>

                                </Expander>

                            </Grid>
                        </DataTemplate>

                    </DataGridTemplateColumn.HeaderTemplate>



                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate x:Uid="DataTemplate_2" DataType="model:ConfiguredMeasurementData">
                            <TextBox  Style="{DynamicResource TextBoxStyle}" x:Uid="TextBlock_3" Name="TextBlock_3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" IsReadOnly="False"
                                     Drop="DropTreeDrop" DragEnter="DropTreeDragEnter" AllowDrop="True" PreviewDragOver="OnPreviewDragOver" Validation.Error="TextBoxError"
                                     TextWrapping="Wrap"   Margin="2, 2, 2, 2">


                                <Binding Path="DeviceId" Mode="TwoWay"  NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" >
                                    <!--<Binding.ValidationRules>
                                        <validationRules:StringLengthRule MaxLength="32"/>
                                    </Binding.ValidationRules>-->
                                </Binding>

                            </TextBox>



                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <!-- Sensor UID -->
                <DataGridTemplateColumn x:Uid="DataGridTemplateColumn_3" Width="5*" IsReadOnly="True" DisplayIndex="2" ClipboardContentBinding="{Binding Path=SensorId}">

                        <DataGridTemplateColumn.HeaderStyle>
                        <Style x:Uid="Style_5" TargetType="DataGridColumnHeader">
                            <Setter x:Uid="Setter_42" Property="BorderThickness" Value="0,0,1,1" />
                            <Setter x:Uid="Setter_43" Property="BorderBrush" Value="Gray" />
                            <Setter x:Uid="Setter_53" Property="Padding" Value="5,0,0,0" />
                            <Setter x:Uid="Setter_64" Property="AutomationProperties.AutomationId" Value="automnId_DeviceTypeInfoListVw_Version" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>


                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate  DataType="viewModel:MappingControlVm">

                            <Grid IsHitTestVisible="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Uid="ColumnDefinition_1" Width="110" />
                                    <ColumnDefinition x:Uid="ColumnDefinition_1" Width="30" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition x:Uid="RowDefinition_13" Height="25" />
                                    <RowDefinition x:Uid="RowDefinition_13" Height="*" />
                                </Grid.RowDefinitions>


                                <TextBlock Grid.Column="0" VerticalAlignment="Center"  Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.SensorUidHeader}"/>
                                <!--<Image Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom"  Height="24px" Width="24px"  Source="/EH.ImsOpcBridge.Configurator.Wpf;component/Resources/DesignA2/FilterSmall active.png"></Image>-->

                                <Expander IsExpanded="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.FilterSensorIdActive, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                            Collapsed="ExpanderColumn2Collapsed" Grid.Column="0" Grid.Row="1" IsHitTestVisible="True" VerticalAlignment="Top" Header="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.FilterHeader}"
                                            ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.EnterFilterTerm}">
                                    
                                    <Border BorderThickness="2" >
                                        <StackPanel Margin="0 0 0 0">

                                            <TextBox Style="{DynamicResource TextBoxStyle}" Name="FilterTextBox" Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.TextFilterSensorId, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                            ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl }}, Path=DataContext.EnterFilterTerm}" Width="200" Height="20" FontSize="12"
                                                            BorderThickness="1" />
                                        </StackPanel>
                                    </Border>

                                </Expander>

                            </Grid>
                        </DataTemplate>

                    </DataGridTemplateColumn.HeaderTemplate>

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate x:Uid="DataTemplate_3" DataType="model:ConfiguredMeasurementData">
                    
                            <TextBox  Style="{DynamicResource TextBoxStyle}" x:Uid="TextBlock_4" Name="TextBlock_4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" IsReadOnly="False"
                                     Drop="DropTreeDrop" DragEnter="DropTreeDragEnter" AllowDrop="True" PreviewDragOver="OnPreviewDragOver" Validation.Error="TextBoxError"
                                     TextWrapping="Wrap"   Margin="2, 2, 2, 2">
                                <Binding Path="SensorId" Mode="TwoWay"  NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" >
                                    <!--<Binding.ValidationRules>
                                        <validationRules:StringLengthRule MaxLength="32"/>
                                    </Binding.ValidationRules>-->
                                </Binding>

                            </TextBox>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


            </DataGrid.Columns>
        </bv:PageableDataGrid>
    </Grid>
</UserControl>
             
                          
             
             