<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfigurationExtensionDisplayName" xml:space="preserve">
    <value>Configure</value>
  </data>
  <data name="ConfigurationExtensionHelpContent" xml:space="preserve">
    <value>These settings may be configured for this environment. Check the tooltips for each field for more information and examples.</value>
  </data>
  <data name="DBExtensionDisplayName" xml:space="preserve">
    <value>IntelliSense</value>
  </data>
  <data name="DBExtensionHelpContent" xml:space="preserve">
    <value>This list shows the modules as detected by IntelliSense. If you do not see your library here, it may not be installed correctly.</value>
  </data>
  <data name="EnvironmentPathsExtensionDisplayName" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="EnvironmentPathsExtensionHelpContent" xml:space="preserve">
    <value>This is a quick overview of the environment. Use the links to open the paths, or right-click to copy them to the clipboard.</value>
  </data>
  <data name="InstallationFailed" xml:space="preserve">
    <value>Installation failed</value>
    <comment>Used as exception text</comment>
  </data>
  <data name="InstallingPackageFailed" xml:space="preserve">
    <value>----- Failed to install '{0}' -----
</value>
    <comment>Displayed in the output window</comment>
  </data>
  <data name="InstallingPackageStarted" xml:space="preserve">
    <value>----- Installing '{0}' -----</value>
    <comment>Displayed in the output window</comment>
  </data>
  <data name="InstallingPackageSuccess" xml:space="preserve">
    <value>----- Successfully installed '{0}' -----
</value>
    <comment>Displayed in the output window</comment>
  </data>
  <data name="InstallingPipFailed" xml:space="preserve">
    <value>----- Failed to install pip -----
</value>
    <comment>Displayed in the output window</comment>
  </data>
  <data name="InstallingPipStarted" xml:space="preserve">
    <value>----- Installing pip -----</value>
    <comment>Displayed in the output window</comment>
  </data>
  <data name="InstallingPipSuccess" xml:space="preserve">
    <value>----- Successfully installed pip -----
</value>
    <comment>Displayed in the output window</comment>
  </data>
  <data name="ListFailed" xml:space="preserve">
    <value>Enumerating packages failed</value>
  </data>
  <data name="LoadingDescription" xml:space="preserve">
    <value>(Loading description...)</value>
  </data>
  <data name="MisconfiguredEnvironment" xml:space="preserve">
    <value>Operation cannot be started because the environment is not configured.</value>
    <comment>Used as exception text</comment>
  </data>
  <data name="PipDefaultIndexName" xml:space="preserve">
    <value>PyPI</value>
  </data>
  <data name="PipExtensionDisplayName" xml:space="preserve">
    <value>pip</value>
  </data>
  <data name="PipExtensionHelpContent" xml:space="preserve">
    <value>These packages can be managed using pip. Type in the search box to install new packages, or use the buttons on the right to manage those that are already installed.</value>
  </data>
  <data name="PythonToolsForVisualStudio" xml:space="preserve">
    <value>Python Tools for Visual Studio</value>
  </data>
  <data name="UninstallationFailed" xml:space="preserve">
    <value>Uninstallation failed</value>
    <comment>Used as exception text</comment>
  </data>
  <data name="UninstallingPackageFailed" xml:space="preserve">
    <value>----- Error while uninstalling '{0}' -----
'{0}' may not have been uninstalled completely.
</value>
    <comment>Displayed in the output window</comment>
  </data>
  <data name="UninstallingPackageStarted" xml:space="preserve">
    <value>----- Uninstalling '{0}' -----</value>
    <comment>Displayed in the output window</comment>
  </data>
  <data name="UninstallingPackageSuccess" xml:space="preserve">
    <value>----- Successfully uninstalled '{0}' -----
</value>
    <comment>Displayed in the output window</comment>
  </data>
</root>