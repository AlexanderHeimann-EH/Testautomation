<vstools:DialogWindowVersioningWorkaround
    x:Class="Microsoft.PythonTools.Project.AddVirtualEnvironment"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vstools="clr-namespace:Microsoft.VisualStudioTools"
    xmlns:ptvs="clr-namespace:Microsoft.PythonTools"
    xmlns:l="clr-namespace:Microsoft.PythonTools.Project"
    xmlns:il="clr-namespace:Microsoft.PythonTools.InterpreterList"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:wpf="clr-namespace:Microsoft.VisualStudioTools.Wpf"
    Title="Add Virtual Environment"
    SizeToContent="Height"
    MinWidth="300" Width="500"
    MinHeight="330"
    ScrollViewer.VerticalScrollBarVisibility="Auto"
    ResizeMode="CanResizeWithGrip"
    TextOptions.TextFormattingMode="Display"
    UseLayoutRounding="True"
    WindowStartupLocation="CenterOwner"
    ShowInTaskbar="False"
    Background="{DynamicResource {x:Static wpf:Controls.BackgroundKey}}"
    TextElement.Foreground="{DynamicResource {x:Static wpf:Controls.ForegroundKey}}">
    <vstools:DialogWindowVersioningWorkaround.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Save" CanExecute="Save_CanExecute" Executed="Save_Executed" />
        <CommandBinding Command="ApplicationCommands.Close" CanExecute="Close_CanExecute" Executed="Close_Executed" />
        <CommandBinding Command="{x:Static wpf:Commands.BrowseFolder}" CanExecute="Browse_CanExecute" Executed="Browse_Executed" />
        <CommandBinding Command="{x:Static l:AddVirtualEnvironment.WebChooseInterpreter}" CanExecute="WebChooseInterpreter_CanExecute" Executed="WebChooseInterpreter_Executed" />
    </vstools:DialogWindowVersioningWorkaround.CommandBindings>
    <vstools:DialogWindowVersioningWorkaround.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Microsoft.PythonTools;component/SharedProject/Wpf/Controls.xaml" />

                <ResourceDictionary>
                    <wpf:Lambda x:Key="BoolToVisible">(bool b) => b ? Visibility.Visible : Visibility.Hidden</wpf:Lambda>
                    <wpf:Lambda x:Key="BoolToVisibleOrCollapsed">(bool b) => b ? Visibility.Visible : Visibility.Collapsed</wpf:Lambda>
                    
                    <Style x:Key="MonoTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="FontFamily" Value="Consolas" />
                    </Style>
                    
                    <Style x:Key="WarningText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="Padding" Value="0 0 0 5" />
                    </Style>

                    <DataTemplate x:Key="NameTemplate" DataType="{x:Type ptvs:InterpreterView}">
                        <Label Name="InterpreterName" Content="{Binding Name}" />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="ErrorMessage">
                        <Grid TextElement.FontWeight="Bold"
                              TextElement.FontSize="14">
                            <Label Visibility="Collapsed"
                                   Name="BrowsePathError">
                                We could not identify a virtual environment in the selected path.
                            </Label>

                            <Label Name="BrowsePathOrigPrefixError">
                                <TextBlock TextWrapping="Wrap">
                                    <Run>We could not find a base interpreter at </Run>
                                    <Run Text="{Binding BrowseOrigPrefix}" />
                                </TextBlock>
                            </Label>
                        </Grid>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding BrowseOrigPrefix,Mode=OneTime}" Value="{x:Null}">
                                <Setter TargetName="BrowsePathError" Property="UIElement.Visibility" Value="Visible" />
                                <Setter TargetName="BrowsePathOrigPrefixError" Property="UIElement.Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                    
                    <DataTemplate x:Key="Actions">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Name="ActionsLabel">
                                Actions we will perform:
                            </Label>
                            <StackPanel Grid.Row="1" Name="Actions" Margin="12 3" Orientation="Vertical">
                                <StackPanel.Resources>
                                    <Style TargetType="Label" BasedOn="{StaticResource BulletedLabel}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Style>
                                </StackPanel.Resources>
                                <Label Name="InstallPipAndVirtualEnv">
                                    Install pip and virtualenv packages
                                </Label>
                                <Label Name="InstallPip">
                                    Install pip
                                </Label>
                                <Label Name="InstallVirtualEnv">
                                    Install the virtualenv package
                                </Label>
                                <Label Name="AddVirtualEnvironment">
                                    Add the virtual environment
                                </Label>
                                <Label Name="CreateVirtualEnv">
                                    Create a virtual environment
                                </Label>
                                <Label Name="CreateVEnv">
                                    Create a virtual environment using venv
                                </Label>
                                <Label Name="InstallRequirements">
                                    Install packages from requirements.txt
                                </Label>
                                <Label Name="CannotCreate">
                                    No action will be taken.
                                </Label>
                                <Label Name="MayNotSupportWarning">
                                    WARNING - the selected interpreter may not
                                    support virtual environments.
                                </Label>
                            </StackPanel>

                            <Label Grid.Row="0" Name="ProgressLabel" Visibility="Collapsed">
                                Working...
                            </Label>
                            <ProgressBar Grid.Row="1" Name="Progress"
                                         Visibility="Hidden"
                                         IsIndeterminate="True"
                                         VerticalAlignment="Top"
                                         MinHeight="6"
                                         Height="12"
                                         Margin="12 3" />
                        </Grid>
                        <DataTemplate.Triggers>
                            <!-- Show the progress bar if we're working -->
                            <DataTrigger Binding="{Binding IsWorking}" Value="True">
                                <Setter TargetName="ActionsLabel" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="Actions" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="ProgressLabel" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Progress" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            
                            <!-- Show both Install messages if pip is required,
                                 then hide the Pip+VirtualEnv one if we don't
                                 need virtualenv. -->
                            <DataTrigger Binding="{Binding WillInstallPip}" Value="True">
                                <Setter TargetName="InstallPip" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WillInstallVirtualEnv}" Value="True">
                                <Setter TargetName="InstallVirtualEnv" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WillInstallPip}" Value="True" />
                                    <Condition Binding="{Binding WillInstallVirtualEnv}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="InstallPip" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="InstallVirtualEnv" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="InstallPipAndVirtualEnv" Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                            <!-- Show the correct Create message, but hide both
                                 if we're not creating. -->
                            <DataTrigger Binding="{Binding UseVEnv}" Value="True">
                                <Setter TargetName="CreateVEnv" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UseVEnv}" Value="False">
                                <Setter TargetName="CreateVirtualEnv" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WillCreateVirtualEnv}" Value="False">
                                <Setter TargetName="CreateVirtualEnv" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="CreateVEnv" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <!-- Show messages if the flag says we should -->
                            <DataTrigger Binding="{Binding WillAddVirtualEnv}" Value="True">
                                <Setter TargetName="AddVirtualEnvironment" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WillInstallRequirementsTxt}" Value="True">
                                <Setter TargetName="InstallRequirements" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CannotCreateVirtualEnv}" Value="True">
                                <Setter TargetName="CannotCreate" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MayNotSupportVirtualEnv}" Value="True">
                                <Setter TargetName="MayNotSupportWarning" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                    
                    <DataTemplate x:Key="Buttons">
                        <DataTemplate.Resources>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Margin" Value="0 0 9 0" />
                                <Setter Property="MinWidth" Value="86" />
                                <Setter Property="MinHeight" Value="24" />
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </DataTemplate.Resources>
                        <StackPanel Orientation="Horizontal">
                            <Button Name="Add" IsDefault="True" Command="ApplicationCommands.Save" AutomationProperties.AutomationId="Add">
                                _Add
                            </Button>
                            <Button Name="Create" IsDefault="True" Command="ApplicationCommands.Save" AutomationProperties.AutomationId="Create">
                                <StackPanel Orientation="Horizontal">
                                    <Image Name="UACShield"
                                           Source="{x:Static wpf:Controls.UacShield}"
                                           Width="16" Height="16"
                                           VerticalAlignment="Center"
                                           Visibility="Collapsed"/>
                                    <AccessText Text="C_reate" VerticalAlignment="Center" />
                                </StackPanel>
                            </Button>
                            <Button Name="Close"
                                    Visibility="Collapsed"
                                    Command="ApplicationCommands.Close"
                                    AutomationProperties.AutomationId="Close">
                                _Close
                            </Button>
                            <Button Name="Cancel"
                                    Visibility="Visible"
                                    Command="ApplicationCommands.Close"
                                    AutomationProperties.AutomationId="Cancel">
                                _Cancel
                            </Button>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding WillAddVirtualEnv}" Value="True">
                                <Setter TargetName="Add" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WillCreateVirtualEnv}" Value="True">
                                <Setter TargetName="Create" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WillInstallElevated}" Value="True">
                                <Setter TargetName="UACShield" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsWorking}" Value="True">
                                <Setter TargetName="Close" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Cancel" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="Add" Property="IsEnabled" Value="False" />
                                <Setter TargetName="Create" Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </vstools:DialogWindowVersioningWorkaround.Resources>
    <Grid Margin="6">
        <Grid.Resources>
            <Style TargetType="wpf:LabelledControl" BasedOn="{StaticResource {x:Type wpf:LabelledControl}}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsWorking}" Value="True">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <ContentControl Grid.Row="0"
                        Content="{Binding}"
                        ContentTemplate="{StaticResource ErrorMessage}"
                        Visibility="{Binding ShowBrowsePathError,Converter={StaticResource BoolToVisibleOrCollapsed}}" />
        
        <wpf:LabelledControl Grid.Row="1"
                             Title="Location of the virtual environment">
            <wpf:LabelledControl.HelpText>
                Specify the name or location of the virtual environment. If one
                already exists, we will detect the base interpreter for you.
            </wpf:LabelledControl.HelpText>
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0"
                             Name="VirtualEnvPathTextBox"
                             AutomationProperties.AutomationId="VirtualEnvPath"
                             Style="{StaticResource MonoTextBox}"
                             Text="{Binding VirtualEnvName,UpdateSourceTrigger=PropertyChanged}" />
                    <Button Grid.Column="1"
                            Style="{StaticResource BrowseFolderButton}"
                            CommandParameter="{Binding VirtualEnvPath,Mode=OneWay}"
                            CommandTarget="{Binding ElementName=VirtualEnvPathTextBox}" />
            </Grid>
        </wpf:LabelledControl>

        <wpf:LabelledControl Grid.Row="2"
                             Visibility="{Binding WillCreateVirtualEnv,Converter={StaticResource BoolToVisible}}"
                             VerticalAlignment="Stretch"
                             Title="Select an interpreter to create the virtual environment from.">
            <wpf:LabelledControl.HelpText>
                Packages in your base interpreter will not be available in the
                virtual environment until you install them.
            </wpf:LabelledControl.HelpText>
            <ComboBox Grid.Row="3"
                      Margin="3"
                      AutomationProperties.AutomationId="BaseInterpreter"
                      VerticalAlignment="Bottom"
                      ItemsSource="{Binding Interpreters}"
                      ItemTemplate="{StaticResource NameTemplate}"
                      SelectedItem="{Binding BaseInterpreter}" />
        </wpf:LabelledControl>

        <wpf:LabelledControl Grid.Row="2"
                             Visibility="{Binding WillAddVirtualEnv,Converter={StaticResource BoolToVisible}}"
                             VerticalAlignment="Stretch"
                             Title="The virtual environment is based on this interpreter.">
            <wpf:LabelledControl.HelpText>
                This cannot be changed. To use a different base interpreter, you
                must create a new virtual environment.
            </wpf:LabelledControl.HelpText>
            <ComboBox Grid.Row="3"
                      Margin="3"
                      VerticalAlignment="Bottom"
                      IsEnabled="False"
                      ItemsSource="{Binding Interpreters}"
                      ItemTemplate="{StaticResource NameTemplate}"
                      SelectedItem="{Binding BaseInterpreter,Mode=OneWay}" />
        </wpf:LabelledControl>

        <wpf:LabelledControl Grid.Row="2"
                             Visibility="{Binding CannotCreateVirtualEnv,Converter={StaticResource BoolToVisible}}"
                             Title="We cannot create a virtual environment at the specified path.">
            <wpf:LabelledControl.HelpText>
                Choose a folder that does not exist, is empty, or contains an
                existing virtual environment.
            </wpf:LabelledControl.HelpText>
        </wpf:LabelledControl>

        <wpf:LabelledControl Grid.Row="2"
                             Visibility="{Binding NoInterpretersInstalled,Converter={StaticResource BoolToVisible}}"
                             Title="We cannot create a virtual environment.">
            <wpf:LabelledControl.HelpText>
                You will need to install a Python interpreter before creating a
                virtual environment.
            </wpf:LabelledControl.HelpText>
            <Button Style="{StaticResource NavigationButton}"
                    Margin="3"
                    VerticalAlignment="Top"
                    Command="{x:Static l:AddVirtualEnvironment.WebChooseInterpreter}">
                Go online and help me find a Python interpreter
            </Button>
        </wpf:LabelledControl>

        <wpf:LabelledControl Grid.Row="3"
                             Visibility="{Binding CanInstallRequirementsTxt,Converter={StaticResource BoolToVisibleOrCollapsed}}"
                             Title="We found a requirements.txt file.">
            <wpf:LabelledControl.HelpText>
                This file contains external packages that are required by your
                project. We can use pip to download and install these
                dependencies automatically.
            </wpf:LabelledControl.HelpText>
            <CheckBox IsChecked="{Binding WillInstallRequirementsTxt}">
                Download and _install packages
            </CheckBox>
        </wpf:LabelledControl>

        <ContentControl Grid.Row="4"
                        IsTabStop="False"
                        Focusable="False"
                        Content="{Binding}"
                        ContentTemplate="{StaticResource Actions}"
                        Margin="12 3" />

        <ContentControl Grid.Row="5"
                        IsTabStop="False"
                        Focusable="False"
                        Content="{Binding}"
                        ContentTemplate="{StaticResource Buttons}"
                        HorizontalAlignment="Right"
                        Margin="0 12 0 0" />
    </Grid>
</vstools:DialogWindowVersioningWorkaround>
