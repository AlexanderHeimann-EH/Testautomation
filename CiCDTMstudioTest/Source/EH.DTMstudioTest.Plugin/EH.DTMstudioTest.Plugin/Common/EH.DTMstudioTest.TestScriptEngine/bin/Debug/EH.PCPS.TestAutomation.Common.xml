<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EH.PCPS.TestAutomation.Common</name>
    </assembly>
    <members>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage
            </summary>
            <example><code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code></example>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>
            </summary>
            <example><code>
            [NotNull] public object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code></example>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/>-like form
            </summary>
            <example><code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code></example>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as format-string
            </param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException"/>
            </summary>
            <example><code>
            public void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code></example>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface
             and this method is used to notify that some property value changed
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example><code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               private string _name;
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() =&gt; Property)</c></item>
             <item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted.<br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)
            for method output means that the methos doesn't return normally.<br/>
            <c>canbenull</c> annotation is only applicable for output parameters.<br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row,
            or use single attribute with rows separated by semicolon.<br/>
            </syntax>
            <examples><list>
            <item><code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null, and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code></item>
            <item><code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list></examples>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not
            </summary>
            <example><code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
              private string str = "my string"; // Warning: Localizable string
            }
            </code></example>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            </summary>
            <example><code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
              public void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code></example>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            </summary>
            <example><code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code></example>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly
            (e.g. via reflection, in external library), so this symbol
            will not be marked as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper
            to not mark symbols marked with such attributes as unused
            (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used</summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member</summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type</summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly
            when marked with <see cref="T:EH.PCPS.TestAutomation.Common.Annotations.MeansImplicitUseAttribute"/>
            or <see cref="T:EH.PCPS.TestAutomation.Common.Annotations.UsedImplicitlyAttribute"/>
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used</summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used</summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled
            when the invoked method is on stack. If the parameter is a delegate,
            indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated
            while the method is executed
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>
            </summary>
            <example><code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
              const int a = 2, b = 2;
              Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code></example>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder
            within a web project. Path can be relative or absolute,
            starting from web root (~)
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that
            the parameter is an MVC controller. If applied to a method,
            the MVC controller name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(String, String)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(String, Object)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that
            the parameter is an MVC partial view. If applied to a method,
            the MVC partial view name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling all inspections
            for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name
            </summary>
            <example><code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code></example>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Annotations.HtmlAttributeValueAttribute.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.ArgumentHelper">
            <summary>
            The argument helper.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.ArgumentHelper.IsSilent(System.String[])">
            <summary>
            Check if argument "Silent" is used
            </summary>
            <param name="args">
            The args.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.ArgumentHelper.IsHelpNeeded(System.String[])">
            <summary>
            The is help needed.
            </summary>
            <param name="args">
            The args.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.ArgumentHelper.GetControlDocumentArgument(System.String[])">
            <summary>
            The get control document argument.
            </summary>
            <param name="argumentss">
            The argumentss.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.ArgumentHelper.ShowHelp">
            <summary>
            The show help.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configuration.ReportHelper">
            <summary>
            Provides information from DTM studio Test to be used within the test framework
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configuration.ReportHelper.ReportPath">
            <summary>
            Gets or sets the report path.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configuration.LoaderHelper">
            <summary>
                Provides helper functions for methods related to Loader
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configuration.LoaderHelper.AssemblyProvider">
            <summary>
            'key' is assembly name
            'value is the related assembly
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configuration.LoaderHelper.InitializeAssemblyProvider">
            <summary>
            Pre load all needed assemblies
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configuration.LoaderHelper.CreateInstance(System.String,System.String)">
            <summary>
            Provides an instance of an specific Assembly
            </summary>
            <param name="executionDirectory">Key for dictionary</param>
            <param name="namespacePath">Namespace for specific function</param>
            <returns>
            <br>Object: in case of success</br>
            <br>Null: in case of an error</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configuration.LoaderHelper.GetLoadedAssemblyNames">
            <summary>
            Get assembly names as debug information
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configuration.LoaderHelper.AddAssembly(System.String)">
            <summary>
            Adds an assembly to the assembly dictionary
            </summary>
            <param name="executionDirectory">Location of assembly</param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.DataTypes.Communication">
            <summary>
            Communication can hold information about a CommunicationDTM
            including a list of communication settings
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DataTypes.Communication.protocol">
            <summary>
            The protocol parameter
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DataTypes.Communication.communicationDriverName">
            <summary>
            The communicationDriverName parameter
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DataTypes.Communication.communicationHardwareName">
            <summary>
            The communicationHardwareName parameter
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DataTypes.Communication.communicationSettings">
            <summary>
            The communicationSettings list
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.DataTypes.Communication.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.DataTypes.Communication"/> class.
            </summary>
            <param name="communicationConfiguration">
            The communication settings.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.DataTypes.Communication.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.DataTypes.Communication"/> class. 
            </summary>
            <param name="protocolName">
            The name of the protocol
            </param>
            <param name="communicationDriverName">
            The name of the communication driver (modem)
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.DataTypes.Communication.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.DataTypes.Communication"/> class. 
            </summary>
            <param name="protocolName">
            The name of the protocol
            </param>
            <param name="communicationDriverName">
            The name of the communication driver
            </param>
            <param name="communicationHardwareName">
            The name of the communication hardware
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.DataTypes.Communication.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{EH.PCPS.TestAutomation.Common.DataTypes.CommunicationSetting})">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.DataTypes.Communication"/> class. 
            </summary>
            <param name="protocolName">
            The name of the protocol
            </param>
            <param name="communicationDriverName">
            The name of the communication driver
            </param>
            <param name="communicationHardwareName">
            The name of the communication hardware
            </param>
            <param name="communicationSettings">
            A list of <see cref="P:EH.PCPS.TestAutomation.Common.DataTypes.Communication.CommunicationSettings"/> objects which contain necessary settings
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.DataTypes.Communication.Protocol">
            <summary>
            Gets or sets the protocol parameter
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.DataTypes.Communication.CommunicationDriverName">
            <summary>
            Gets or sets the communication Driver Name parameter
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.DataTypes.Communication.CommunicationHardwareName">
            <summary>
            Gets or sets the communicationHardwareName parameter
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.DataTypes.Communication.CommunicationSettings">
            <summary>
            Gets or sets the communicationSettings list
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.DataTypes.Communication.GetSpecificSetting(System.String)">
            <summary>
            The Get Specific Setting function
            </summary>
            <param name="settingName">Setting to search for</param>
            <returns>Communication Settings object</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.DataTypes.CommunicationSetting">
            <summary>
            CommunicationSetting represents a single communication setting
            which can be used to configure Communication DTMs
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DataTypes.CommunicationSetting.settingName">
            <summary>
            The name parameter
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DataTypes.CommunicationSetting.settingValue">
            <summary>
            The value parameter
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.DataTypes.CommunicationSetting.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.DataTypes.CommunicationSetting"/> class. 
            </summary>
            <param name="settingName">
            The name of the setting
            </param>
            <param name="settingValue">
            The value of the setting
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.DataTypes.CommunicationSetting.IsValidlyConfigured">
            <summary>
            Gets or sets a value indicating whether is validly configured.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.DataTypes.CommunicationSetting.SettingName">
            <summary>
            Gets or sets the setting name.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.DataTypes.CommunicationSetting.SettingValue">
            <summary>
            Gets or sets the setting value.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.DataTypes.Device">
            <summary>
            Device can hold information about a DeviceDTM
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DataTypes.Device.protocol">
            <summary>
            The protocol parameter
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DataTypes.Device.deviceDriverName">
            <summary>
            The deviceDriverName parameter
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DataTypes.Device.deviceHardwareName">
            <summary>
            The deviceHardwareName parameter
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.DataTypes.Device.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.DataTypes.Device"/> class.
            </summary>
            <param name="protocolName">The name of the protocol</param>
            <param name="deviceDriverName">The name of the device driver</param>
            <param name="deviceHardwareName">The name of the device hardware (modem)</param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.DataTypes.Device.Protocol">
            <summary>
            Gets or sets the protocol parameter
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.DataTypes.Device.DeviceDriverName">
            <summary>
            Gets or sets the deviceDriverName parameter
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.DataTypes.Device.DeviceHardwareName">
            <summary>
            Gets or sets the deviceHardwareName parameter
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.CompareParameter">
            <summary>
            Class CompareParameter.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CompareParameter.offlineValue">
            <summary>
            The offline value.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CompareParameter.onlineValue">
            <summary>
            The online value.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CompareParameter.parameterName">
            <summary>
            The parameter name.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.CompareParameter.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.CompareParameter"/> class.
            </summary>
            <param name="parameterName">
            Name of the parameter.
            </param>
            <param name="offlineValue">
            The offline value.
            </param>
            <param name="onlineValue">
            The online value.
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.CompareParameter.OfflineValue">
            <summary>
            Gets the offline value.
            </summary>
            <value>The offline value.</value>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.CompareParameter.OnlineValue">
            <summary>
            Gets the online value.
            </summary>
            <value>The online value.</value>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.CompareParameter.ParameterName">
            <summary>
            Gets the name of the parameter.
            </summary>
            <value>The name of the parameter.</value>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.ConnectionState">
            <summary>
            The connection state.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ConnectionState.Connected">
            <summary>
                Connection state is connected
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ConnectionState.Disconnected">
            <summary>
                Connection state is disconnected
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ConnectionState.Unknown">
            <summary>
                Connection state is unknown
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ConnectionState.Error">
            <summary>
                Connection state is error
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ConnectionState.Connecting">
            <summary>
                Connection state connecting
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ConnectionState.Disconnecting">
            <summary>
                Connection state disconnecting
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ConnectionState.Disturbed">
            <summary>
                Connection state disturbed
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.CurveType">
            <summary>
                Curve Types for Set Cursor in Envelope Curve
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.Free">
            <summary>
            The free.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.EnvelopeCurve">
            <summary>
            The envelope curve.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.WeightingCurve">
            <summary>
            The weighting curve.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.Map">
            <summary>
            The map.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.EditableMap">
            <summary>
            The editable map.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.ThresholdTankBottom">
            <summary>
            The threshold tank bottom.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.FirstEchoCurve">
            <summary>
            The first echo curve.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.IdealEchoFromFile">
            <summary>
            The ideal echo from file.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.IdealEchoCurve">
            <summary>
            The ideal echo curve.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.ReferenceCurve">
            <summary>
            The reference curve.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.ThresholdGpc">
            <summary>
            The threshold gpc.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.CurveType.RawEnvelopeCurve">
            <summary>
            The raw envelope curve.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.EditorType">
            <summary>
                Different editor types
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.EditorType.ComboBox">
            <summary>
                Editor type is combo box
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.EditorType.EditField">
            <summary>
                Editor type is edit field
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.EditorType.CheckBox">
            <summary>
                Editor type is check box
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.EditorType.Unknown">
            <summary>
                Editor type is unknown
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.EditorType.EditFieldReadOnly">
            <summary>
                Editor type is read only edit field
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.FF912DiagnosticCategories">
            <summary>
            The ff 912 error categoriescs.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.FF912DiagnosticCategories.Failure">
            <summary>
            The failure.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.FF912DiagnosticCategories.FunctionCheck">
            <summary>
            The function check.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.FF912DiagnosticCategories.OutOfSpecification">
            <summary>
            The out of specification.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.FF912DiagnosticCategories.MaintenanceRequired">
            <summary>
            The maintenance required.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.MethodType">
            <summary>
            The method type.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.MethodType.NotDefined">
            <summary>
            The not defined.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.MethodType.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState">
            <summary>
            The parameter state.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.Insecure">
            <summary>
                Parameter is insecure
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.Invalid">
            <summary>
                Parameter is invalid
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.Valid">
            <summary>
                Parameter is valid
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.Modified">
            <summary>
                Parameter modification is valid
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.Dynamic1">
            <summary>
                Parameter is dynamic
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.Dynamic2">
            <summary>
                Parameter is dynamic
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.ModifiedOutOfRange">
            <summary>
                Parameter is out of range
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.ModifiedInvalidFormat">
            <summary>
                Parameter has invalid format
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.ModifiedWrong">
            <summary>
                Parameter value is wrong
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.WriteFailed">
            <summary>
                Parameter not written
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterState.NotRecognized">
            <summary>
                Parameter state is not recognized
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.ParameterType">
            <summary>
            The parameter type.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterType.Text">
            <summary>
                Parameter type is text
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterType.Enumeration">
            <summary>
                Parameter type is enumeration
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterType.BitEnumeration">
            <summary>
                Parameter type is bit enumeration
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.ParameterType.Unknown">
            <summary>
                Parameter type is unknown
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.TestCategory">
            <summary>
            The test category.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestCategory.NotDefined">
            <summary>
            The not defined.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestCategory.SetupDelivery">
            <summary>
            The setup delivery.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestCategory.Regression">
            <summary>
            The regression.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestCategory.Performance">
            <summary>
            The performance.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestCategory.DeviceTypeAcceptance">
            <summary>
            The about box.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.TestDefinition">
            <summary>
            The test definition.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestDefinition.Predefined">
            <summary>
            The predefined.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestDefinition.UserDefined">
            <summary>
            The user defined.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus">
            <summary>
            The test focus.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.NotDefined">
            <summary>
            The not defined.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.ParameterizationOnline">
            <summary>
            The parameterization online.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.ParameterizationOffline">
            <summary>
            The parameterization offline.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.EnvelopeCurve">
            <summary>
            The envelope curve.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.LinearizationOnline">
            <summary>
            The linearization online.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.LinearizationOffline">
            <summary>
            The linearization offline.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.SaveRestore">
            <summary>
            The save restore.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.CreateDocumentation">
            <summary>
            The create documentation.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.Compare">
            <summary>
            The compare.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.Concentration">
            <summary>
            The concentration.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.ExtendedHistoRom">
            <summary>
            The extended histo rom.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.EventList">
            <summary>
            The event list.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.Viscosity">
            <summary>
            The viscosity.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestFocus.AboutBox">
            <summary>
            The about box.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Enumerations.TestScript">
            <summary>
            The test script.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestScript.NotDefined">
            <summary>
            Not defined
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestScript.TestCase">
            <summary>
            TestCase: contains TestModules calls and functions calls from TestFramework
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Enumerations.TestScript.TestModule">
            <summary>
            TestModule: contains functions calls from TestFramework
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.CodeModules.CopyRecursiveFilesFolders">
            <summary>
            It is often required to copy a folder or files – modified by the system under test – to initialize the test data. 
            This code module copies a folder, including the files and subfolders which are part of it to a given location.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.CodeModules.CopyRecursiveFilesFolders.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.CodeModules.CopyRecursiveFilesFolders.FromLocation">
            <summary>
            
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.CodeModules.CopyRecursiveFilesFolders.ToLocation">
            <summary>
            
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.CodeModules.CopyRecursiveFilesFolders.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.CodeModules.CreateSystemSummary">
            <summary>
            Description of CreateSystemSummary.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.CodeModules.CreateSystemSummary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Tools.CodeModules.CreateSystemSummary"/> class. 
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.CodeModules.CreateSystemSummary.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.CodeModules.GetVersionInfo">
            <summary>
            Reads the version information of a file.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.CodeModules.GetVersionInfo.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.CodeModules.GetVersionInfo.pathToFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.CodeModules.GetVersionInfo.file">
            <summary>
            
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.CodeModules.GetVersionInfo.TestSuiteVariableToSaveValue">
            <summary>
            Optional variable to save the value within a Test Suite variable!
            If you set it to an empty string or leave it unbound, the value will not be saved in any variable!
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.CodeModules.GetVersionInfo.testSuiteVariableToSaveValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.CodeModules.GetVersionInfo.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.CodeModules.SystemSleep">
            <summary>
            Description of SystemSleep.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.CodeModules.SystemSleep.millisecs">
            <summary>
            System Sleep for 'n' milliseconds
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.CodeModules.SystemSleep.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.Cygwin">
            <summary>
            This Cygwin Class is to group all Cygwin function methods in one class.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Cygwin.StartCygwin(System.String)">
            <summary>
            Starts the cygwin.
            </summary>
            <param name="cygwinPath">The cygwin path.</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Cygwin.EnterCommandInCygwin(System.String)">
            <summary>
            Enters the command in cygwin.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.GetProgramFilesPath">
            <summary>
            This class contains a method to return the ProgramFiles Path
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.GetProgramFilesPath.GetProgramFilesPath32Bit">
            <summary>
            This method returns the ProgramFiles Path for 32 Bit applications
            </summary>
            <returns>The program files path as string</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.InstallationCheck">
            <summary>
            Description of IsProgramInstalled.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.InstallationCheck.IsProgramInstalled(System.String,System.Boolean)">
            <summary>
            Checks for a specific program if it is installed on that system by checking the
            registry-key values under SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall
            </summary>
            <param name="programDisplayName">The name of the program to check for</param>
            <param name="exceptionOnFail">Specifies if method should throw an exception on failure</param>
            <returns>Returns true if the program is installed, false if it is not
            ElementNotFoundException: if exceptionOnFail is true and program is not installed</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.Logging.Log">
            <summary>
            The log.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.Debug(System.Object,System.String)">
            <summary>
            The debug.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.Enter(System.Object,System.String)">
            <summary>
            The enter.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.Error(System.Object,System.String)">
            <summary>
            The error.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.ErrorEx(System.Object,System.Exception,System.String)">
            <summary>
            The error ex.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.Failure(System.Object,System.String,System.Exception)">
            <summary>
            The failure.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
            <param name="error">
            The error.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.Fatal(System.Object,System.String)">
            <summary>
            The fatal.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.FatalEx(System.Object,System.Exception,System.String)">
            <summary>
            The fatal ex.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.Info(System.Object,System.String)">
            <summary>
            The info.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.Initialize(System.String)">
            <summary>
            The initialize.
            </summary>
            <param name="loggerConfigurationPath">
            The logger configuration path.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.Success(System.Object,System.String)">
            <summary>
            The success.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.TimeStamp(System.Object,System.String)">
            <summary>
            The time stamp.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.Warn(System.Object,System.String)">
            <summary>
            The warn.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventDebug(System.String)">
            <summary>
            The debug.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventDebug(System.Object,System.String)">
            <summary>
            The debug.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventEnter(System.String)">
            <summary>
            The enter.
            </summary>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventEnter(System.Object,System.String)">
            <summary>
            The enter.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventError(System.String)">
            <summary>
            The error.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventError(System.Object,System.String)">
            <summary>
            The error.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventErrorEx(System.Object,System.Exception,System.String)">
            <summary>
            The error ex.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventFailure(System.Object,System.String,System.Exception)">
            <summary>
            The failure.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
            <param name="error">
            The error.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventFatal(System.Object,System.String)">
            <summary>
            The fatal.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventFatalEx(System.Object,System.Exception,System.String)">
            <summary>
            The fatal ex.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventInfo(System.String)">
            <summary>
            The info.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventInfo(System.Object,System.String)">
            <summary>
            The info.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventSuccess(System.String)">
            <summary>
            The success.
            </summary>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventSuccess(System.Object,System.String)">
            <summary>
            The success.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventWarn(System.String)">
            <summary>
            The warn.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log.WinEventWarn(System.Object,System.String)">
            <summary>
            The warn.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.SpecialLogs.TimeStamp">
            <summary>
            Class TimeStamp.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog">
            <summary>
            Class Log4NetLog.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.LoggerConfigurationFile">
            <summary>
            The logger configuration file
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.BasicInitialize">
            <summary>
            Basics the initialize.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Debug(System.Object,System.String)">
            <summary>
            Debugs the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Debug(System.Object,System.String,System.Object[])">
            <summary>
            Debugs the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Dispose(System.Object,System.Boolean)">
            <summary>
            Disposes the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="disposing">
            if set to <c>true</c> [disposing].
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Enter(System.Object,System.String)">
            <summary>
            Enters the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Enter(System.Object,System.String,System.Object[])">
            <summary>
            Enters the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
            <param name="arguments">
            The arguments.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Error(System.Object,System.String)">
            <summary>
            Errors the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Error(System.Object,System.String,System.Object[])">
            <summary>
            Errors the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.ErrorEx(System.Object,System.Exception,System.String)">
            <summary>
            Errors the ex.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.ErrorEx(System.Object,System.Exception,System.String,System.Object[])">
            <summary>
            Errors the ex.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Failure(System.Object,System.String,System.Exception)">
            <summary>
            Failures the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
            <param name="error">
            The error.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Failure(System.Object,System.String,System.Exception,System.Object[])">
            <summary>
            Failures the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
            <param name="error">
            The error.
            </param>
            <param name="results">
            The results.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Fatal(System.Object,System.String)">
            <summary>
            Fatals the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Fatal(System.Object,System.String,System.Object[])">
            <summary>
            Fatals the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.FatalEx(System.Object,System.Exception,System.String)">
            <summary>
            Fatals the ex.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.FatalEx(System.Object,System.Exception,System.String,System.Object[])">
            <summary>
            Fatals the ex.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Info(System.Object,System.String)">
            <summary>
            Informations the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Info(System.Object,System.String,System.Object[])">
            <summary>
            Informations the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Success(System.Object,System.String)">
            <summary>
            Successes the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Success(System.Object,System.String,System.Object[])">
            <summary>
            Successes the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
            <param name="results">
            The results.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.TimeStamp(System.Object,System.String)">
            <summary>
            Times the stamp.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.TimeStamp(System.Object,System.String,System.Object[])">
            <summary>
            Times the stamp.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Warn(System.Object,System.String)">
            <summary>
            Warns the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.Warn(System.Object,System.String,System.Object[])">
            <summary>
            Warns the specified sender.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.XmlInitialize">
            <summary>
            XMLs the initialize.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.XmlInitialize(System.String)">
            <summary>
            XMLs the initialize.
            </summary>
            <param name="loggerConfigurationPath">
            The logger configuration path.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.Log4Net.Log4NetLog.FindLogger(System.Object)">
            <summary>
            The find logger.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <returns>
            The <see cref="T:log4net.ILog"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog">
            <summary>
            The windows event log.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.LoggerConfigurationFile">
            <summary>
            The logger configuration file.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.eventLogEntryType">
            <summary>
            The event log entry type.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.loggerConfigurationPath">
            <summary>
            The logger configuration path.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.productName">
            <summary>
            The source.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.IsWinEventLoggingActive">
            <summary>
            Gets or sets a value indicating whether is Win Event Logging Activate.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Debug(System.String)">
            <summary>
            The debug.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Debug(System.Object,System.String)">
            <summary>
            The debug.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Enter(System.String)">
            <summary>
            The enter.
            </summary>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Enter(System.Object,System.String)">
            <summary>
            The enter.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Error(System.String)">
            <summary>
            The error.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Error(System.Object,System.String)">
            <summary>
            The error.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.ErrorEx(System.String,System.Exception)">
            <summary>
            The error ex.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="ex">
            The ex.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.ErrorEx(System.Object,System.Exception,System.String)">
            <summary>
            The error ex.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Failure(System.String,System.Exception)">
            <summary>
            The failure.
            </summary>
            <param name="method">
            The method.
            </param>
            <param name="ex">
            The ex.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Failure(System.Object,System.String,System.Exception)">
            <summary>
            The failure.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
            <param name="ex">
            The ex.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.FailureAudit(System.String)">
            <summary>
            The failure audit.
            </summary>
            <param name="text">
            The text.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.FailureAudit(System.Object,System.String)">
            <summary>
            The failure audit.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="text">
            The text.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Fatal(System.String)">
            <summary>
            The fatal.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Fatal(System.Object,System.String)">
            <summary>
            The fatal.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.FatalEx(System.Exception,System.String)">
            <summary>
            The fatal ex.
            </summary>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.FatalEx(System.Object,System.Exception,System.String)">
            <summary>
            The fatal ex.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="ex">
            The ex.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Info(System.String)">
            <summary>
            The info.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Info(System.Object,System.String)">
            <summary>
            The info.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Initialize(System.String)">
            <summary>
            The initialize.
            </summary>
            <param name="loggerConfigurationFolder">
            The logger configuration folder.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Success(System.String)">
            <summary>
            The success.
            </summary>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Success(System.Object,System.String)">
            <summary>
            The success.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="method">
            The method.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.SuccessAudit(System.String)">
            <summary>
            The success audit.
            </summary>
            <param name="text">
            The text.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.SuccessAudit(System.Object,System.String)">
            <summary>
            The success audit.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="text">
            The text.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Warn(System.String)">
            <summary>
            The warn.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.Warn(System.Object,System.String)">
            <summary>
            The warn.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WindowsEventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            The write entry.
            </summary>
            <param name="source">
            The source.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="writeEntryEventLogEntryType">
            The event log entry type.
            </param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.EhEventLogEntryType">
            <summary>
            The eh event log entry type.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.EhEventLogEntryType.Error">
            <summary>
            The error.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.EhEventLogEntryType.Warning">
            <summary>
            The warning.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.EhEventLogEntryType.Information">
            <summary>
            The information.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.EhEventLogEntryType.Debug">
            <summary>
            The debug.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.EhEventLogEntryType.SuccessAudit">
            <summary>
            The success audit.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.EhEventLogEntryType.FailureAudit">
            <summary>
            The failure audit.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WinEventLogConfiguration">
            <summary>
            The win event log configuration.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WinEventLogConfiguration.EhEventLogEntryType">
            <summary>
            Gets or sets the eh event log entry type.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WinEventLogConfiguration.EhEventLogEntryTypeXml">
            <summary>
            Gets or sets the eh event log entry type xml.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WinEventLogConfiguration.Source">
            <summary>
            Gets or sets the source.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WinEventLogConfiguration.IsWinEventLoggingActive">
            <summary>
            Gets or sets a value indicating whether the Windows Event logging is active.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Logging.WinEventView.WinEventLogConfiguration.GetConfiguration(System.String)">
            <summary>
            The get configuration.
            </summary>
            <param name="loggerConfigurationPath">
            The logger configuration path.
            </param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.ProcessMemoryInfo">
            <summary>
            Description of MemoryInfo.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.ProcessMemoryInfo.PrintMemoryInfo(System.Diagnostics.Process)">
            <summary>
            This method gets the private physical memory allocated for the process.
            This method does only work for windows systems higher than Windows XP
            </summary>
            <param name="process">The System.Process to print the memory of</param>
            <returns>The Private Working Set (string) memory of the specific process</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions">
            <summary>
            This class provides the different methods which are necessary to check and compare
            actual values against reference values during a test run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.AreEqual(System.Boolean,System.Boolean,System.String)">
            <summary>
            Verifies whether two booleans are equal. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True if values are equal, false if not.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.AreEqual(System.Int32,System.Int32,System.String)">
            <summary>
            Verifies whether two integer are equal. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True if values are equal, false if not.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.AreEqual(System.String,System.String,System.String)">
            <summary>
            Verifies whether two strings are equal. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True if values are equal, false if not.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.AreEqual(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Verifies whether two doubles are equal. They are considered equal if the absolute value of their difference is less than or equal to a specified limit.        
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison.
            </param>
            <param name="difference">
            The difference at which two doubles are considered equal.
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            true if values are equal, false if not
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.AreNotEqual(System.Boolean,System.Boolean,System.String)">
            <summary>
            Verifies whether two booleans are different. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            true if values are different, false if not.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.AreNotEqual(System.Int32,System.Int32,System.String)">
            <summary>
            Verifies whether two integer are different. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            true if values are different, false if not.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.AreNotEqual(System.String,System.String,System.String)">
            <summary>
            Verifies whether two strings are different. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            true if values are different, false if not.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.AreNotEqual(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Verifies whether two doubles are different. They are considered equal if the absolute value of their difference is less  than or equal to a specified limit.
            The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            reference value
            </param>
            <param name="testValue">
            test value
            </param>
            <param name="difference">
            The difference at which two doubles are considered equal.
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            true if values are not equal, false if not.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.Contains(System.String,System.String,System.String)">
            <summary>
            Verifies whether two booleans are equal. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True if values are equal, false if not.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.Greater(System.Double,System.Double,System.String)">
            <summary>
            Verifies that the test value is greater than the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True: if the test value is greater than the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.Greater(System.Int32,System.Int32,System.String)">
            <summary>
            Verifies that the test value is greater than the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True: if the test value is greater than the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.Greater(System.String,System.String,System.String)">
            <summary>
            Verifies that the test value is greater than the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True: if the test value is greater than the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.GreaterOrEqual(System.Double,System.Double,System.String)">
            <summary>
            Verifies that the test value is greater than or equal to the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True: if the test value is greater than or equal to the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.GreaterOrEqual(System.Int32,System.Int32,System.String)">
            <summary>
            Verifies that the test value is greater than or equal to the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True: if the test value is greater than or equal to the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.GreaterOrEqual(System.String,System.String,System.String)">
            <summary>
            Verifies that the test value is greater than or equal to the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison. 
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True: if the test value is greater than or equal to the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.IsValueInBound(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Verify that the test value is approximately the same as the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison.
            </param>
            <param name="bound">
            The allowed difference between the test value and the reference value.
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True: if the test value is approximately the same as the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.IsValueInBound(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Verify that the test value is approximately the same as the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison.
            </param>
            <param name="bound">
            The allowed difference between the test value and the reference value.
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True: if the test value is approximately the same as the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.IsValueInBound(System.String,System.String,System.Double,System.String)">
            <summary>
            Verify that the test value is approximately the same as the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for comparison.
            </param>
            <param name="testValue">
            Test value for comparison.
            </param>
            <param name="bound">
            The allowed difference between the test value and the reference value.
            </param>
            <param name="description">
            Description for the comparison.
            </param>
            <returns>
            True: if the test value is approximately the same as the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.IsValueInTolerance(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Determines whether the test value doesn't differ more than the toleranceInPercent percentage. The user can add a message which will be shown in the test report.
            from the reference value.
            </summary>
            <param name="referenceValue">
            Reference value for comparison
            </param>
            <param name="testValue">
            Test value for comparison
            </param>
            <param name="toleranceInPercent">
            The tolerance in percent.
            </param>
            <param name="description">
            The description for the comparison
            </param>
            <returns>
            True: if the test value is within the tolerance. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.IsValueInTolerance(System.String,System.String,System.Double,System.String)">
            <summary>
            Determines whether the test value doesn't differ more than the toleranceInPercent percentage. The user can add a message which will be shown in the test report.
            from the reference value.
            </summary>
            <param name="referenceValue">
            Reference value for the comparison
            </param>
            <param name="testValue">
            Test value for the comparison
            </param>
            <param name="toleranceInPercent">
            The tolerance in percent.
            </param>
            <param name="description">
            The description for the comparison
            </param>
            <returns>
            True: if the test value is within the tolerance. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.Less(System.Double,System.Double,System.String)">
            <summary>
            Verifies that the test value is less than the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for the comparison
            </param>
            <param name="testValue">
            Test value for the comparison
            </param>
            <param name="description">
            The description for the comparison
            </param>
            <returns>
            True: if the test value is less than the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.Less(System.Int32,System.Int32,System.String)">
            <summary>
            Verifies that the test value is less than the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for the comparison
            </param>
            <param name="testValue">
            test value for the comparison
            </param>
            <param name="description">
            The description for the comparison
            </param>
            <returns>
            True: if the test value is less than the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.Less(System.String,System.String,System.String)">
            <summary>
            Verifies that the test value is less than the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for the comparison
            </param>
            <param name="testValue">
            test value for the comparison
            </param>
            <param name="description">
            The description for the comparison
            </param>
            <returns>
            True: if the test value is less than the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.LessOrEqual(System.Double,System.Double,System.String)">
            <summary>
            Verifies that the test value is less than or equal to the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for the comparison
            </param>
            <param name="testValue">
            test value for the comparison
            </param>
            <param name="description">
            The description for the comparison
            </param>
            <returns>
            True: if the test value is less than or equal to the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.LessOrEqual(System.Int32,System.Int32,System.String)">
            <summary>
            Verifies that the test value is less than or equal to the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for the comparison
            </param>
            <param name="testValue">
            test value for the comparison
            </param>
            <param name="description">
            The description for the comparison
            </param>
            <returns>
            True: if the test value is less than or equal to the reference value. False: otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.AssertFunctions.LessOrEqual(System.String,System.String,System.String)">
            <summary>
            Verifies that the test value is less than or equal to the reference value. The user can add a message which will be shown in the test report.
            </summary>
            <param name="referenceValue">
            Reference value for the comparison
            </param>
            <param name="testValue">
            test value for the comparison
            </param>
            <param name="description">
            The description for the comparison
            </param>
            <returns>
            True: if the test value is less than or equal to the reference value. False: otherwise.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.Log">
            <summary>
            Encapsulates the RANOREX report functionality
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Failure(System.String,System.String)">
            <summary>
            Report functionality for case "Failure"
            </summary>
            <param name="source">
            Current method/source method
            </param>
            <param name="message">
            Message containing information regarding current action and it's result
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Failure(System.String)">
            <summary>
            The failure.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Debug(System.String,System.String)">
            <summary>
            The debug.
            </summary>
            <param name="source">
            The source.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Debug(System.String)">
            <summary>
            The debug.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Error(System.String,System.String)">
            <summary>
            Report functionality for case "Error"
            </summary>
            <param name="source">
            Current method/source method
            </param>
            <param name="message">
            Message containing information regarding current action and it's result
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Error(System.String)">
            <summary>
            The error.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Info(System.String,System.String)">
            <summary>
            Report functionality for case "Info"
            </summary>
            <param name="source">
            Current method/source method
            </param>
            <param name="message">
            Message containing information regarding current action and it's result
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Info(System.String)">
            <summary>
            The info.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Success(System.String,System.String)">
            <summary>
            Report functionality for case "Success" 
            </summary>
            <param name="source">
            Current method/source method
            </param>
            <param name="message">
            Message containing information regarding current action and it's result
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Success(System.String)">
            <summary>
            The success.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Warn(System.String,System.String)">
            <summary>
            Report functionality for case "Warn" 
            </summary>
            <param name="source">
            Current method/source method
            </param>
            <param name="message">
            Message containing information regarding current action and it's result
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Warn(System.String)">
            <summary>
            The warn.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Screenshot">
            <summary>
            Report functionality for case "Screenshot" 
            </summary>        
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.Screenshot(Ranorex.Core.Element)">
            <summary>
            Report functionality for case "Screenshot for specified Element" 
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.BeginTestSuite(System.String)">
            <summary>
            Begins the test suite.
            </summary>
            <param name="testSuiteName">Name of the test suite.</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.BeginTestCase(System.String)">
            <summary>
            Begins the test case.
            </summary>
            <param name="testCaseName">Name of the test case.</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.BeginTestModule(System.String)">
            <summary>
            Begins the test module.
            </summary>
            <param name="testCaseModule">The test case module.</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.EndTestCase">
            <summary>
            Ends the test case.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.EndTestModule">
            <summary>
            Ends the test module.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.Log.SaveReport">
            <summary>
            Begins the test suite.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.StringCombine">
            <summary>
            The string combine.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.StringCombine.Combine(System.String[])">
            <summary>
            The combine.
            </summary>
            <param name="folders">
            The folders.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.FileWatcher">
            <summary>
            The file watcher allows the user to monitor file operations for files with a specified file extension in a specified folder
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Tools.FileWatcher.watcher">
            <summary>
            The watcher.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.FileWatcher.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Tools.FileWatcher"/> class. 
            Generates a File System Watcher, sets path, event handler and filter
            </summary>
            <param name="path">
            Path of the directory to watch, most likely @"C:\"
            </param>
            <param name="filter">
            file extension to watch
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Tools.FileWatcher.EventFired">
            <summary>
            Gets or sets a value indicating whether event fired.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.FileWatcher.StartFileWatcher">
            <summary>
            Enables Event raising
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.FileWatcher.StopFileWatcher">
            <summary>
            Disables Event raising
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.FileWatcher.WaitUntilEventFired(System.Int32)">
            <summary>
            Wait until file is modified
            </summary>
            <param name="timeOutInMilliseconds">time until action must be done</param>
            <returns>
                <br>True: if file is modified or created</br>
                <br>False: if an error occurred</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.FileWatcher.OnChanged(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Event handler for "changed" events
            </summary>
            <param name="source">
            The source.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.FileWatcher.OnCreated(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Event handler for "created" events
            </summary>
            <param name="source">
            The source.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.LogInfo">
            <summary>
            The log info.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.LogInfo.Namespace(System.Reflection.MethodBase)">
            <summary>
            The namespace.
            </summary>
            <param name="methodBase">
            The method base.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.StringToListConverter">
            <summary>
            Class StringToListConverter.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.StringToListConverter.Run(System.String)">
            <summary>
            Converts a semicolon separated input string (xxxx;xxxx;xxxx xx; xxxx) to a list
            </summary>
            <param name="input">
            The input string.
            </param>
            <returns>
            This list with the separated elements of the input string.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.StringToStringArrayConverter">
            <summary>
            Class StringToStringArrayConverter.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.StringToStringArrayConverter.Run(System.String)">
            <summary>
            Converts a semicolon separated input string (xxxx;xxxx;xxxx xx; xxxx) to an array.
            </summary>
            <param name="input">
            The input string.
            </param>
            <returns>
            An array with the separated elements of the input string.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Tools.WaitXSeconds">
            <summary>
            Class WaitXSeconds.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.WaitXSeconds.Run">
            <summary>
            Waits for 10 seconds.
            </summary>
            <returns><c>true</c> if waiting finished.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Tools.WaitXSeconds.Run(System.Int32)">
            <summary>
            Waits for a specified amount of seconds.
            </summary>
            <param name="secondsToWait">
            The amount of seconds to wait.
            </param>
            <returns>
            <c>true</c> if waiting finished.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysDeditec">
            <summary>
            Description of Deditec_Get_relays.
            </summary>
            
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysDeditec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysDeditec"/> class. 
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysDeditec.relaysID">
            <summary>
            
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysDeditec.CardAddresse">
            <summary>
            
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysDeditec.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Relay.CodeModules.SetRelaysDeditec">
            <summary>
            Description of Deditec_Set_relays.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.CodeModules.SetRelaysDeditec.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.CodeModules.SetRelaysDeditec.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysQlib">
            <summary>
            Description of relaysClear.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysQlib.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysQlib"/> class. 
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysQlib.CardAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysQlib.UnsetBit">
            <summary>
            
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.CodeModules.ClearRelaysQlib.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Relay.CodeModules.SetRelaysQlib">
            <summary>
            Description of relaysSet.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.CodeModules.SetRelaysQlib.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.CodeModules.SetRelaysQlib.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Relay.RelaysAccessMethodsQlib">
            <summary>
            Use the Relay card Quancom USB Relay 8.
            Note: Driver and hardware must be installed.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelaysAccessMethodsQlib.ClearAll(System.UInt32)">
            <summary>
            Clears all Relay settings to default 0.
            </summary>
            <param name="cardAddress">
            The card address defined via dip switches.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelaysAccessMethodsQlib.ClearChannel(System.UInt32,System.UInt32)">
            <summary>
            Clear a single bit.
            </summary>
            <param name="cardAddress">
            The card address defined via dip switches.
            </param>
            <param name="unsetBit">
            The Relay to clear.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelaysAccessMethodsQlib.GetValue(System.UInt32)">
            <summary>
            Gets the value currently set to Relay.
            </summary>
            <param name="cardAddress">
            The card Address.
            </param>
            <returns>
            The <see cref="T:System.UInt32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelaysAccessMethodsQlib.SetAll(System.UInt32)">
            <summary>
            The set all.
            </summary>
            <param name="cardAddress">
            The card address.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelaysAccessMethodsQlib.SetChannel(System.UInt32,System.UInt32)">
            <summary>
            Set a single Relay.
            </summary>
            <param name="cardAddress">
            The card Address.
            </param>
            <param name="setBit">
            The set Bit.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelaysAccessMethodsQlib.SetValue(System.UInt32,System.UInt32)">
            <summary>
            Set new value to Relay.
            </summary>
            <param name="cardAddress">
            The card address defined via dip switches.
            </param>
            <param name="setBits">
            The Relay (bits) to set.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelaysAccessMethodsQlib.Uint8ToBinArray(System.UInt32)">
            <summary>
            uint8s to bin array.
            </summary>
            <param name="unsignedInt">
            The uint.
            </param>
            <returns>
            The <see>
                    <cref>uint[]</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelaysAccessMethodsQlib.Binpow(System.UInt32)">
            <summary>
            Binpows the specified exponent.
            </summary>
            <param name="exponent">
            The exponent.
            </param>
            <returns>
            The <see cref="T:System.UInt32"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec">
            <summary>
            Contains methods to interact with a Deditec Ethernet Relay Card
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.ReadAll(System.UInt32,System.Boolean@)">
            <summary>
            Reads all channel values of a Relay card
            </summary>
            <param name="cardAddress">
            The address of the card
            </param>
            <param name="allNotSet">
            True if all Relay channels have the value 0
            </param>
            <returns>
            An int array containing all channel values. Index corresponds to the channel number
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.ReadMultiple(System.UInt32,System.UInt32[],System.Boolean@)">
            <summary>
            Reads multiple Relay channels
            </summary>
            <param name="cardAddress">
            The address of the card
            </param>
            <param name="relay">
            The relay.
            </param>
            <param name="allNotSet">
            True if all Relay channels have value 0
            </param>
            <returns>
            An int array containing the channel values. Input and output arrays have the same index for the same channel
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.ReadSingle(System.UInt32,System.UInt32,System.Boolean@)">
            <summary>
            Reads a single Relay channel value
            </summary>
            <param name="cardAddress">
            The address of the card
            </param>
            <param name="relay">
            The Relay to read
            </param>
            <param name="allNotSet">
            True if all Relay channels have the value 0
            </param>
            <returns>
            0 or 1 if channel has a value, -1 if error occured
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.SetAll(System.UInt32,System.UInt32,System.Boolean@)">
            <summary>
            Sets all Relay of a card to a specified state
            </summary>
            <param name="cardAddress">
            The address of the card
            </param>
            <param name="bitValue">
            The value to set (0 or 1)
            </param>
            <param name="result">
            Used for reporting: true if the action was successful (setting all Relay)
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.SetMultiple(System.UInt32,System.UInt32,System.UInt32[],System.Boolean@)">
            <summary>
            Sets multiple Relay to a specific value and validates them
            </summary>
            <param name="cardAddress">
            The address of the Relay card
            </param>
            <param name="bitValue">
            The value to set (0 or 1)
            </param>
            <param name="relay">
            A uint array containing all Relay to set
            </param>
            <param name="result">
            Used for reporting: true if the action was successful (setting multiple Relay)
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.SetSingle(System.UInt32,System.UInt32,System.UInt32,System.Boolean@)">
            <summary>
            Sets a single Relay to a specific value
            </summary>
            <param name="cardAddress">
            The address of the card
            </param>
            <param name="relay">
            The Relay to set
            </param>
            <param name="bitValue">
            The value to set (0 or 1)
            </param>
            <param name="result">
            Used for reporting: true if the action was successful (setting a Relay)
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.CloseModule(System.UInt32)">
            <summary>
            Closes a module
            </summary>
            <param name="handle">
            The handle of the opened card
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.DigitalOutputSet16(System.UInt32,System.UInt32)">
            <summary>
            The do set 16.
            </summary>
            <param name="cardHandle">
            The card handle.
            </param>
            <param name="bitValue">
            The bit value.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.DigitalOutputSet32(System.UInt32,System.UInt32)">
            <summary>
            The do set 32.
            </summary>
            <param name="cardHandle">
            The card handle.
            </param>
            <param name="bitValue">
            The bit value.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.DOSet64(System.UInt32,System.UInt64)">
            <summary>
            The do set 64.
            </summary>
            <param name="cardHandle">
            The card handle.
            </param>
            <param name="bitValue">
            The bit value.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.DigitalOutputSet8(System.UInt32,System.UInt32)">
            <summary>
            The do set 8.
            </summary>
            <param name="cardHandle">
            The card handle.
            </param>
            <param name="bitValue">
            The bit value.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.GetCardDigitalOutputSize(System.UInt32)">
            <summary>
            Gets the size out the digital outputs from the card
            </summary>
            <param name="handle">
            The handle of the opened card
            </param>
            <returns>
            The digital output size of the card
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.GetCardHandle(System.UInt32)">
            <summary>
            Gets the card handle from a RO_ETH module on a specific card address
            </summary>
            <param name="cardAddress">
            The address where the card is configured
            </param>
            <returns>
            The handle from the opened card
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.ReadbackAll(System.UInt32)">
            <summary>
            Reads all values from all Relay of a card up to a size of 64 DO channels
            </summary>
            <param name="cardHandle">
            The handle of the opened card
            </param>
            <returns>
            The values of all DO channels of a card
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.SetArraySize(System.UInt32,System.Int32)">
            <summary>
            The set array size.
            </summary>
            <param name="cardDigitalOutputSize">
            The card do size.
            </param>
            <param name="binaryArrayLength">
            The binary array length.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.SetValueToRelay(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sets a value to a specific DO channel
            </summary>
            <param name="cardHandle">
            The handle of the opened card
            </param>
            <param name="relay">
            The Relay to set
            </param>
            <param name="bitValue">
            The value to set (0 or 1)
            </param>
            <returns>
            True if the Relay was correctly set
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.SplitBinaryString(System.String)">
            <summary>
            Splits a string containing binary values to a char array
            </summary>
            <param name="binaryValues">
            A string containing binary values
            </param>
            <returns>
            A char array containing all binary values
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.ToBinary(System.UInt64)">
            <summary>
            The to binary.
            </summary>
            <param name="decimalNumber">
            The decimal.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.ValidateRelayState(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Validates a specific Relay for a specific value
            </summary>
            <param name="cardHandle">
            The handle of the opened card
            </param>
            <param name="relay">
            The Relay to validate
            </param>
            <param name="bitValue">
            The value to validate for (0 or 1)
            </param>
            <returns>
            True if the Relay has the correct value
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Relay.RelayAccessMethodsDeditec.ValidateRelayState(System.UInt32,System.UInt32)">
            <summary>
            Validates all DO channels of a card
            </summary>
            <param name="cardHandle">
            The handle of the opened card
            </param>
            <param name="bitValue">
            The value to validate for (0 or 1)
            </param>
            <returns>
            True if all Relay have the correct value
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration">
            <summary>
            The configuration.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.pathToConfigurationXml">
            <summary>
            The path to configuration xml.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.SelectedConfiguration">
            <summary>
            Gets or sets the selected items.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.SelectableConfiguration">
            <summary>
            Gets the selectable items.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.HostApplication">
            <summary>
            Gets path to frame specific code
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.HostApplicationNamespace">
            <summary>
            Gets path to Host Application Namespace
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.Communication">
            <summary>
            Gets path to frame specific code
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.CommunicationNamespace">
            <summary>
            Gets path to Communication Namespace
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.OperatingSystem">
            <summary>
            Gets path to operating system specific code
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.OperatingSystemNamespace">
            <summary>
            Gets path to Operating SystemNamespace
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.DeviceFunction">
            <summary>
            Gets path to DeviceFunction specific code
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.DeviceFunctionNamespace">
            <summary>
            Gets path to DeviceFunctionNamespace
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.Initialize(System.String)">
            <summary>
            The initialize.
            </summary>
            <param name="pathToXmlFile">
            The xml file.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.GetDataFromHardDisk">
            <summary>
            Starts recursive call to get folders and functions for configuration dialog
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.GetDataFromDirectory(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            The get data from directory.
            </summary>
            <param name="currentDirectory">
            The current directory.
            </param>
            <param name="listOfStrings">
            The list of strings.
            </param>
            <returns>
            The List of strings
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.CleanListOfFoldersAndFiles(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            The clean list of folders and files.
            </summary>
            <param name="partOfPathToDelete">
            The part of path to delete.
            </param>
            <param name="foldersAndFiles">
            The folders and files.
            </param>
            <returns>
            The List of strings
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.GetXmlSourcePath">
            <summary>
            The get xml source path.
            </summary>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.ValidateTestFrameworkPaths">
            <summary>
            The validate test framework paths.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.GetPathToConfigurationXml">
            <summary>
            The get path to configuration xml.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.Configuration.GetPathToAssemblies">
            <summary>
            The get path to assemblies.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.BO.ListToObjectConverter">
            <summary>
            The list to object converter.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.ListToObjectConverter.ConvertFromListToConfigurationItems(System.Collections.Generic.List{System.String},EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.SelectedConfiguration)">
            <summary>
            Converts one dimensional list to ConfigurationItems
            </summary>
            <param name="foldersAndFiles">List of found folders and items</param>
            <param name="selectedConfiguration">Available information from configuration file</param>
            <returns>Selectable Items</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.ListToObjectConverter.AddListToConfigurationItems(EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.SelectedConfiguration,EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.SelectableConfiguration,EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.CategoryAndItems,System.String)">
            <summary>
            Add List To Configuration Items
            </summary>
            <param name="selectedConfiguration">Available information from configuration file</param>
            <param name="selectableConfiguration">Container to store available information from hard disk into</param>
            <param name="categoryAndItems">Found category and items to put into "selectableItems"</param>
            <param name="folder">Found folder to put into "selectableItems"</param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.BO.RegistryHandler">
            <summary>
            Contains methods to get values from OS registry.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.RegistryHandler.GetPathFromRegistry">
            <summary>
            Get installation path of TestPackage from registry
            </summary>
            <returns>
            path as string
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.BO.XmlFileHandler">
            <summary>
            The xml file handler.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.XmlFileHandler.ReadDataFromXml(System.String)">
            <summary>
            Read data from xml-file
            </summary>
            <param name="fileName">
            name of xml-file
            </param>
            <returns>
            Selected Items
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.XmlFileHandler.WriteDataToXml(EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.SelectedConfiguration,System.String)">
            <summary>
            Write data into xml-file
            </summary>
            <param name="selectedConfiguration">source object</param>
            <param name="fileName">name of xml-file</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.BO.XmlFileHandler.WriteEmptyXmlFile(System.String,System.String)">
            <summary>
            Write an nearly empty xml-file
            </summary>
            <param name="pathToConfigurationXml">
            The path To Configuration Xml.
            </param>
            <param name="pathToAssemblies">
            The path To Assemblies.
            </param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.CategoryAndItems">
            <summary>
            The category and items.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.CategoryAndItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.CategoryAndItems"/> class.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.CategoryAndItems.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.CategoryAndItems"/> class.
            </summary>
            <param name="category">
            The category.
            </param>
            <param name="items">
            The items.
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.CategoryAndItems.Category">
            <summary>
            Gets or sets the category.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.CategoryAndItems.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.SelectableConfiguration">
            <summary>
            The selectable items.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.SelectableConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.SelectableConfiguration"/> class.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.SelectableConfiguration.OperatingSystemItems">
            <summary>
            Gets or sets the operating system items.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.SelectableConfiguration.CommunicationItems">
            <summary>
            Gets or sets the communication items.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.SelectableConfiguration.HostApplicationItems">
            <summary>
            Gets or sets the host application items.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.SelectableConfiguration.DeviceFunctionsItems">
            <summary>
            Gets or sets the device functions items.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.ListOfCategoryAndItems">
            <summary>
            The list of category and items.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.ListOfCategoryAndItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.ListOfCategoryAndItems"/> class.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.ListOfCategoryAndItems.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.SelectedConfiguration">
            <summary>
            Class SelectedConfiguration.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.SelectedConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.SelectedConfiguration"/> class.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.SelectedConfiguration.TestEnvironment">
            <summary>
            Gets or sets the test environment.
            </summary>
            <value>The test environment.</value>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.SelectedConfiguration.TestFramework">
            <summary>
            Gets or sets the test framework.
            </summary>
            <value>The test framework.</value>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.SelectedConfiguration.TestInformation">
            <summary>
            Gets or sets the test information.
            </summary>
            <value>The test information.</value>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.Element">
            <summary>
            The element.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.Element.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.Element"/> class. 
            Constructor without parameters. Fields are initialized with empty strings.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.Element.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.Element"/> class. 
            Constructor with three parameters. Fields are initialized with specific values:
            </summary>
            <param name="folder">
            The folder.
            </param>
            <param name="category">
            The category.
            </param>
            <param name="assembly">
            The assembly.
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.Element.Folder">
            <summary>
            Gets or sets Folder
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.Element.Category">
            <summary>
            Gets or sets Category
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.Element.Assembly">
            <summary>
            Gets or sets Assembly
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.Element.AssemblyNamespace">
            <summary>
            Gets Assembly Namespace
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestEnvironment">
            <summary>
            The test environment.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestEnvironment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestEnvironment"/> class.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestEnvironment.Communication">
            <summary>
            Gets or sets the communication.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestEnvironment.HostApplication">
            <summary>
            Gets or sets the host application.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestEnvironment.OperatingSystem">
            <summary>
            Gets or sets the operating system.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestEnvironment.DeviceFunction">
            <summary>
            Gets or sets the device functions.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestFramework">
            <summary>
            The test framework.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestFramework.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestFramework"/> class.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestFramework.PathToAssemblies">
            <summary>
            Gets or sets the path to assemblies.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation">
            <summary>
            The test information.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation"/> class.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation.DateOfTest">
            <summary>
            Gets or sets the date of test.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation.NameOfTester">
            <summary>
            Gets or sets the name of tester.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation.Company">
            <summary>
            Gets or sets the company.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation.DeviceType">
            <summary>
            Gets or sets the device type.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation.DeviceId">
            <summary>
            Gets or sets the device id.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation.DeviceSerialNumber">
            <summary>
            Gets or sets the device serial number.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation.DeviceTypeProjectPath">
            <summary>
            Gets or sets the path to device type project.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog">
            <summary>
            The configurator dialog.
            </summary>
            <summary>
            The configurator dialog.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.pathToConfigurationFile">
            <summary>
            The path to configuration file.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog"/> class.
            </summary>
            <param name="pathToConfig">
            The path To Config.
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.SelectedConfiguration">
            <summary>
            Gets or sets the selected items.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.SelectableConfiguration">
            <summary>
            Gets or sets the selectable items.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.ControlTestFramework">
            <summary>
            Gets or sets the control test framework.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.ControlTestEnvironment">
            <summary>
            Gets or sets the control test environment.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.ControlTestInformation">
            <summary>
            Gets or sets the control test information.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.SaveConfiguratorDialogData">
            <summary>
            The save configurator dialog data.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.Initialize(System.String)">
            <summary>
            The initialize.
            </summary>
            <param name="configFile">
            The config File.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.SetConfiguratorDialogData">
            <summary>
            The set configurator dialog data.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.GetConfiguratorDialogData">
            <summary>
            The get configurator dialog data.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.ButtonStartClick(System.Object,System.EventArgs)">
            <summary>
            The button start_ click.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.ButtonApplyClick(System.Object,System.EventArgs)">
            <summary>
            The button apply_ click.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.SaveData">
            <summary>
            The save data.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.ButtonCancelClick(System.Object,System.EventArgs)">
            <summary>
            The button cancel_ click.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.tabControlConfigurationDialog">
            <summary>
            The tab control configuration dialog.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.tabPageTestEnvironment">
            <summary>
            The tab page test environment.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.tabPageTestFramework">
            <summary>
            The tab page test framework.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.tabPageAdditionalInformation">
            <summary>
            The tab page additional information.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.buttonStart">
            <summary>
            The button start.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.buttonApply">
            <summary>
            The button apply.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.buttonCancel">
            <summary>
            The button cancel.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ConfiguratorDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestInformation">
            <summary>
            The control test information.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestInformation"/> class.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestInformation.TestInformation">
            <summary>
            Gets or sets the test information.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestInformation.SetTestInformationData(EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestInformation)">
            <summary>
            The set test information data.
            </summary>
            <param name="testInformation">
            The test information.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestInformation.GetTestInformationData">
            <summary>
            The get test information data.
            </summary>
            <returns>
            The <see cref="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestInformation.TestInformation"/>.
            </returns>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestInformation.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestInformation.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestInformation.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment">
            <summary>
            The control test environment.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment"/> class.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.#ctor(EH.PCPS.TestAutomation.Common.Configurator.Data.MultipleData.SelectableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment"/> class.
            </summary>
            <param name="selectableItems">
            The selectable items.
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.TestEnvironment">
            <summary>
            Gets or sets the test environment.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.SelectableItems">
            <summary>
            Gets or sets the selectable items.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.SetTestEnvironmentData(EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestEnvironment)">
            <summary>
            The set test environment data.
            </summary>
            <param name="testEnvironment">
            The test environment.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.GetTestEnvironmentData">
            <summary>
            The get test environment data.
            </summary>
            <returns>
            The <see cref="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.TestEnvironment"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.InitializeTestEnvironmentControls">
            <summary>
            The initialize test environment controls.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.InitializeComboBoxOperatingSystemCategory">
            <summary>
            The initialize combo box operating system category.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.InitializeComboBoxHostApplicationCategory">
            <summary>
            The initialize combo box host application category.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.InitializeComboBoxCommunicationCategory">
            <summary>
            The initialize combo box communication category.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.InitializeComboBoxDeviceFunctionCategory">
            <summary>
            The initialize combo box device function category.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.ComboBoxOperatingSystemBitVersionSelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            The combo box operating system bit version_ selected index changed.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.ComboBoxHostApplicationTypeSelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            The combo box host application type_ selected index changed.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.ComboBoxCommunicationProtocolSelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            The combo box communication protocol_ selected index changed.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.ComboBoxDeviceFunctionPlatformSelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            The combo box device function platform_ selected index changed.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.UpdateComboBoxOperatingSystemNameVersion">
            <summary>
            The update combo box operating system name version.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.UpdateComboBoxHostApplicationNameVersion">
            <summary>
            The update combo box host application name version.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.UpdateComboBoxCommunicationNameVersion">
            <summary>
            The update combo box communication name version.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.UpdateComboBoxDeviceFunctionPackage">
            <summary>
            The update combo box device function package.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestEnvironment.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework">
            <summary>
            The control test framework.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework"/> class.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework.TestFrameworkData">
            <summary>
            Gets or sets the test framework data.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework.SetTestFrameworkData(EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestFramework)">
            <summary>
            The set test framework data.
            </summary>
            <param name="testFrameworkData">
            The test framework data.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework.GetTestFrameworkData">
            <summary>
            The get test framework data.
            </summary>
            <returns>
            The <see cref="T:EH.PCPS.TestAutomation.Common.Configurator.Data.SingleData.TestFramework"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework.buttonFolderBrowserConfiguration_Click(System.Object,System.EventArgs)">
            <summary>
            The button folder browser configuration_ click.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework.buttonFolderBrowserAssemblies_Click(System.Object,System.EventArgs)">
            <summary>
            The button folder browser assemblies_ click.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Configurator.GUI.ControlTestFramework.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.CreateDocumentationStateStrings">
            <summary>
                Strings of module Create Documentation in several languages
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CreateDocumentationStateStrings.InitializedEN">
            <summary>
                State string
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CreateDocumentationStateStrings.PreparePrintingEN">
            <summary>
                State string
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CreateDocumentationStateStrings.PrintingEN">
            <summary>
                State string
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CreateDocumentationStateStrings.PrintingCanceledEN">
            <summary>
                State string
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CreateDocumentationStateStrings.PrintingFinishedEN">
            <summary>
                State string
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CreateDocumentationStateStrings.PrintingFinishedWithErrorEN">
            <summary>
                State string
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.CSVConnector">
            <summary>
                Represents a data connector to a CSV-file.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CSVConnector.dt">
            <summary>
            The Data Table
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.CSVConnector.fileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.CSVConnector.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.CSVConnector.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.CSVConnector" /> class.
            </summary>
            <param name="fileName">The path to the CSV file.</param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.CSVConnector.Rows">
            <summary>
                Gets the data rows.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.CSVConnector.Header">
            <summary>
                Gets the data columns.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.DeviceDTMList">
            <summary>
            Provides function handle a DeviceDTMList as input for testing
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.DeviceDTMList.GetDeviceDTMList(System.String)">
            <summary>
            Gets the device DTM list.
            </summary>
            <param name="pathToData">The path to data.</param>
            <returns>List of Strings</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.BO.ITestCase">
            <summary>
            Description of ITestCase.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.BO.ITestCase.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.BO.ITestCase.PreCondition">
            <summary>
            Gets or sets the pre condition.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.BO.ITestCase.PostCondition">
            <summary>
            Gets or sets the post condition.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.BO.ITestCase.ID">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestStatus">
            <summary>
            Description of TestStatus.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestStatus.Status">
            <summary>
            The status.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestStatus.Status.ConfigNotCopied">
            <summary>
            The config not copied.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestStatus.Status.Running">
            <summary>
            The running.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestStatus.Status.Finished">
            <summary>
            The finished.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestStatus.Status.Timeout">
            <summary>
            The timeout.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestSuiteTypes">
            <summary>
            Description of TestResultItemTypes.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestSuiteTypes.Types">
            <summary>
            The types.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestSuiteTypes.Types.Benchmarking">
            <summary>
            The benchmarking.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper">
            <summary>
            Description of DISEHHelper.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.CONNECT_CMD_SAVECRED">
            <summary>
            The connect_ cm d_ savecred.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NO_ERROR">
            <summary>
            The n o_ error.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.RESOURCETYPE_DISK">
            <summary>
            The resourcetyp e_ disk.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.disehMeasTechMapping">
            <summary>
            The diseh meas tech mapping.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.disehProtocolMapping">
            <summary>
            The diseh protocol mapping.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.disehPwd">
            <summary>
            The diseh pwd.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.disehServerName">
            <summary>
            The diseh server name.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.disehUser">
            <summary>
            The diseh user.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper"/> class.
            </summary>
            <param name="disehServerName">
            The diseh server name.
            </param>
            <param name="disehUser">
            The diseh user.
            </param>
            <param name="disehPwd">
            The diseh pwd.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper"/> class.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.MeasTechMapping">
            <summary>
            Gets the meas tech mapping.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.ProtocolMapping">
            <summary>
            Gets the protocol mapping.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.GetDriveLetter">
            <summary>
            The get drive letter.
            </summary>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.GetDriverPathForDevice(EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device,System.String)">
            <summary>
            The get driver path for device.
            </summary>
            <param name="device">
            The device.
            </param>
            <param name="pamToolName">
            The pam tool name.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.MapDISEH">
            <summary>
            The map diseh.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.WNetAddConnection2(EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NETRESOURCE@,System.String,System.String,System.UInt32)">
            <summary>
            The w net add connection 2.
            </summary>
            <param name="lpNetResource">
            The lp net resource.
            </param>
            <param name="lpPassword">
            The lp password.
            </param>
            <param name="lpUserName">
            The lp user name.
            </param>
            <param name="dwFlags">
            The dw flags.
            </param>
            <returns>
            The <see cref="T:System.UInt32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.GetNextDriveLetter">
            <summary>
            The get next drive letter.
            </summary>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.IsDISEHMapped">
            <summary>
            The is diseh mapped.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NETRESOURCE">
            <summary>
            The netresource.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NETRESOURCE.dwScope">
            <summary>
            The dw scope.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NETRESOURCE.dwType">
            <summary>
            The dw type.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NETRESOURCE.dwDisplayType">
            <summary>
            The dw display type.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NETRESOURCE.dwUsage">
            <summary>
            The dw usage.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NETRESOURCE.lpLocalName">
            <summary>
            The lp local name.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NETRESOURCE.lpRemoteName">
            <summary>
            The lp remote name.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NETRESOURCE.lpComment">
            <summary>
            The lp comment.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.DISEHHelper.NETRESOURCE.lpProvider">
            <summary>
            The lp provider.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory">
            <summary>
            Description of ReportDirectory.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.DeviceFamily">
            <summary>
            The device family.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.DeviceFirmware">
            <summary>
            The device firmware.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.DeviceIid">
            <summary>
            The device iid.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.DeviceType">
            <summary>
            The device type.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.PathMeasTech">
            <summary>
            The path meas tech.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.PathProtocol">
            <summary>
            The path protocol.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.destinationDirectory">
            <summary>
            The destination directory.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.deviceMeasTech">
            <summary>
            The device meas tech.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.deviceProtocol">
            <summary>
            The device protocol.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.sourceDirectory">
            <summary>
            The source dir.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.#cctor">
            <summary>
            Initializes static members of the <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory"/> class.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.MoveReportsToDirectory(System.Int32,System.Int32)">
            <summary>
            The move reports to directory.
            </summary>
            <param name="testRunID">
            The test run id.
            </param>
            <param name="deviceIID">
            The device iid.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.MoveReportsToFailDirectory">
            <summary>
            Moves the reports to fail directory.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.MoveReportsToFailDirectory(System.Int32)">
            <summary>
            The move reports to fail directory.
            </summary>
            <param name="deviceIID">
            The device iid.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.DoCopyFolder">
            <summary>
            The do copy folder.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.GetShortPathName(System.String,System.Text.StringBuilder,System.UInt32)">
            <summary>
            The get short path name.
            </summary>
            <param name="lpszLongPath">
            The lpsz long path.
            </param>
            <param name="lpszShortPath">
            The lpsz short path.
            </param>
            <param name="cchBUffer">
            The cch b uffer.
            </param>
            <returns>
            The <see cref="T:System.UInt32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.ToShortPathName(System.String)">
            <summary>
            The to short path name.
            </summary>
            <param name="sLongFileName">
            The s long file name.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.CreateDirectoryAndMoveAll">
            <summary>
            The create directory and move all.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.ReportDirectory.MoveFiles(System.String[])">
            <summary>
            The move files.
            </summary>
            <param name="filePaths">
            The file paths.
            </param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.SilexConnector">
            <summary>
            Description of SilexConnector.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.SilexConnector.ip">
            <summary>
            The ip.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.SilexConnector.#cctor">
            <summary>
            Initializes static members of the <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.SilexConnector"/> class.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.SilexConnector.Action">
            <summary>
            The action.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.SilexConnector.Action.Connect">
            <summary>
            The connect.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.SilexConnector.Action.Disconnect">
            <summary>
            The disconnect.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.SilexConnector.PerformOnDevice(System.String,EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.SilexConnector.Action)">
            <summary>
            The perform on device.
            </summary>
            <param name="deviceName">
            The device name.
            </param>
            <param name="action">
            The action.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.SilexConnector.GetFullDeviceName(System.String)">
            <summary>
            The get full device name.
            </summary>
            <param name="deviceName">
            The device name.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper">
            <summary>
            Description of TestlabHelper.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.CONNECT_CMD_SAVECRED">
            <summary>
            The connect_cmd_savecred.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NO_ERROR">
            <summary>
            The n o_ error.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.RESOURCETYPE_DISK">
            <summary>
            The resourcetyp e_ disk.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.pathToExe">
            <summary>
            The path to exe.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.testlabJobLocation">
            <summary>
            The testlab job location.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.testlabPwd">
            <summary>
            The testlab pwd.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.testlabShare">
            <summary>
            The testlab share.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.testlabUser">
            <summary>
            The testlab user.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.vmName">
            <summary>
            The vm name.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.testlabDriveLetter">
            <summary>
            The testlab drive letter.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper"/> class.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper"/> class.
            </summary>
            <param name="testlabShare">
            The testlab share.
            </param>
            <param name="testlabUser">
            The testlab user.
            </param>
            <param name="testlabPwd">
            The testlab pwd.
            </param>
            <param name="testlabJobLocation">
            The testlab job location.
            </param>
            <param name="vmName">
            The vm name.
            </param>
            <param name="pathToExe">
            The path to exe.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.MapTestlab">
            <summary>
            The map testlab.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.MoveJobXMLToExeDir">
            <summary>
            The move job xml to exe dir.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.WriteStatusFileToTestlab(EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestStatus.Status)">
            <summary>
            The write status file to testlab.
            </summary>
            <param name="status">
            The status.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.WNetAddConnection2(EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NETRESOURCE@,System.String,System.String,System.UInt32)">
            <summary>
            The w net add connection 2.
            </summary>
            <param name="lpNetResource">
            The lp net resource.
            </param>
            <param name="lpPassword">
            The lp password.
            </param>
            <param name="lpUserName">
            The lp user name.
            </param>
            <param name="dwFlags">
            The dw flags.
            </param>
            <returns>
            The <see cref="T:System.UInt32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.GetNextDriveLetter">
            <summary>
            The get next drive letter.
            </summary>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.IsTestlabMapped">
            <summary>
            The is testlab mapped.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NETRESOURCE">
            <summary>
            The netresource.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NETRESOURCE.dwScope">
            <summary>
            The dw scope.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NETRESOURCE.dwType">
            <summary>
            The dw type.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NETRESOURCE.dwDisplayType">
            <summary>
            The dw display type.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NETRESOURCE.dwUsage">
            <summary>
            The dw usage.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NETRESOURCE.lpLocalName">
            <summary>
            The lp local name.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NETRESOURCE.lpRemoteName">
            <summary>
            The lp remote name.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NETRESOURCE.lpComment">
            <summary>
            The lp comment.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.Helper.TestlabHelper.NETRESOURCE.lpProvider">
            <summary>
            The lp provider.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCase">
            <summary>
            Description of TestCase.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCase.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCase.precondition">
            <summary>
            The precondition.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCase.postcondition">
            <summary>
            The postcondition.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCase.id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCase.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCase.PreCondition">
            <summary>
            Gets or sets the pre condition.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCase.PostCondition">
            <summary>
            Gets or sets the post condition.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCase.ID">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCaseLoader">
            <summary>
            Description of TestCaseLoader.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCaseLoader.databaseConnector">
            <summary>
            The database connector
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCaseLoader.reader">
            <summary>
            The reader.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCaseLoader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCaseLoader"/> class.
            </summary>
            <param name="targetDataBase">
            The target database.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestCases.TestCaseLoader.GetTestCaseByID(System.Int32)">
            <summary>
            The get test case by id.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.BO.ITestCase"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.BenchmarkingTestResultItem">
            <summary>
            Description of ResultItem.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.BenchmarkingTestResultItem.results">
            <summary>
            The results.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.BenchmarkingTestResultItem.resultType">
            <summary>
            The result type.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.BenchmarkingTestResultItem.ResultType">
            <summary>
            The result type.
            </summary>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.BenchmarkingTestResultItem.ToString">
            <summary>
            The to string.
            </summary>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.BenchmarkingTestResultItem.AddResult(System.String,System.String,System.Object)">
            <summary>
            The add result.
            </summary>
            <param name="functionName">
            The function name.
            </param>
            <param name="functionDescription">
            The function description.
            </param>
            <param name="durationMilliseconds">
            The duration milliseconds.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.BenchmarkingTestResultItem.ClearResults">
            <summary>
            The clear results.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.BenchmarkingTestResultItem.GetResults">
            <summary>
            The get results.
            </summary>
            <returns>
            The <see cref="!:List"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device">
            <summary>
            Description of Device.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device.Communication">
            <summary>
            Gets or sets the communication.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device.DISEHPath">
            <summary>
            Gets or sets the diseh path.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device.Family">
            <summary>
            Gets or sets the family.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device.Firmware">
            <summary>
            Gets or sets the firmware.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device.IID">
            <summary>
            Gets or sets the iid.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device.MeasTech">
            <summary>
            Gets or sets the meas tech.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device.Revision">
            <summary>
            Gets or sets the revision.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device.Root">
            <summary>
            Gets or sets the root.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.ITestResultItem">
            <summary>
            Description of TestResultItem.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.ITestResultItem.ResultType">
            <summary>
            The result type.
            </summary>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.ITestResultItem.ToString">
            <summary>
            The to string.
            </summary>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.ITestResultItem.AddResult(System.String,System.String,System.Object)">
            <summary>
            The add result.
            </summary>
            <param name="function">
            The function.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="result">
            The result.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.ITestResultItem.ClearResults">
            <summary>
            The clear results.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.ITestResultItem.GetResults">
            <summary>
            The get results.
            </summary>
            <returns>
            The <see cref="!:List"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.PAMTool">
            <summary>
            Description of PAMTool.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.PAMTool.ID">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.PAMTool.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.PAMTool.Vendor">
            <summary>
            Gets or sets the vendor.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.PAMTool.Version">
            <summary>
            Gets or sets the version.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun">
            <summary>
            Description of TestRun.
            Contains all information about the Test environment.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.databaseConnector">
            <summary>
            The database Connector.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.isInitialized">
            <summary>
            The is initialized.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.targetDatabase">
            <summary>
            The target database.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.testSequence">
            <summary>
            The test sequence.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.device">
            <summary>
            The device.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.iterations">
            <summary>
            The iterations.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.pamtool">
            <summary>
            The pamtool.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.reportPath">
            <summary>
            The report path.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.sysEnvParamValue">
            <summary>
            The sys env param value.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.testCaseID">
            <summary>
            The test case id.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.testFunctionName">
            <summary>
            The test function name.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.testRunID">
            <summary>
            The test run id.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun"/> class.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.Device">
            <summary>
            Gets or sets the device.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.IsInitialized">
            <summary>
            Gets a value indicating whether is initialized.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.JobID">
            <summary>
            Gets or sets the job id.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.PAMTool">
            <summary>
            Gets or sets the pam tool.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.ReportPath">
            <summary>
            Gets or sets the report path.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.SysEnvParamID">
            <summary>
            Gets or sets the sys env param id.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.SysEnvParamValue">
            <summary>
            Gets or sets the sys env param value.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.SystemID">
            <summary>
            Gets or sets the system id.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.TargetDB">
            <summary>
            Gets the target db.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.TestCaseID">
            <summary>
            Gets or sets the test case id.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.TestResultItem">
            <summary>
            Gets or sets the test result item.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.TestSequence">
            <summary>
            Gets the test sequence.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.TestSystem">
            <summary>
            Gets or sets the test system.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.Tester">
            <summary>
            Gets or sets the tester.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.TestrunID">
            <summary>
            Gets the testrun id.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.VMWare">
            <summary>
            Gets or sets the vm ware.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.WiringID">
            <summary>
            Gets or sets the wiring id.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun.save">
            <summary>
            The save.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade">
            <summary>
            Description of TestResultItemFactory.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.LogFile">
            <summary>
            The log file.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.testRun">
            <summary>
            The test run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.AddResult(System.String,System.String,System.Object)">
            <summary>
            The add result.
            </summary>
            <param name="function">
            The function.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="result">
            The result.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.GetDevice">
            <summary>
            The get device.
            </summary>
            <returns>
            The <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.Device"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.GetJobID">
            <summary>
            The get job id.
            </summary>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.GetModemIPAddress">
            <summary>
            The get modem ip address.
            </summary>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.GetReportPath">
            <summary>
            The get report path.
            </summary>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.GetTargetDB">
            <summary>
            The get target db.
            </summary>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.GetTestRunID">
            <summary>
            The get test run id.
            </summary>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.GetTestSequence">
            <summary>
            The get test sequence.
            </summary>
            <returns>
            The <see cref="!:Queue"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.GetTestSystem">
            <summary>
            The get test system.
            </summary>
            <returns>
            The <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestSystem"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.GetTestSystemID">
            <summary>
            The get test system id.
            </summary>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.InitializeTestRun(EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestSuiteTypes.Types)">
            <summary>
            The initialize test run.
            </summary>
            <param name="testSuiteType">
            The test suite type.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.IsTestRunInitialized">
            <summary>
            The is test run initialized.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.PrintTestResults">
            <summary>
            The print test results.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.PrintTestRunConfiguration">
            <summary>
            The print test run configuration.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.SaveResults">
            <summary>
            The save results.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.WriteStatusFile(EH.PCPS.TestAutomation.Common.Ditas.Configuration.Common.TestStatus.Status)">
            <summary>
            The write status file.
            </summary>
            <param name="status">
            The status.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRunFacade.Log(System.String,System.IO.TextWriter)">
            <summary>
            The log.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="w">
            The w.
            </param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestSystem">
            <summary>
            Description of SystemComponent.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestSystem.id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestSystem.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestSystem.parameters">
            <summary>
            The parameters.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestSystem.ID">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestSystem.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestSystem.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.VMWare">
            <summary>
            Description of VMWare.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.VMWare.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.VMWare.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.VMWare.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector">
            <summary>
            Description of DBConnector.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.con">
            <summary>
            The con.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.logFile">
            <summary>
            The log file.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.testRunId">
            <summary>
            The test run id.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector"/> class.
            </summary>
            <param name="targetDb">
            The target database.
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.GetPersistedTestrunID">
            <summary>
            Gets the get persisted test run id.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.GetConnection">
            <summary>
            The get connection.
            </summary>
            <returns>
            The <see cref="T:System.Data.SqlClient.SqlConnection"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.GetTestSystem(System.Int32)">
            <summary>
            The get test system.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The <see cref="T:EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestSystem"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.Persist(EH.PCPS.TestAutomation.Common.Ditas.Configuration.TestEnvironment.TestRun)">
            <summary>
            Persists the specified test run.
            </summary>
            <param name="testRun">The test run.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.Log(System.String,System.IO.TextWriter)">
            <summary>
            The log.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="w">
            The w.
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.GetEmployeeId(System.String)">
            <summary>
            The get employee id.
            </summary>
            <param name="employeeNumber">
            The i number.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Ditas.Persistance.DBHandler.DBConnector.Connect(System.String)">
            <summary>
            The connect.
            </summary>
            <param name="targetDatabase">
            The target database.
            </param>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.HandleFunctions">
            <summary>
            Description of Common.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.HandleFunctions.GetHandle(Ranorex.Core.Element)">
            <summary>
            Gets the handle of an element
            </summary>
            <param name="element">Element to get handle from</param>
            <returns>Returns the handle of an valid object or an Zero-handle in case of errors.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.HandleFunctions.GetZeroHandle">
            <summary>
            Get a Zero-handle.
            </summary>
            <returns>Returns an Zero-handle.</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.ISelftestable">
            <summary>
                An abstract class, to enable selftest-functionality for Element-Classes in the framework
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.ISelftestable.Setup">
            <summary>
                The Setup function describes the initial steps, that are neccessary to make the tested elements in the Elements-Class visible. Can be overriden if neccessary.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.ISelftestable.Cleanup">
            <summary>
                The Setup function describes the final steps, to clean up after a selftest. Should be the inverse of Setup(). Can be overriden if neccessary.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.ISelftestable.SelfTest">
            <summary>
                This function will reflect over all Properties in an Element-Class and test them. If subclasses of ISelftestable type are included, they are also tested recursively.
            </summary>
            <returns>The number of Errors found</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.SelftestIgnore">
            <summary>
                There are some Properties inside a Element-Class, which might not be selftestable in some way. Then you might give them the SelftestIgnore-Attribute, to make them
                be ignored by the selftest.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.ModuleNames">
            <summary>
                Modulenames in several languages
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.EnvelopeCurveEN">
            <summary>
            The envelope curve en.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.SaveRestoreEN">
            <summary>
            The save restore en.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.LinearisationOnlineEN">
            <summary>
            The linearisation online en.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.LinearisationOfflineEN">
            <summary>
            The linearisation offline en.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.EventListEN">
            <summary>
            The event list en.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.CreateDocumentationEN">
            <summary>
            The create documentation en.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.ParameterizeOnlineEN">
            <summary>
            The parameterize online en.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.ParameterizeOfflineEN">
            <summary>
            The parameterize offline en.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.CompareDatasetsEN">
            <summary>
            The compare datasets en.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.EnvelopeCurveDE">
            <summary>
            The envelope curve de.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.SaveRestoreDE">
            <summary>
            The save restore de.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.LinearisationOnlineDE">
            <summary>
            The linearisation online de.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.LinearisationOfflineDE">
            <summary>
            The linearisation offline de.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.EventListDE">
            <summary>
            The event list de.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.CreateDocumentationDE">
            <summary>
            The create documentation de.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.ParameterizeOnlineDE">
            <summary>
            The parameterize online de.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.ParameterizeOfflineDE">
            <summary>
            The parameterize offline de.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.ModuleNames.CompareDatasetsDE">
            <summary>
            The compare datasets de.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemovePrograms">
            <summary>
                Description of AddRemovePrograms.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemovePrograms.Open">
            <summary>
                Open Add Remove Programs-Dialog
            </summary>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemovePrograms.Close(System.Int32)">
            <summary>
                Close Add Remove Programs-Dialog
            </summary>
            <param name="processId">Id of process to kill</param>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemovePrograms.ShowSupportInformation(System.String)">
            <summary>
                Show Program's Support Information
            </summary>
            <param name="programName">Name of program whose support information should be opened</param>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemovePrograms.PrintSupportInformation">
            <summary>
                Take screenshot of SupportInformation
            </summary>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemovePrograms.SelectProgram(System.String)">
            <summary>
                Clicks list item
            </summary>
            <param name="programName">Name of program to select</param>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemoveProgramsElements">
            <summary>
                Description of AddRemoveProgramsElements.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemoveProgramsElements.TxtSupportInformation">
            <summary>
            Gets text SupportInformation
            </summary>
            <returns>
                <br>Text: If call worked fine</br>
                <br>NULL: If an error occurred</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemoveProgramsElements.LiItem(System.String)">
            <summary>
            Gets button Print
            </summary>
            <param name="program">
            The program.
            </param>
            <returns>
            <br>list Item: If call worked fine</br>
                <br>NULL: If an error occurred</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemoveProgramsPaths">
            <summary>
                Provide paths for setup wizzard navigation
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemoveProgramsPaths.GUIHelpString">
            <summary>
            Help String
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemoveProgramsPaths.ApplicationPath">
            <summary>
                Application path
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemoveProgramsPaths.ListElement">
            <summary>
                Provides path to listItems Installed Programs within OS Add Remove Programs Dialog
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemoveProgramsPaths.SupportInformation">
            <summary>
                Provides path to text Support Information within OS Add Remove Programs Dialog
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemoveProgramsPaths.OpenForms">
            <summary>
                Provides path to form within OS Add Remove Programs Dialog
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.OSSpecific.AddRemoveProgramsPaths.#cctor">
            <summary>
                Static constructor to load operating system dependent path
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Parameter">
            <summary>
                Parameter represents a DTM parameter. It provides functionality
                to set/get parameter properties.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Parameter.similarity">
            <summary>
            The similarity.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Parameter.parameterName">
            <summary>
            The _parameter name.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Parameter.parameterState">
            <summary>
            The parameter state.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Parameter.parameterType">
            <summary>
            The parameter type.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Parameter.parameterUnit">
            <summary>
            The parameter unit.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.Parameter.parameterValue">
            <summary>
            The parameter value.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Parameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Parameter"/> class. 
            </summary>
            <param name="parameterName">
            Name of parameter
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Parameter.#ctor(System.String,EH.PCPS.TestAutomation.Common.Enumerations.ParameterState)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Parameter"/> class. 
            </summary>
            <param name="parameterName">
            Name of parameter
            </param>
            <param name="parameterState">
            State of parameter
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Parameter.#ctor(System.String,EH.PCPS.TestAutomation.Common.Enumerations.ParameterState,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Parameter"/> class. 
            </summary>
            <param name="parameterName">
            Name of parameter
            </param>
            <param name="parameterState">
            State of parameter
            </param>
            <param name="parameterValue">
            Value of parameter
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Parameter.#ctor(System.String,EH.PCPS.TestAutomation.Common.Enumerations.ParameterState,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Parameter"/> class. 
            </summary>
            <param name="parameterName">
            Name of parameter
            </param>
            <param name="parameterState">
            State of parameter
            </param>
            <param name="parameterValue">
            Value of parameter
            </param>
            <param name="parameterUnit">
            Unit of parameter
            </param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Parameter.#ctor(System.String,EH.PCPS.TestAutomation.Common.Enumerations.ParameterState,System.String,System.String,EH.PCPS.TestAutomation.Common.Enumerations.ParameterType)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Parameter"/> class. 
            Constructor
            </summary>
            <param name="parameterName">
            Name of parameter
            </param>
            <param name="parameterState">
            State of parameter
            </param>
            <param name="parameterValue">
            Value of parameter
            </param>
            <param name="parameterUnit">
            Unit of parameter
            </param>
            <param name="parameterType">
            Type of parameter
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Parameter.Similarity">
            <summary>
            Gets or sets similarity
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Parameter.ParameterName">
            <summary>
            Gets or sets parameter name
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Parameter.ParameterValue">
            <summary>
            Gets or sets parameter unit
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Parameter.ParameterUnit">
            <summary>
            Gets or sets parameter unit
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Parameter.ParameterState">
            <summary>
            Gets or sets parameter state
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Parameter.ParameterType">
            <summary>
            Gets or sets parameter type
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Parameter.GetParameterName(System.String)">
            <summary>
                Extracts the parameter name out of the tree path from [Navigation Area]
            </summary>
            <param name="path">Tree path that leads to parameter</param>
            <returns>Name of parameter</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.RanorexMethods">
            <summary>
                Contains Ranorext methods
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxGetObject(System.String)">
            <summary>
                Perform a safe Ranorex-Query to find a single Element
            </summary>
            <param name="xPath">Query RanoreXPath</param>
            <returns>The Element or Null</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxGetObject(System.String,System.Int32)">
            <summary>
                Perform a safe Ranorex-Query to find a single Element
            </summary>
            <param name="xPath">Query RanoreXPath</param>
            <param name="TimeOut">Timeout for the query</param>
            <returns>The Element or Null</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxGetObject(System.String,System.Int32,System.String)">
            <summary>
                Perform a safe Ranorex-Query to find a single Element
            </summary>
            <param name="xPath">Query RanoreXPath</param>
            <param name="TimeOut">Timeout for the query</param>
            <param name="Comment">Some comment, which will be logged in the Ranorex-Log, if the Element fails.</param>
            <returns>The Element or Null</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitForElement(System.String,System.Int32,System.Int32)">
            <summary>
                Will wait for an object defined by the Xpath.
            </summary>
            <param name="xPath">Path definition for the object to find</param>
            <param name="singleTryTimeOut">inside wholeWaitTimeout there will be many tryfindsingle calls, using singleTryTimeOut as parameter. This ist useful, if the xpath contains attributes like enabled='true', which otherwise wont be updated</param>
            <param name="wholeWaitTimeout">The maximum wait time</param>
            <returns>True for found and false for not found</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitForElement(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
                Will wait for an object defined by the Xpath.
            </summary>
            <param name="xPath">Path definition for the object to find</param>
            <param name="singleTryTimeOut">inside wholeWaitTimeout there will be many tryfindsingle calls, using singleTryTimeOut as parameter. This ist useful, if the xpath contains attributes like enabled='true', which otherwise wont be updated</param>
            <param name="wholeWaitTimeout">The maximum wait time</param>
            <param name="optional">if the waiting procedure is non-optional, it will raise an exception, if not found</param>
            <returns>True for found and false for not found</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitForElement(System.String,System.Int32,System.Int32,Ranorex.Core.Element@)">
            <summary>
                Will wait for an object defined by the Xpath.
            </summary>
            <param name="xPath">Path definition for the object to find</param>
            <param name="singleTryTimeOut">inside wholeWaitTimeout there will be many tryfindsingle calls, using singleTryTimeOut as parameter. This ist useful, if the xpath contains attributes like enabled='true', which otherwise wont be updated</param>
            <param name="wholeWaitTimeout">The maximum wait time</param>
            <param name="foundElement">Out-Value for reusing the found element</param>
            <returns>True for found and false for not found</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitForElement(System.String,System.Int32,System.Int32,System.Boolean,Ranorex.Core.Element@)">
            <summary>
                Will wait for an object defined by the Xpath.
            </summary>
            <param name="xPath">Path definition for the object to find</param>
            <param name="singleTryTimeOut">inside wholeWaitTimeout there will be many tryfindsingle calls, using singleTryTimeOut as parameter. This ist useful, if the xpath contains attributes like enabled='true', which otherwise wont be updated</param>
            <param name="wholeWaitTimeout">The maximum wait time</param>
            <param name="optional">if the waiting procedure is non-optional, it will raise an exception, if not found</param>
            <param name="foundElement">Out-Value for reusing the found element</param>
            <returns>True for found and false for not found</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitUntilEnabled(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
                The test will wait unitl the element in xPath is enabled.
            </summary>
            <param name="xPath">Path of the Element to find</param>
            <param name="maximumTimeout">the maximum waiting time</param>
            <param name="delay">a delay before the search begins, if fieldcare needs a few seconds to respond</param>
            <param name="optional">if the waiting procedure is non-optional, it will raise an exception, if not found</param>
            <returns>True if element found and enabled, false if not</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitUntilEnabled(System.String,System.Int32,System.Boolean)">
            <summary>
                The test will wait unitl the element in xPath is enabled.
            </summary>
            <param name="xPath">Path of the Element to find</param>
            <param name="maximumTimeout">the maximum waiting time</param>
            <param name="optional">if the waiting procedure is non-optional, it will raise an exception, if not found</param>
            <returns>True if element found and enabled, false if not</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitUntilDisabled(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
                The test will wait unitl the element in xPath is disabled.
            </summary>
            <param name="xPath">Path of the Element to find</param>
            <param name="maximumTimeout">the maximum waiting time</param>
            <param name="delay">a delay before the search begins, if fieldcare needs a few seconds to respond</param>
            <param name="optional">if the waiting procedure is non-optional, it will raise an exception, if not found</param>
            <returns>True if element found and disabled, false if not</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitUntilDisabled(System.String,System.Int32,System.Boolean)">
            <summary>
                The test will wait unitl the element in xPath is disabled.
            </summary>
            <param name="xPath">Path of the Element to find</param>
            <param name="maximumTimeout">the maximum waiting time</param>
            <param name="optional">if the waiting procedure is non-optional, it will raise an exception, if not found</param>
            <returns>True if element found and disabled, false if not</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitUntilVisible(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
                The test will wait until the element in xPath is visible.
            </summary>
            <param name="xPath">Path of the Element to find</param>
            <param name="maximumTimeout">the maximum waiting time</param>
            <param name="delay">a delay before the search begins, if fieldcare needs a few seconds to respond</param>
            <param name="optional">if the waiting procedure is non-optional, it will raise an exception, if not found</param>
            <returns>True if element found and visible, false if not</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitUntilVisible(System.String,System.Int32,System.Boolean)">
            <summary>
                The test will wait until the element in xPath is visible.
            </summary>
            <param name="xPath">Path of the Element to find</param>
            <param name="maximumTimeout">the maximum waiting time</param>
            <param name="optional">if the waiting procedure is non-optional, it will raise an exception, if not found</param>
            <returns>True if element found and visible, false if not</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitUntilInvisible(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
                The test will wait unitl the element in xPath is invisible.
            </summary>
            <param name="xPath">Path of the Element to find</param>
            <param name="maximumTimeout">the maximum waiting time</param>
            <param name="delay">a delay before the search begins, if fieldcare needs a few seconds to respond</param>
            <param name="optional">if the waiting procedure is non-optional, it will raise an exception, if not found</param>
            <returns>True if element found and invisible, false if not</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.rxWaitUntilInvisible(System.String,System.Int32,System.Boolean)">
            <summary>
                The test will wait unitl the element in xPath is invisible.
            </summary>
            <param name="xPath">Path of the Element to find</param>
            <param name="maximumTimeout">the maximum waiting time</param>
            <param name="optional">if the waiting procedure is non-optional, it will raise an exception, if not found</param>
            <returns>True if element found and invisible, false if not</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.waitUntilElementNulls(System.String,System.Int32)">
            <summary>
                Waits until an element is gone and cannot be found in xpath anymore
            </summary>
            <param name="xPath">The elements xpath</param>
            <param name="maximumTimeout">maximum waiting timeout</param>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.RaiseNotFoundException">
            <summary>
                Private helper function to raise exceptions
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.RaiseNotFoundException(System.String)">
            <summary>
                Private helper function to raise exceptions
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.SearchIcon(System.Drawing.Bitmap,System.String)">
            <summary>
                Searchs an specific bitmap at all toolbar-elements.
            </summary>
            <param name="iconName">Name of icon to search for</param>
            <param name="pathToToolbarButtons">Path to icon</param>
            <returns>
                <br>Button: If icon found</br>
                <br>Null: If no icon found</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.RanorexMethods.GetButtonWithIcon(System.Drawing.Bitmap,System.String)">
            <summary>
                Searchs an specific bitmap at a specific toolbar-element.
            </summary>
            <param name="iconName">Name of icon to search for</param>
            <param name="ranorexPath">Ranorex path for button to proof</param>
            <returns>
                <br>Button: If button related icon found</br>
                <br>Null: If no button related icon found</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.DefaultValues">
            <summary>
                This class contains default values for:
                - Timeout
                - Location within an control
                - Duration for mouse-movememt
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.SearchRetries">
            <summary>
                Retries
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.GeneralTimeout">
            <summary>
                General timeout
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.DTMUploadTimeout">
            <summary>
                DTM Setup timeout
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.DTMDownloadTimeout">
            <summary>
                DTM Upload Time Out
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.DTMSetupTimeout">
            <summary>
                DTM Setup timeout
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.iTimeoutShort">
            <summary>
                Short default timeout to wait for access on controls. Time is in milliseconds.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.iTimeoutMedium">
            <summary>
                Medium default timeout to wait for access on controls. Time is in milliseconds.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.iTimeoutLong">
            <summary>
                Long default timeout to wait for access on controls. Time is in milliseconds.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.iTimeoutDefault">
            <summary>
                Long default timeout to wait for access on controls. Time is in milliseconds.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.iTimeoutModules">
            <summary>
                Long default timeout to wait for modules that are opened. Time is in milliseconds.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.TimeoutPrintUpDownload">
            <summary>
                DTM Setup timeout
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.iTimeToWait">
            <summary>
                Time (in seconds) to wait, before an exceptions continues.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.locDefaultLocation">
            <summary>
                Default position for mouse pointer on a control. Position is in pixel from left upper corner.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.locUpperLeft">
            <summary>
                Default position for mouse pointer on a control. Position is in pixel from left upper corner.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.durDurationShort">
            <summary>
                Short default duration for mouse moving time. Time is in milliseconds.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.durDurationMedium">
            <summary>
                Medium default duration for mouse moving time. Time is in milliseconds.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.durDurationLong">
            <summary>
                Long default duration for mouse moving time. Time is in milliseconds.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.strApplicationPath">
            <summary>
                FieldCare default installation path
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Common.DefaultValues.strApplicationPath64Bit">
            <summary>
                Application path for FieldCare on 64bit OS = @"C:\Program Files (x86)\Endress+Hauser\FieldCare\Frame\FMPFrame.exe";
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.SystemInformation">
            <summary>
                Description of SystemInformation.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.SystemInformation.GetApplicationDataPath">
            <summary>
                Gets path of environment variable ALLUSERSPROFILE
            </summary>
            <returns>
                <br>Path: if call worked fine</br>
                <br>Empty String: if an error occurred</br>
            </returns>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.SystemInformation.SystemLanguage">
            <summary>
            Gets the current System Language in short Format like DE-de or EN-us...
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.SystemInformation.WindowsVersion">
            <summary>
            Gets the whole windows version string and Name, Version, Build and Service Packs
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.SystemInformation.IsWin7">
            <summary>
            Gets a value indicating whether is win 7.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.SystemInformation.IsWin8">
            <summary>
            Gets a value indicating whether is win 8.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.SystemInformation.IsWinXp">
            <summary>
            Gets a value indicating whether is win xp.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.SystemInformation.Is64Bit">
            <summary>
            Gets a value indicating whether is 64 bit.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.SystemInformation.DisplayColor">
            <summary>
            Gets Display Color Depth, in Bits per Pixel, should always be 32.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.SystemInformation.ScreenResolution">
            <summary>
                Gets the current Display resolution as a Rectangle Object
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.SystemInformation.GetInformation">
            <summary>
                Provide system information
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.SystemInformation.GetGuiResources(System.IntPtr,System.Int32)">
            <summary>
                Get GUI resources
            </summary>
            <param name="processHandle">Process handle</param>
            <param name="flags">Flags in unsigned integer</param>
            <returns>integer value</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.SystemInformation.GetGuiResourcesGdiCount(System.Diagnostics.Process)">
            <summary>
            Provide GUI resource information about GDI count
            </summary>
            <param name="process">a process</param>
            <returns>Graphical User Interface  Resource GDI Count</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.SystemInformation.GetGuiResourcesUser(System.Diagnostics.Process)">
            <summary>
            Provide GUI resource information about user
            </summary>
            <param name="process">a process</param>
            <returns>Graphical User Interface Resource User</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Common.Attributes.TestScriptInformation">
            <summary>
            The test script information.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Attributes.TestScriptInformation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Common.Attributes.TestScriptInformation.#ctor(System.String,EH.PCPS.TestAutomation.Common.Enumerations.TestDefinition,EH.PCPS.TestAutomation.Common.Enumerations.TestScript)">
            <summary>
            Initializes a new instance of the <see cref="T:EH.PCPS.TestAutomation.Common.Attributes.TestScriptInformation"/> class.
            </summary>
            <param name="guid">
            The unique identifier.
            </param>
            <param name="testDefinition">
            The test Definition.
            </param>
            <param name="testScript">
            The test script.
            </param>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Attributes.TestScriptInformation.Guid">
            <summary>
            Gets or sets the graphical user interface identifier.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Attributes.TestScriptInformation.TestScript">
            <summary>
            Gets or sets the test script.
            </summary>
        </member>
        <member name="P:EH.PCPS.TestAutomation.Common.Attributes.TestScriptInformation.TestDefinition">
            <summary>
            Gets or sets the test definition.
            </summary>
            <value>The test definition.</value>
        </member>
    </members>
</doc>
