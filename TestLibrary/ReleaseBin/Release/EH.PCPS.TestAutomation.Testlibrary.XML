<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EH.PCPS.TestAutomation.Testlibrary</name>
    </assembly>
    <members>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.Common.TC_WaitXSeconds">
            <summary>
            The test case TC_WaitXSeconds.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Common.TC_WaitXSeconds.Run">
            <summary>
            Waits 10 seconds.
            </summary>
            <returns>
            The result of the test case.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Common.TC_WaitXSeconds.Run(System.Int32)">
            <summary>
            Waits a specified amount of seconds.
            </summary>
            <param name="secondsToWait">
            The amount of seconds to wait.
            </param>
            <returns>
            The result of the test case.
            </returns> 
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Common.TC_WaitXSeconds.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Common.TC_WaitXSeconds.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_CloseConfiguration">
            <summary>
            The test case TC_CloseConfiguration.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_CloseConfiguration.Run">
            <summary>
            Closes CommDtm configuration.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_CloseConfiguration.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_CloseConfiguration.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_ConfigureCommunication">
            <summary>
            The test case TC_ConfigureCommunication.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_ConfigureCommunication.Run(System.String)">
            <summary>
            Configures a Communication Dtm. 
            </summary>
            <param name="communication">
            The communication Settings. As parameter use this form: protocol; communicationDriverName; communicationHardwareName; parameter1; value1; parameter2; value2; ...
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_ConfigureCommunication.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_ConfigureCommunication.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_OpenConfiguration">
            <summary>
            The test case TC_OpenConfiguration.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_OpenConfiguration.Run">
            <summary>
            Opens configuration for a CommDtm
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_OpenConfiguration.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.Communication.TC_OpenConfiguration.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CheckDeviceTypeName">
            <summary>
            The test case TC_CheckDeviceTypeName.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CheckDeviceTypeName.Run">
            <summary>
            Gets the device type name from the device type information box and checks if it is valid.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CheckDeviceTypeName.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CheckDeviceTypeName.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CheckSetupVersion">
            <summary>
            The test case TC_CheckSetupVersion.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CheckSetupVersion.Run">
            <summary>
            Gets the setup version from the setup information box and checks if it is valid.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CheckSetupVersion.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CheckSetupVersion.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CloseModule.Run">
            <summary>
             Closes the module About Box
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes the module About Box
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_OpenModule">
            <summary>
            The test case TC_OpenModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_OpenModule.Run">
            <summary>
            Opens the module About Box
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_OpenModule.Run(System.Int32)">
            <summary>
            Opens the module About Box
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout in milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_OpenModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_OpenModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_SaveClipboardDataToFile">
            <summary>
            The test case TC_SaveClipboardDataToFile.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_SaveClipboardDataToFile.Run">
            <summary>
            Saves the clipboard data to a default file in the report folder
            </summary> 
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>       
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_SaveClipboardDataToFile.Run(System.String)">
            <summary>
            Saves the clipboard data to a file
            </summary>
            <param name="fileName">
            The file path including the file name. Use this form: C:\Test\AboutBox-Micropilot.txt
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_SaveClipboardDataToFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_SaveClipboardDataToFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_SaveClipboardDataToReport">
            <summary>
            The test case TC_SaveClipboardDataToReport.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_SaveClipboardDataToReport.Run">
            <summary>
            Gets the device type name from the device type information box and checks if it is valid.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_SaveClipboardDataToReport.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.AboutBox.TC_SaveClipboardDataToReport.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareDehWithDeh">
            <summary>
            The test case TC_CancelCompareDehWithDeh.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareDehWithDeh.Run">
            <summary>
            Starts a comparison Online with deh-file and cancels it after a user defined time
            </summary>
            <returns>
            The result of the test case.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareDehWithDeh.Run(System.String,System.String,System.Int32)">
            <summary>
            Starts a comparison Online with deh-file and cancels it after a user defined time
            </summary>
            <param name="pathToDehFile">
            The file name and path of a deh file. Use this form: C:\Test\test.deh
            </param>
            <param name="pathToOtherDehFile">
            The file name and path of another deh file. Use this form: C:\Test\test1.deh
            </param>
            <param name="timeUntilCancelingInMilliseconds">
            The time until canceling in milliseconds.
            </param>
            <returns>
            The result of the test case.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareDehWithDeh.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareDehWithDeh.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOfflineWithDehFile">
            <summary>
            The test case TC_CancelCompareOfflineWithDehFile.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOfflineWithDehFile.Run">
            <summary>
            Starts a comparison Online with deh file and cancels it after a user defined time
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOfflineWithDehFile.Run(System.String,System.Int32)">
            <summary>
            Starts a comparison Online with deh file and cancels it after a user defined time
            </summary>
            <param name="pathToDehFile">
            The file name and path of a deh file. Use this form: C:\Test\test.deh
            </param>
            <param name="timeUntilCancelingInMilliseconds">
            The time until canceling in milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOfflineWithDehFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOfflineWithDehFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOfflineWithOnline">
            <summary>
            The test case TC_CancelCompareOfflineWithOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOfflineWithOnline.Run">
            <summary>
            Starts a comparison Online data with Offline data and cancels it after a user defined time
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOfflineWithOnline.Run(System.Int32)">
            <summary>
            Starts a comparison Online data with Offline data and cancels it after a user defined time
            </summary>
            <param name="timeUntilCancelingInMilliseconds">
            The time until canceling in milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOfflineWithOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOfflineWithOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOnlineWithDehFile">
            <summary>
            The test case TC_CancelCompareOnlineWithDehFile.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOnlineWithDehFile.Run">
            <summary>
            Starts a comparison Online with deh file and cancels it after a user defined time
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOnlineWithDehFile.Run(System.String,System.Int32)">
            <summary>
            Starts a comparison Online with deh file and cancels it after a user defined time
            </summary>
            <param name="pathToDehFile">
            The file name and path of a deh file. Use this form: C:\Test\test.deh
            </param>
            <param name="timeUntilCancelingInMilliseconds">
            The time until canceling in milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOnlineWithDehFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CancelCompareOnlineWithDehFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CheckThatParameterAreEqual">
            <summary>
            The test case TC_CheckThatParameterAreEqual.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CheckThatParameterAreEqual.Run(System.String)">
            <summary>
            Checks whether the offline and online parameter are identical.
            </summary>
            <param name="parameterNames">
            String with all the names of the parameter which will be checked. E.g. Full calibration (4);Empty calibration (3);Device tag;
            Separate the parameter names with ; .
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CheckThatParameterAreEqual.Run(System.Collections.Generic.List{System.String})">
            <summary>
            Checks whether the offline and online parameter are identical.
            </summary>
            <param name="parameterNames">
            List with the name(s) of the parameter which will be checked. E.g. Full calibration (4), Empty calibration (3), Device tag.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CheckThatParameterAreEqual.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CheckThatParameterAreEqual.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CheckThatParameterAreNotEqual">
            <summary>
            The test case TC_CheckThatParameterAreNotEqual.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CheckThatParameterAreNotEqual.Run(System.String)">
            <summary>
            Checks whether the offline and online parameter are not identical.
            </summary>
            <param name="parameterNames">
            String with all the names of the parameter which will be checked. E.g. Full calibration (4);Empty calibration (3);Device tag;
            Separate the parameter names with ; .
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CheckThatParameterAreNotEqual.Run(System.Collections.Generic.List{System.String})">
            <summary>
            Checks whether the offline and online parameter are not identical.
            </summary>
            <param name="parameterNames">
            List with the name(s) of the parameter which will be checked. E.g. Full calibration (4), Empty calibration (3), Device tag.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CheckThatParameterAreNotEqual.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CheckThatParameterAreNotEqual.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CloseModule.Run">
            <summary>
            Closes the module
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes the module
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareDehFileWithDehFile">
            <summary>
            The test case TC_CompareDehFileWithDehFile.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareDehFileWithDehFile.Run">
            <summary>
            Compares two .deh files
            </summary>
            <returns>
            True if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareDehFileWithDehFile.Run(System.String,System.String,System.Int32)">
            <summary>
            Compares two .deh files
            </summary>
            <param name="pathToDehFile">
            The file name and path of a deh file. Use this form: C:\Test\test.deh
            </param>
            <param name="pathToOtherDehFile">
            The file name and path of another deh file. Use this form: C:\Test\test1.deh
            </param>
            <param name="timeoutForComparisonInMilliseconds">
            The timeout For the comparison in milliseconds.
            </param>
            <returns>
            True if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareDehFileWithDehFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareDehFileWithDehFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOfflineWithDehFile">
            <summary>
            The test case TC_CompareOfflineWithDehFile.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOfflineWithDehFile.Run">
            <summary>
            Compares the offline data with a .deh file
            </summary>
            <returns>
            True if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOfflineWithDehFile.Run(System.String,System.Int32)">
            <summary>
            Compares the offline data with a .deh file
            </summary>
            <param name="pathToDehFile">
            The file name and path of a deh file. Use this form: C:\Test\test.deh
            </param>
            <param name="timeoutForComparisonInMilliseconds">
            The timeout For the comparison in milliseconds.
            </param>
            <returns>
            True if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOfflineWithDehFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOfflineWithDehFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOfflineWithOnline">
            <summary>
            The test case TC_CompareOfflineWithOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOfflineWithOnline.Run">
            <summary>
            Compare the online data with the offline data
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOfflineWithOnline.Run(System.Int32)">
            <summary>
            Compare the online data with the offline data
            </summary>
            <param name="timeoutForComparisonInMilliseconds">
            The timeout for the comparison in milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOfflineWithOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOfflineWithOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOnlineWithDehFile">
            <summary>
            The test case TC_CompareOnlineWithDehFile.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOnlineWithDehFile.Run">
            <summary>
            Compares the online data with a .deh file
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOnlineWithDehFile.Run(System.String,System.Int32)">
            <summary>
            Compares the online data with a .deh file
            </summary>
            <param name="pathToDehFile">
            The file name and path of a deh file. Use this form: C:\Test\test.deh
            </param>
            <param name="timeoutForComparisonInMilliseconds">
            The timeout For the comparison in milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOnlineWithDehFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_CompareOnlineWithDehFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllDifferentParameter">
            <summary>
            The test case TC_LogAllDifferentParameter.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllDifferentParameter.Run">
            <summary>
            Navigates through the Compare result and logs all parameter with different offline and online values. Result is shown in the report.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllDifferentParameter.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllDifferentParameter.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllIdenticalParameter">
            <summary>
            The test case TC_LogAllIdenticalParameter.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllIdenticalParameter.Run">
            <summary>
            Navigates through the Compare result and logs all parameter with identical offline and online values. Result is shown in the report.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllIdenticalParameter.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllIdenticalParameter.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllParameter">
            <summary>
            The test case TC_LogAllParameter.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllParameter.Run">
            <summary>
            Navigates through the Compare result and logs all parameter with offline and online values. Result is shown in the report.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllParameter.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_LogAllParameter.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_OpenModuleOffline">
            <summary>
            The test case TC_OpenModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_OpenModuleOffline.Run">
            <summary>
            Opens the module when the device is offline
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_OpenModuleOffline.Run(System.Int32)">
            <summary>
            Opens the module when the device is offline
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout in milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_OpenModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_OpenModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_OpenModuleOnline.Run">
            <summary>
            Opens the module when the device is online
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the module when the device is online
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout in milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Compare.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckFineTuningGuiBehaviour">
            <summary>
            Class TC_CheckFineTuningGuiBehaviour.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckFineTuningGuiBehaviour.Run">
            <summary>
            Check Gui Control Behaviour of Fine Tuning
            </summary>
            <returns>
            True if passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckFineTuningGuiBehaviour.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckFineTuningGuiBehaviour.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckReferenceValueTabBehaviour">
            <summary>
            Class TC_CheckReferenceValueTabBehaviour.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckReferenceValueTabBehaviour.Run">
            <summary>
            Check Reference Tab Behaviour by selected and not selected %mass/%volume
            </summary>
            <returns>
            True if passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckReferenceValueTabBehaviour.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckReferenceValueTabBehaviour.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_EnterDataForFineTuning">
            <summary>
            The test case TC_EnterDataForFineTuning.cs.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_EnterDataForFineTuning.Run">
            <summary>
            Enters table values for fine tuning at
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_EnterDataForFineTuning.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_EnterDataForFineTuning.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCoefficientsWithExpectedCoefficients">
            <summary>
            The test case TC_CompareCoefficientsWithExpectedCoefficients.cs.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCoefficientsWithExpectedCoefficients.Run">
            <summary>
            Compare Coefficients With Expected Coefficients
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCoefficientsWithExpectedCoefficients.Run(System.String)">
            <summary>
            Opens tab Expert results and makes a screenshot of every result diagram available.
            </summary>
            <param name="expectedCoefficients">
            The expected Coefficients given in a string separated by ";"
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCoefficientsWithExpectedCoefficients.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCoefficientsWithExpectedCoefficients.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile">
            <summary>
            The test case TC_LoadConcentrationFile.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile.AssertMessage">
            <summary>
            The assert message.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile.PassedMessage">
            <summary>
            The passed message.
            </summary>
        </member>
        <member name="F:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile.FailedMessage">
            <summary>
            The failed message.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile.Run">
            <summary>
            Load Concentration File
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile.Run(System.String)">
            <summary>
            Load Concentration File
            </summary>
            <param name="fileName">The file name</param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile.Run(System.String,System.String)">
            <summary>
            Runs the specified comparing accuracy.
            </summary>
            <param name="comparingAccuracy">The comparing accuracy e.g. 0.01</param>
            <param name="expectedCoefficients">The expected coefficients e.g. -0.5;0.8;6.11;7.1245 etc.</param>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile.Run(System.String,System.String,System.String)">
            <summary>
            The run.
            </summary>
            <param name="fileName">
            The file name.
            </param>
            <param name="comparingAccuracy">
            The comparing accuracy.
            </param>
            <param name="expectedCoefficients">
            The expected coefficients.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_LoadConcentrationFile.ExecuteSharedFunctions(System.String,System.String)">
            <summary>
            The execute shared functions.
            </summary>
            <param name="comparingAccuracy">
            The comparing accuracy.
            </param>
            <param name="expectedCoefficients">
            The expected coefficients.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureReferenceValues">
            <summary>
            The test case TC_ConfigureReferenceValues
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureReferenceValues.Run(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Configure Reference Values
            </summary>
            <param name="carrierType">
            Type of the carrier.
            </param>
            <param name="referenceTemperature">
            The reference temperature.
            </param>
            <param name="densityUnit">
            The density unit.
            </param>
            <param name="carrierLinearExpansionCoefficient">
            The carrier linear expansion coefficient.
            </param>
            <param name="carrierSquareExpansionCoefficientTarget">
            The carrier square expansion coefficient target.
            </param>
            <param name="carrierReferenceDensity">
            The carrier reference density.
            </param>
            <param name="targetLinearExpansionCoefficient">
            The target linear expansion coefficient.
            </param>
            <param name="targetSquareExpansionCoefficientTarget">
            The target square expansion coefficient target.
            </param>
            <param name="targetReferenceDensity">
            The target reference density.
            </param>
            <returns>
            <c>true</c> if passed, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureReferenceValues.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureReferenceValues.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureFineTuning">
            <summary>
            The test case TC_ConfigureFineTuning.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureFineTuning.Run(System.String,System.String,System.String)">
            <summary>
            Configure Fine Tuning
            </summary>
            <param name="fineTuningValue1Unit">The fine tuning value1 unit.</param>
            <param name="fineTuningValue2Unit">The fine tuning value2 unit.</param>
            <param name="fineTuningValue3Unit">The fine tuning value3 unit.</param>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureFineTuning.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureFineTuning.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureLiquidProperties">
            <summary>
            The test case TC_ConfigureLiquidProperties.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureLiquidProperties.Run(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Configure Liquid Properties
            </summary>
            <param name="inputFormat">The input format.</param>
            <param name="spreadsheet">The spreadsheet.</param>
            <param name="column1Selection">The column1 selection.</param>
            <param name="column1Minimum">The column1 minimum.</param>
            <param name="column1Max">The column1 maximum.</param>
            <param name="column1Unit">The column1 unit.</param>
            <param name="column2Selection">The column2 selection.</param>
            <param name="column2Minimum">The column2 minimum.</param>
            <param name="column2Max">The column2 maximum.</param>
            <param name="column2Unit">The column2 unit.</param>
            <param name="column3Selection">The column3 selection.</param>
            <param name="column3Minimum">The column3 minimum.</param>
            <param name="column3Max">The column3 maximum.</param>
            <param name="column3Unit">The column3 unit.</param>
            <returns><c>true</c> if passed., <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureLiquidProperties.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureLiquidProperties.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureExpertResults">
            <summary>
            The test case TC_ConfigureExpertResults.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureExpertResults.Run(System.String,System.String,System.String,System.String)">
            <summary>
            Configure Expert Results
            </summary>
            <param name="densityCalibration">The density calibration.</param>
            <param name="sensor">The sensor.</param>
            <param name="fieldDensityAdjustment">The field density adjustment.</param>
            <param name="diagramSelection">The diagram selection.</param>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureExpertResults.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureExpertResults.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckHelpForConcentration">
            <summary>
            The test case TC_CheckHelpForConcentration.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckHelpForConcentration.Run">
            <summary>
            Opens help file for Concentration and takes a screenshot.
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckHelpForConcentration.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckHelpForConcentration.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_EnterDataForLiquidProperties">
            <summary>
            The test case TC_EnterDataForLiquidProperties.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_EnterDataForLiquidProperties.Run">
            <summary>
            Enters table values in tap Liquid Properties
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_EnterDataForLiquidProperties.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_EnterDataForLiquidProperties.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CreateNewConcentration">
            <summary>
            The test case TC_Export.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CreateNewConcentration.Run">
            <summary>
            Creates a new and empty Concentration Gui
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CreateNewConcentration.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CreateNewConcentration.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CalculateCoefficientsAndCheckOutput">
            <summary>
            The test case TC_CalculateCoefficientsAndCheckOutput.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CalculateCoefficientsAndCheckOutput.Run">
            <summary>
            Calculates the concentration coefficients. Checks that there is no critical error and that tab Coefficients overview shows calculated coefficients.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CalculateCoefficientsAndCheckOutput.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CalculateCoefficientsAndCheckOutput.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureCalculationBaseToPredefinedLiquid">
            <summary>
            The test case TC_ConfigureCalculationBaseToPredefinedLiquid
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureCalculationBaseToPredefinedLiquid.Run">
            <summary>
            Sets Calculation base to Predefined liquid, checks calculation button and tabs behavior.
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureCalculationBaseToPredefinedLiquid.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureCalculationBaseToPredefinedLiquid.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckTabsAfterOpenModule">
            <summary>
            Class TC_ActivateSoftwareOption.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckTabsAfterOpenModule.Run">
            <summary>
            Check Tabs After Open Module
            </summary>
            <returns>
            True if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckTabsAfterOpenModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckTabsAfterOpenModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsProcessConditions">
            <summary>
            The test case TC_ConfigureBaseSettingsProcessConditions.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsProcessConditions.Run(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Configure Base Settings Process Conditions
            </summary>
            <param name="temperatureMinimum">The temperature minimum.</param>
            <param name="temperatureMaximum">The temperature maximum.</param>
            <param name="concentrationMinimum">The concentration minimum.</param>
            <param name="concentrationMaximum">The concentration maximum.</param>
            <param name="temperatureUnit">The temperature unit.</param>
            <param name="concentrationUnit">The concentration unit.</param>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsProcessConditions.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsProcessConditions.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsProcessPressure">
            <summary>
            The test case TC_ConfigureBaseSettingsProcessPressure.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsProcessPressure.Run(System.String,System.String)">
            <summary>
            Configure Base Settings Process Pressure
            </summary>
            <param name="processPressureAverage">The process pressure average.</param>
            <param name="pressureUnit">The pressure unit.</param>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsProcessPressure.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsProcessPressure.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatExpertResultsIsInactive">
            <summary>
            Class TC_CheckThatExpertResultsIsInactive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatExpertResultsIsInactive.Run">
            <summary>
            Verifies that Expert results tab is inactive
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatExpertResultsIsInactive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatExpertResultsIsInactive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatExpertResultsIsActive">
            <summary>
            Class TC_CheckThatBaseSettingsIsActive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatExpertResultsIsActive.Run">
            <summary>
            Verifies that Expert results tab is active
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatExpertResultsIsActive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatExpertResultsIsActive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatCoefficientsOverviewIsInactive">
            <summary>
            Class TC_CheckThatCoefficientsOverviewIsInactive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatCoefficientsOverviewIsInactive.Run">
            <summary>
            Verifies that Coefficients overview tab is inactive
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatCoefficientsOverviewIsInactive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatCoefficientsOverviewIsInactive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatCoefficientsOverviewIsActive">
            <summary>
            Class TC_CheckThatCoefficientsOverviewIsActive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatCoefficientsOverviewIsActive.Run">
            <summary>
            Verifies that Coefficients overview tab is active
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatCoefficientsOverviewIsActive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatCoefficientsOverviewIsActive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatLiquidPropertiesIsInactive">
            <summary>
            Class TC_CheckThatLiquidPropertiesIsActive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatLiquidPropertiesIsInactive.Run">
            <summary>
            Verifies that Liquid properties tab is inactive
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatLiquidPropertiesIsInactive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatLiquidPropertiesIsInactive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatLiquidPropertiesIsActive">
            <summary>
            Class TC_CheckThatLiquidPropertiesIsActive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatLiquidPropertiesIsActive.Run">
            <summary>
            Verifies that Liquid properties tab is active
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatLiquidPropertiesIsActive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatLiquidPropertiesIsActive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatReferenceValuesIsInactive">
            <summary>
            Class TC_CheckThatReferenceValuesIsInactive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatReferenceValuesIsInactive.Run">
            <summary>
            Verifies that Reference Values tab is inactive
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatReferenceValuesIsInactive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatReferenceValuesIsInactive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatReferenceValuesIsActive">
            <summary>
            Class TC_CheckThatReferenceValuesIsActive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatReferenceValuesIsActive.Run">
            <summary>
            Verifies that Reference Values tab is active
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatReferenceValuesIsActive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatReferenceValuesIsActive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatBaseSettingsIsInactive">
            <summary>
            Class TC_CheckThatBaseSettingsIsInactive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatBaseSettingsIsInactive.Run">
            <summary>
            Verifies that Base Settings tab is inactive
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatBaseSettingsIsInactive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatBaseSettingsIsInactive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatBaseSettingsIsActive">
            <summary>
            Class TC_CheckThatBaseSettingsIsActive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatBaseSettingsIsActive.Run">
            <summary>
            Verifies that Base Settings tab is active
            </summary>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatBaseSettingsIsActive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatBaseSettingsIsActive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ActivateSoftwareOption">
            <summary>
            Class TC_ActivateSoftwareOption.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ActivateSoftwareOption.Run(System.String,System.String)">
            <summary>
            Activates the software using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the software activation option parameter.
            </param>
            <param name="softwareOptionCode">
            The software option code.
            </param>
            <returns>
            True if passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ActivateSoftwareOption.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ActivateSoftwareOption.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CalculateCoefficients">
            <summary>
            The test case TC_CalculateCoefficients.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CalculateCoefficients.Run">
            <summary>
            Calculates the concentration coefficients. Checks that there is no critical error and that tab Coefficients overview shows calculated coefficients.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CalculateCoefficients.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CalculateCoefficients.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckExpertResults">
            <summary>
            The test case TC_CheckExpertResults.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckExpertResults.Run">
            <summary>
            Opens tab Expert results and makes a screenshot of every result diagram available.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckExpertResults.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckExpertResults.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatAllFieldsInBaseSettingsAreGrayed">
            <summary>
            The test case TC_CheckThatAllFieldsInBaseSettingsAreGrayed.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatAllFieldsInBaseSettingsAreGrayed.Run">
            <summary>
            Checks whether all elements in the tab Base settings ( combo boxes, edit fields etc...) except Calculation base are grayed and inactive. 
            This is the case when selecting Fine tuning as Calculation base.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatAllFieldsInBaseSettingsAreGrayed.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CheckThatAllFieldsInBaseSettingsAreGrayed.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CloseModule.Run">
            <summary>
            Closes the module.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes the module.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCalculatedCoefficientsWithCoefficientsReadFromDevice">
            <summary>
            The test case TC_CompareCalculatedCoefficientsWithCoefficientsReadFromDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCalculatedCoefficientsWithCoefficientsReadFromDevice.Run(System.String)">
            <summary>
            Opens the tab Coefficients overview and compares the coefficients read from device with the calculated coefficients.
            </summary>
            <param name="accuracy">
            The maximum allowed difference between two coefficients. E.g. 0.001.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCalculatedCoefficientsWithCoefficientsReadFromDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCalculatedCoefficientsWithCoefficientsReadFromDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCalculatedCoefficientsWithExpectedCoefficients">
            <summary>
            The test case TC_CompareCalculatedCoefficientsWithExpectedCoefficients.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCalculatedCoefficientsWithExpectedCoefficients.Run(System.String,System.String)">
            <summary>
            Opens the tab Coefficients overview and compares the calculated coefficients against a set of expected coefficients provided by the user.
            </summary>
            <param name="accuracy">
            The maximum allowed difference between two coefficients. E.g. 0.001.
            </param>
            <param name="expectedCoefficients">
            String with the expected coefficients. Use semicolons to separate the values. E.g. -5.0;10.1;8.9
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCalculatedCoefficientsWithExpectedCoefficients.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCalculatedCoefficientsWithExpectedCoefficients.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCoefficientsReadFromDeviceWithExpectedCoefficients">
            <summary>
            The test case TC_CompareCoefficientsReadFromDeviceWithExpectedCoefficients.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCoefficientsReadFromDeviceWithExpectedCoefficients.Run(System.String,System.String)">
            <summary>
            Opens the tab Coefficients overview and compares the coefficients read from device against a set of expected coefficients provided by the user.
            </summary>
            <param name="accuracy">
            The maximum allowed difference between two coefficients. E.g. 0.001.
            </param>
            <param name="expectedCoefficients">
            String with the expected coefficients. Use semicolons to separate the values. E.g. -5.0;10.1;8.9
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCoefficientsReadFromDeviceWithExpectedCoefficients.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareCoefficientsReadFromDeviceWithExpectedCoefficients.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareTableValue">
            <summary>
            The test case TC_CompareTableValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareTableValue.Run(System.Int32,System.Int32,System.String)">
            <summary>
            Gets a value from table and compares it to a reference value.
            </summary>
            <param name="row">
            The row.
            </param>
            <param name="column">
            The column.
            </param>
            <param name="referenceValue">
            The reference value.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareTableValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_CompareTableValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsBaseConfiguration">
            <summary>
            The test case TC_ConfigureBaseSettings.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsBaseConfiguration.Run(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Configure Base Settings Base Configuration
            </summary>
            <param name="calculationBase">The calculation base.</param>
            <param name="liquidType">Type of the liquid.</param>
            <param name="userProfile">The user profile.</param>
            <param name="referenceTemperature">The reference temperature.</param>
            <param name="mineralContent">Content of the mineral.</param>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsBaseConfiguration.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ConfigureBaseSettingsBaseConfiguration.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_DeactivateSoftwareOption">
            <summary>
            Class TC_DeactivateSoftwareOption.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_DeactivateSoftwareOption.Run(System.String)">
            <summary>
            Deactivates the software option using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the software activation option parameter. Use this form: Promass 100//Expert//System//Administration//Activate SW option:
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_DeactivateSoftwareOption.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_DeactivateSoftwareOption.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_DeleteConcentrationData">
            <summary>
            The test case TC_DeleteConcentrationData.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_DeleteConcentrationData.Run">
            <summary>
            Deletes the Concentration data by clicking the button New. Verifies that coefficients are deleted afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_DeleteConcentrationData.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_DeleteConcentrationData.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ExportConcentrationFile">
            <summary>
            The test case TC_ExportConcentrationFile.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ExportConcentrationFile.Run">
            <summary>
            Exports a Concentration file to the report folder. Verifies that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ExportConcentrationFile.Run(System.String)">
            <summary>
            Exports a Concentration file. Verifies that there is no critical error afterwards.
            </summary>
            <param name="fileName">
            The file name.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ExportConcentrationFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ExportConcentrationFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ImportConcentrationFile">
            <summary>
            The test case TC_ImportConcentrationFile.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ImportConcentrationFile.Run">
            <summary>
            Imports a default Concentration file from the report folder.Makes a screenshot of tab Expert results to check if the diagram is not shown any longer and verifies that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ImportConcentrationFile.Run(System.String)">
            <summary>
            Imports a Concentration file.Makes a screenshot of tab Expert results to check if the diagram is not shown any longer and verifies that there is no critical error afterwards.
            </summary>
            <param name="fileName">
            The file name.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ImportConcentrationFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ImportConcentrationFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_OpenModuleOffline">
            <summary>
            The test case TC_OpenModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_OpenModuleOffline.Run">
            <summary>
            Opens the module when the device is offline
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_OpenModuleOffline.Run(System.Int32)">
            <summary>
            Opens the module when the device is offline
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_OpenModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_OpenModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_OpenModuleOnline.Run">
            <summary>
            Opens the module when the device is online
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the module when the device is online
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ReadCoefficientsFromDevice">
            <summary>
            The test case TC_ReadCoefficientsFromDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ReadCoefficientsFromDevice.Run">
            <summary>
            Read coefficients from device and checks that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ReadCoefficientsFromDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_ReadCoefficientsFromDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_Save">
            <summary>
            The test case TC_Save.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_Save.Run">
            <summary>
            Saves the Concentration data and uses a default file name and path (Application Data Path)
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_Save.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_Save.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SaveAs">
            <summary>
            The test case TC_SaveAs.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SaveAs.Run">
            <summary>
            Saves the Concentration data to a default file in report folder
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SaveAs.Run(System.String)">
            <summary>
            Saves the Concentration data and uses a file name given by the user
            </summary>
            <param name="fileName">
            The file name.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SaveAs.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SaveAs.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SetCoefficientsFromDevice">
            <summary>
            The test case TC_SetCoefficientsFromDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SetCoefficientsFromDevice.Run(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Set Coefficients From Device
            </summary>
            <param name="a0">
            The a0.
            </param>
            <param name="a1">
            The a1.
            </param>
            <param name="a2">
            The a2.
            </param>
            <param name="a3">
            The a3.
            </param>
            <param name="a4">
            The a4.
            </param>
            <param name="b1">
            The b1.
            </param>
            <param name="b2">
            The b2.
            </param>
            <param name="b3">
            The b3.
            </param>
            <param name="d1">
            The d1.
            </param>
            <param name="d2">
            The d2.
            </param>
            <param name="d3">
            The d3.
            </param>
            <param name="d4">
            The d4.
            </param>
            <returns>
            <c>true</c> if coefficients have been set, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SetCoefficientsFromDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SetCoefficientsFromDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SetTableValue">
            <summary>
            The test case TC_SetTableValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SetTableValue.Run(System.String)">
            <summary>
            Sets all table values provided from a string.E.g. 5.5;5.4;5.6;5.7
            </summary>
            <param name="inputValues">
            The input values.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SetTableValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_SetTableValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_WriteCoefficientsToDevice">
            <summary>
            The test case TC_WriteCoefficientsToDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_WriteCoefficientsToDevice.Run">
            <summary>
            Writes coefficients to device and checks that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_WriteCoefficientsToDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.ConcentrationV2.TC_WriteCoefficientsToDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ActivateSoftwareOption">
            <summary>
            Class TC_ActivateSoftwareOption.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ActivateSoftwareOption.Run(System.String,System.String)">
            <summary>
            Activates the software using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the software activation option parameter. Use this form: Promass 100//Expert//System//Administration//Activate SW option:
            </param>
            <param name="softwareOptionCode">
            The software option code.
            </param>
            <returns>
            True if test case is passed, false otherwise.
            </returns>        
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ActivateSoftwareOption.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ActivateSoftwareOption.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareTableValue">
            <summary>
            The test case TC_CompareTableValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareTableValue.Run(System.Int32,System.Int32,System.String)">
            <summary>
            Gets a value from table and compares it to a reference value.
            </summary>
            <param name="row">
            The row.
            </param>
            <param name="column">
            The column.
            </param>
            <param name="referenceValue">
            The reference value.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareTableValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareTableValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_DeactivateSoftwareOption">
            <summary>
            Class TC_DeactivateSoftwareOption.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_DeactivateSoftwareOption.Run(System.String)">
            <summary>
            Deactivates the software option using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the software activation option parameter. Use this form: Promass 100//Expert//System//Administration//Activate SW option:
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_DeactivateSoftwareOption.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_DeactivateSoftwareOption.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SetTableValue">
            <summary>
            The test case TC_SetTableValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SetTableValue.Run(System.String)">
            <summary>
            Sets all table values provided from a string.E.g. 5.5;5.4;5.6;5.7
            </summary>
            <param name="inputValues">
            The input values.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SetTableValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SetTableValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_WriteCoefficientsToDevice">
            <summary>
            The test case TC_WriteCoefficientsToDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_WriteCoefficientsToDevice.Run">
            <summary>
            Writes coefficients to device and checks that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_WriteCoefficientsToDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_WriteCoefficientsToDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SetCoefficientsFromDevice">
            <summary>
            The test case TC_SetCoefficientsFromDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SetCoefficientsFromDevice.Run(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Opens the tab 'Coefficients Overview and sets the coefficients from device.
            </summary>
            <param name="a0">The a0 coefficient.</param>
            <param name="a1">The a1 coefficient.</param>
            <param name="a2">The a2 coefficient.</param>
            <param name="a3">The a3 coefficient.</param>
            <param name="a4">The a4 coefficient.</param>
            <param name="b1">The b1 coefficient.</param>
            <param name="b2">The b2 coefficient.</param>
            <param name="b3">The b3 coefficient.</param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SetCoefficientsFromDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SetCoefficientsFromDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SaveAs">
            <summary>
            The test case TC_SaveAs.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SaveAs.Run">
            <summary>
            Saves the Concentration data to a default file in report folder
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SaveAs.Run(System.String)">
            <summary>
            Saves the Concentration data and uses a file name given by the user
            </summary>
            <param name="fileName">
            The file name.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SaveAs.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_SaveAs.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Save">
            <summary>
            The test case TC_Save.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Save.Run">
            <summary>
            Saves the Concentration data and uses a default file name and path (Application Data Path)
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Save.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Save.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ReadCoefficientsFromDevice">
            <summary>
            The test case TC_ReadCoefficientsFromDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ReadCoefficientsFromDevice.Run">
            <summary>
            Writes coefficients to device and checks that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ReadCoefficientsFromDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ReadCoefficientsFromDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_OpenModuleOnline.Run">
            <summary>
            Opens the module when the device is online
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the module when the device is online
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_OpenModuleOffline">
            <summary>
            The test case TC_OpenModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_OpenModuleOffline.Run">
            <summary>
            Opens the module when the device is offline
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_OpenModuleOffline.Run(System.Int32)">
            <summary>
            Opens the module when the device is offline
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_OpenModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_OpenModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Load">
            <summary>
            The test case TC_Load.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Load.Run">
            <summary>
            Loads a default Concentration file from the report folder. Verifies that coefficients are available at tab Coefficients overview after loading.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Load.Run(System.String)">
            <summary>
            Loads a Concentration file. Verifies that coefficients are available at tab Coefficients overview after loading.
            </summary>
            <param name="fileName">
            The file name.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Load.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Load.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Import">
            <summary>
            The test case TC_Import.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Import.Run">
            <summary>
            Imports a default Concentration file from the report folder.Makes a screenshot of tab Expert results to check if the diagram is not shown any longer and verifies that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Import.Run(System.String)">
            <summary>
            Imports a Concentration file.Makes a screenshot of tab Expert results to check if the diagram is not shown any longer and verifies that there is no critical error afterwards.
            </summary>
            <param name="fileName">
            The file name.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Import.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Import.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Export">
            <summary>
            The test case TC_Export.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Export.Run">
            <summary>
            Exports a Concentration file to the report folder. Verifies that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Export.Run(System.String)">
            <summary>
            Exports a Concentration file. Verifies that there is no critical error afterwards.
            </summary>
            <param name="fileName">
            The file name.
            </param>
            <returns>
            True if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Export.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_Export.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_DeleteConcentrationData">
            <summary>
            The test case TC_DeleteConcentrationData.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_DeleteConcentrationData.Run">
            <summary>
            Deletes the Concentration data by clicking the button New. Verifies that coefficients are deleted afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_DeleteConcentrationData.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_DeleteConcentrationData.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ConfigureBaseSettings">
            <summary>
            The test case TC_ConfigureBaseSettings.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ConfigureBaseSettings.Run(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Selects tab Basic settings and configures the parameter
            </summary>
            <param name="calculationBase">
            The calculation Base.
            </param>
            <param name="liquidType">
            The liquid Type.
            </param>
            <param name="densityCalibration">
            The density Calibration.
            </param>
            <param name="fieldDensityAdjustment">
            The field Density Adjustment.
            </param>
            <param name="sensor">
            The sensor.
            </param>
            <param name="temperatureUnit">
            The temperature Unit.
            </param>
            <param name="temperatureMin">
            The temperature Min.
            </param>
            <param name="temperatureMax">
            The temperature Max.
            </param>
            <param name="concentrationUnit">
            The concentration Unit.
            </param>
            <param name="concentrationMin">
            The concentration Min.
            </param>
            <param name="concentrationMax">
            The concentration Max.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ConfigureBaseSettings.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_ConfigureBaseSettings.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCoefficientsReadFromDeviceWithExpectedCoefficients">
            <summary>
            The test case TC_CompareCoefficientsReadFromDeviceWithExpectedCoefficients.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCoefficientsReadFromDeviceWithExpectedCoefficients.Run(System.String,System.String)">
            <summary>
            Opens the tab Coefficients overview and compares the coefficients read from device against a set of expected coefficients provided by the user.
            </summary>
            <param name="accuracy">
            The maximum allowed difference between two coefficients. E.g. 0.001.
            </param>
            <param name="expectedCoefficients">
            String with the expected coefficients. Use semicolons to separate the values. E.g. -5.0;10.1;8.9
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCoefficientsReadFromDeviceWithExpectedCoefficients.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCoefficientsReadFromDeviceWithExpectedCoefficients.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCalculatedCoefficientsWithExpectedCoefficients">
            <summary>
            The test case TC_CompareCalculatedCoefficientsWithExpectedCoefficients.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCalculatedCoefficientsWithExpectedCoefficients.Run(System.String,System.String)">
            <summary>
            Opens the tab Coefficients overview and compares the calculated coefficients against a set of expected coefficients provided by the user.
            </summary>
            <param name="accuracy">
            The maximum allowed difference between two coefficients. E.g. 0.001.
            </param>
            <param name="expectedCoefficients">
            String with the expected coefficients. Use semicolons to separate the values. E.g. -5.0;10.1;8.9
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCalculatedCoefficientsWithExpectedCoefficients.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCalculatedCoefficientsWithExpectedCoefficients.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCalculatedCoefficientsWithCoefficientsReadFromDevice">
            <summary>
            The test case TC_CompareCalculatedCoefficientsWithCoefficientsReadFromDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCalculatedCoefficientsWithCoefficientsReadFromDevice.Run(System.String)">
            <summary>
            Opens the tab Coefficients overview and compares the coefficients read from device with the calculated coefficients.
            </summary>
            <param name="accuracy">
            The maximum allowed difference between two coefficients. E.g. 0.001.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCalculatedCoefficientsWithCoefficientsReadFromDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CompareCalculatedCoefficientsWithCoefficientsReadFromDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CloseModule.Run">
            <summary>
            Closes the module.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes the module.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllTabPagesExceptLiquidPropertiesAreActive">
            <summary>
            The test case TC_CheckThatAllTabPagesExceptLiquidPropertiesAreActive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllTabPagesExceptLiquidPropertiesAreActive.Run">
            <summary>
            Checks which tab pages of the concentration module are active. All tab pages except for Liquid properties are active. This is the default case. 
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllTabPagesExceptLiquidPropertiesAreActive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllTabPagesExceptLiquidPropertiesAreActive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllTabPagesAreActive">
            <summary>
            The test case TC_CheckThatAllTabPagesAreActive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllTabPagesAreActive.Run">
            <summary>
            Checks which tab pages of the concentration module are active. All tab pages except for Liquid properties are active. This is the default case. 
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllTabPagesAreActive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllTabPagesAreActive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllFieldsInBaseSettingsAreGrayed">
            <summary>
            The test case TC_CheckThatAllFieldsInBaseSettingsAreGrayed.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllFieldsInBaseSettingsAreGrayed.Run">
            <summary>
            Checks whether all elements in the tab Base settings ( combo boxes, edit fields etc...) except Calculation base are grayed and inactive. 
            This is the case when selecting Fine tuning as Calculation base.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllFieldsInBaseSettingsAreGrayed.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckThatAllFieldsInBaseSettingsAreGrayed.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckExpertResults">
            <summary>
            The test case TC_CheckExpertResults.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckExpertResults.Run">
            <summary>
            Opens tab Expert results and makes a screenshot of every result diagram available.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckExpertResults.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckExpertResults.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CalculateCoefficients">
            <summary>
            The test case TC_CalculateCoefficients.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CalculateCoefficients.Run">
            <summary>
            Calculates the concentration coefficients. Checks that there is no critical error and that tab Coefficients overview shows calculated coefficients.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CalculateCoefficients.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CalculateCoefficients.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckCoefficientCalculation">
            <summary>
            Description of TC_CheckCoefficientCalculation.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Concentration.TC_CheckCoefficientCalculation.Run">
            <summary>
            Start execution
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_CloseModule.Run">
            <summary>
            Closes the module Create Documentation
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes the module Create Documentation
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_OpenModuleOnline.Run">
            <summary>
            Opens the module Create Documentation when the device is online.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the module Create Documentation when the device is online.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_SaveDocumentationAsPdf">
            <summary>
            The test case TC_SaveDocumentationAsPdf.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_SaveDocumentationAsPdf.Run">
            <summary>
            Saves the documentation as pdf file.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_SaveDocumentationAsPdf.Run(System.String)">
            <summary>
            Saves the documentation as pdf file.
            </summary>
            <param name="fileName">
            Name and path of the file. Use this form: C:\test\testPrint
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_SaveDocumentationAsPdf.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.CreateDocumentation.TC_SaveDocumentationAsPdf.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_CloseModule.Run">
            <summary>
            Closes this module.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes this module.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for module closing.
            </param>
            <returns>
            True if passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_LoadCurves">
            <summary>
            The test case TC_LoadCurves.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_LoadCurves.Run">
            <summary>
            Loads curves(s) with a default file name from report folder.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_LoadCurves.Run(System.String)">
            <summary>
            Runs the specified file name.
            </summary>
            <param name="fileName">
            Filename and path where file is saved, Use this form: C:\Test\test.curves
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_LoadCurves.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_LoadCurves.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_NewCurve">
            <summary>
            The test case TC_NewCurve.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_NewCurve.Run">
            <summary>
            Creates a new curve and discards available curves. Makes a screenshot afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_NewCurve.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_NewCurve.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_OpenModuleOffline">
            <summary>
            The test case TC_OpenModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_OpenModuleOffline.Run">
            <summary>
            Opens the module when the device is offline.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_OpenModuleOffline.Run(System.Int32)">
            <summary>
            Opens the module when the device is offline.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_OpenModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_OpenModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_OpenModuleOnline.Run">
            <summary>
            Opens the module when the device is online.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the module when the device is online.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_ReadCurvesCyclic">
            <summary>
            The test case TC_ReadCurvesCyclic.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_ReadCurvesCyclic.Run(System.Int32)">
            <summary>
            Reads a specified number of curves cyclic.
            </summary>
            <param name="numberOfCurves">
            The number of curves after which cyclic reading stops.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_ReadCurvesCyclic.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_ReadCurvesCyclic.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_ReadSingleCurve">
            <summary>
            The test case TC_ReadSingleCurve.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_ReadSingleCurve.Run">
            <summary>
            Reads a single curve and takes a screenshot of the diagram afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_ReadSingleCurve.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_ReadSingleCurve.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_SaveCurve">
            <summary>
            The test case TC_SaveCurve.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_SaveCurve.Run">
            <summary>
            Saves curves with a default file name at a default location.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_SaveCurve.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_SaveCurve.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_SaveCurveAs">
            <summary>
            The test case TC_SaveCurveAs.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_SaveCurveAs.Run">
            <summary>
            Saves curves(s) with a default file name  in report folder.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_SaveCurveAs.Run(System.String)">
            <summary>
            Runs the specified file name.
            </summary>
            <param name="fileName">
            Filename and path under which file is saved: Use this form: C:\Test\test
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_SaveCurveAs.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurveShed.TC_SaveCurveAs.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_CloseModule.Run">
            <summary>
            Closes this module.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes this module.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_LoadCurves">
            <summary>
            The test case TC_LoadCurves.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_LoadCurves.Run">
            <summary>
            Loads curves(s) with a default file name from report folder.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_LoadCurves.Run(System.String)">
            <summary>
            Runs the specified file name.
            </summary>
            <param name="fileName">
            Filename and path where file is saved, Use this form: C:\Test\test.curves
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_LoadCurves.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_LoadCurves.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_NewCurve">
            <summary>
            The test case TC_NewCurve.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_NewCurve.Run">
            <summary>
            Creates a new curve and discards available curves. Makes a screenshot afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_NewCurve.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_NewCurve.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_OpenModuleOffline">
            <summary>
            The test case TC_OpenModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_OpenModuleOffline.Run">
            <summary>
            Opens the module when the device is offline.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_OpenModuleOffline.Run(System.Int32)">
            <summary>
            Opens the module when the device is offline.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_OpenModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_OpenModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_OpenModuleOnline.Run">
            <summary>
            Opens the module when the device is online.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the module when the device is online.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadCurvesCyclic">
            <summary>
            The test case TC_ReadCurvesCyclic.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadCurvesCyclic.Run(System.Int32)">
            <summary>
            Reads a specified number of curves cyclic.
            </summary>
            <param name="numberOfCurves">
            The number of curves after which cyclic reading stops.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadCurvesCyclic.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadCurvesCyclic.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadMap">
            <summary>
            The test case TC_ReadMap.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadMap.Run">
            <summary>
            Reads the map from the device and takes a screenshot afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadMap.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadMap.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadSingleCurve">
            <summary>
            The test case TC_ReadSingleCurve.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadSingleCurve.Run">
            <summary>
            Reads a single curve and takes a screenshot of the diagram afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadSingleCurve.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_ReadSingleCurve.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_SaveCurve">
            <summary>
            The test case TC_SaveCurve.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_SaveCurve.Run">
            <summary>
            Saves curves with a default file name at a default location.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_SaveCurve.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_SaveCurve.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_SaveCurveAs">
            <summary>
            The test case TC_SaveCurveAs.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_SaveCurveAs.Run">
            <summary>
            Saves curves(s) with a default file name  in report folder.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_SaveCurveAs.Run(System.String)">
            <summary>
            Runs the specified file name.
            </summary>
            <param name="fileName">
            Filename and path under which file is saved: Use this form: C:\Test\test
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_SaveCurveAs.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_SaveCurveAs.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_WriteMap">
            <summary>
            The test case TC_WriteMap.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_WriteMap.Run">
            <summary>
            Writes the map to device.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_WriteMap.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EnvelopeCurve.TC_WriteMap.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_ActivateMaintenanceMode">
            <summary>
            The test case TC_ActivateMaintenanceMode.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_ActivateMaintenanceMode.Run(System.String)">
            <summary>
            Sets the device in maintenance mode using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the access code parameter. Use this form: Promass 100//Expert//Enter access code:
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_ActivateMaintenanceMode.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_ActivateMaintenanceMode.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_ActivateServiceMode">
            <summary>
            The test case TC_ActivateServiceMode.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_ActivateServiceMode.Run(System.String,System.String)">
            <summary>
            Sets the device in service mode using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the access code parameter. Use this form: Promass 100//Expert//Enter access code:
            </param>
            <param name="serviceCode">
            The service code for the device.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_ActivateServiceMode.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_ActivateServiceMode.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_CheckNumberOfEvents">
            <summary>
            The test case TC_CheckNumberOfEvents.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_CheckNumberOfEvents.Run(System.Int32)">
            <summary>
            Checking the number of events. (Less than or equal to a specified number)
            </summary>
            <param name="maximumAllowedEvents">
            The maximum allowed events.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_CheckNumberOfEvents.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_CheckNumberOfEvents.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_CloseModule.Run">
            <summary>
            Closes the module EventList
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes the module EventList
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_OpenModuleOnline.Run">
            <summary>
            Opens the module EventList when the device is online.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the module EventList when the device is online.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_RefreshEventList">
            <summary>
            Opens module Event List, refreshes and closes the module afterwards.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.EventList.TC_RefreshEventList.Run">
            <summary>
            Refreshes the EventList
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateHistoromSoftwareOption">
            <summary>
            The test case TC_ActivateHistoromSoftwareOption.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateHistoromSoftwareOption.Run(System.String,System.String)">
            <summary>
            Activates the software option for Historom using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the software activation option parameter. Use this form: Promass 100//Expert//System//Administration//Activate SW option:
            </param>
            <param name="softwareOptionCode">
            The software option code.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateHistoromSoftwareOption.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateHistoromSoftwareOption.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateMaintenanceMode">
            <summary>
            The test case TC_ActivateMaintenanceMode.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateMaintenanceMode.Run(System.String)">
            <summary>
            Sets the device in maintenance mode using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the access code parameter. Use this form: Promass 100//Expert//Enter access code:
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateMaintenanceMode.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateMaintenanceMode.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateServiceMode">
            <summary>
            The test case TC_ActivateServiceMode.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateServiceMode.Run(System.String,System.String)">
            <summary>
            Sets the device in service mode using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the access code parameter. Use this form: Promass 100//Expert//Enter access code:
            </param>
            <param name="serviceCode">
            The service code for the device.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateServiceMode.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ActivateServiceMode.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_AssignChannelsRandomly">
            <summary>
            The test case TC_AssignChannelsRandomly.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_AssignChannelsRandomly.Run">
            <summary>
            Assigns the channels in settings tab randomly
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_AssignChannelsRandomly.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_AssignChannelsRandomly.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ChannelAssignment">
            <summary>
            Description of TC_ChannelAssignment.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ChannelAssignment.Run">
            <summary>
            Start execution
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckDiagram">
            <summary>
            The test case TC_CheckDiagram.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckDiagram.Run">
            <summary>
            Selects the tab diagram data and makes a screenshot.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckDiagram.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckDiagram.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckHistoromInfoMessage">
            <summary>
            The test case TC_CheckHistoromInfoMessage.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckHistoromInfoMessage.Run(System.String)">
            <summary>
            Checks whether the Historom module info message contains a specified string
            </summary>
            <param name="value">
            The value.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckHistoromInfoMessage.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckHistoromInfoMessage.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckMaximumNumberOfEvents">
            <summary>
            The test case TC_CheckMaximumNumberOfEvents.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckMaximumNumberOfEvents.Run(System.Int32)">
            <summary>
            Checks whether the number of events is less than or equal to a number provided by the user.
            </summary>
            <param name="expectedMaximumNumberOfEvents">
            The expected maximum number of events.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckMaximumNumberOfEvents.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckMaximumNumberOfEvents.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckMinimumNumberOfEvents">
            <summary>
            The test case TC_CheckMinimumNumberOfEvents.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckMinimumNumberOfEvents.Run(System.Int32)">
            <summary>
            Checks whether the number of events is greater than or equal to a number provided by the user.
            </summary>
            <param name="expectedMinimumNumberOfEvents">
            The expected minimum number of events.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckMinimumNumberOfEvents.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckMinimumNumberOfEvents.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckStatisticResults">
            <summary>
            The test case TC_CheckStatisticResults.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckStatisticResults.Run">
            <summary>
            Checks that the tab Statistic results contains values.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckStatisticResults.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CheckStatisticResults.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CloseModule.Run">
            <summary>
            Closes the module.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes the module.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ConfigureSettings">
            <summary>
            The test case TC_ConfigureSettings.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ConfigureSettings.Run(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Configures the HistoRom settings found in the tab Settings.
            </summary>
            <param name="assignChannel1">
            Assignment for channel1. Use string.empty if you do not want to modify this parameter.
            </param>
            <param name="assignChannel2">
            Assignment for channel2.Use string.empty if you do not want to modify this parameter.
            </param>
            <param name="assignChannel3">
            Assignment for channel3.Use string.empty if you do not want to modify this parameter.
            </param>
            <param name="assignChannel4">
            Assignment for channel4.Use string.empty if you do not want to modify this parameter.
            </param>
            <param name="loggingInterval">
            The logging interval.Use string.empty if you do not want to modify this parameter.
            </param>
            <param name="clearLoggingData">
            Clear logging data.Use string.empty if you do not want to modify this parameter.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ConfigureSettings.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ConfigureSettings.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CreateDocumentationHistorom">
            <summary>
            The test case TC_CreateDocumentationHistorom.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CreateDocumentationHistorom.Run(System.String)">
            <summary>
            Runs this instance.
            </summary>
            <param name="fileName">
            Filename and path under which file is saved. Use this form: C:\Test\testPrintout
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CreateDocumentationHistorom.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_CreateDocumentationHistorom.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_DeactivateHistoromSoftwareOption">
            <summary>
            The test case TC_DeactivateHistoromSoftwareOption.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_DeactivateHistoromSoftwareOption.Run(System.String)">
            <summary>
            Deactivates the software option for Historom using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the software activation option parameter. Use this form: Promass 100//Expert//System//Administration//Activate SW option:
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_DeactivateHistoromSoftwareOption.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_DeactivateHistoromSoftwareOption.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_DeleteHistoromData">
            <summary>
            The test case TC_DeleteHistoromData.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_DeleteHistoromData.Run">
            <summary>
            Deletes the HistoRom data via new button. Checks whether the event list and the statistic results are empty afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_DeleteHistoromData.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_DeleteHistoromData.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ExportHistoRomData">
            <summary>
            The test case TC_ExportHistoRomData.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ExportHistoRomData.Run">
            <summary>
            Exports the HistoRom data with a default file name in the report folder.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ExportHistoRomData.Run(System.String)">
            <summary>
            Exports the HistoRom data.
            </summary>
            <param name="fileName">
            Filename and path of the file: Use this form: C:\Test\testExport
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ExportHistoRomData.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ExportHistoRomData.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenFile">
            <summary>
            The test case TC_OpenFile.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenFile.Run">
            <summary>
            Opens a HistoRom file from the report folder and checks whether statistic results and the event list contain values afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenFile.Run(System.String)">
            <summary>
            Opens a HistoRom file and checks whether statistic results and the event list contain values afterwards.
            </summary>
            <param name="fileName">
            Filename and path of the file: Use this form: C:\Test\test.his
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenModuleOffline">
            <summary>
            The test case TC_OpenModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenModuleOffline.Run">
            <summary>
            Opens the module when the device is offline.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenModuleOffline.Run(System.Int32)">
            <summary>
            Opens the module when the device is offline.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenModuleOnline.Run">
            <summary>
            Opens the module when the device is online
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the module when the device is online
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ReadEvents">
            <summary>
            The test case TC_ReadEvents.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ReadEvents.Run">
            <summary>
            Reads the events. Checks that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ReadEvents.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_ReadEvents.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SaveData">
            <summary>
            The test case TC_SaveData.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SaveData.Run">
            <summary>
                Saves current HISTOROM data via Save button
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SaveData.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SaveData.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SaveDataAs">
            <summary>
            The test case TC_SaveDataAs.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SaveDataAs.Run">
            <summary>
            Saves Historom data with default file name in report folder, replaces already existing files with same filename
                FILE WATCHER will check if file has been created or modified
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SaveDataAs.Run(System.String)">
            <summary>
            Saves Historom data with given filename, replaces already existing files with same filename
                FILE WATCHER will check if file has been created or modified
            </summary>
            <param name="fileName">
            Filename and path under which file is saved. Use this form: C:\Test\test
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SaveDataAs.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SaveDataAs.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SwitchTabs">
            <summary>
            The test case TC_SwitchTabs.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SwitchTabs.Run">
            <summary>
            Switches slowly through all tabs
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SwitchTabs.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Historom.TC_SwitchTabs.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Calculate">
            <summary>
            The test case TC_Calculate.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Calculate.Run">
            <summary>
            Calculates table. Makes a screenshot of the table and the diagram.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Calculate.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Calculate.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CheckSettingsParameterNotInvalid">
            <summary>
            The test case TC_CheckSettingsParameterNotInvalid.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CheckSettingsParameterNotInvalid.Run">
            <summary>
            Opens the settings tab and checks that no parameter is invalid
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CheckSettingsParameterNotInvalid.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CheckSettingsParameterNotInvalid.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CompareTableValue">
            <summary>
            The test case TC_CompareTableValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CompareTableValue.Run(System.Int32,System.Int32,System.String)">
            <summary>
            Gets a value from table and compares it to a reference value.
            </summary>
            <param name="row">
            The row.
            </param>
            <param name="column">
            The column.
            </param>
            <param name="referenceValue">
            The reference value.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CompareTableValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CompareTableValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_SetTableValue">
            <summary>
            The test case TC_SetTableValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_SetTableValue.Run(System.String)">
            <summary>
            Sets all table values provided from a string.E.g. 5.5;5.4;5.6;5.7
            </summary>
            <param name="inputValues">The input values.</param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_SetTableValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_SetTableValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CloseModule.Run">
            <summary>
            Closes the module
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes the module
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureCylindricalTankStanding">
            <summary>
            The test case TC_ConfigureCylindricalTankStanding.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureCylindricalTankStanding.Run(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Selects tank type cylindrical tank standing and configures its parameter if needed. Use empty strings if you do not want to configure a parameter.
            </summary>
            <param name="height">
            The height.
            </param>
            <param name="diameter">
            The diameter.
            </param>
            <param name="length">
            The length.
            </param>
            <param name="ceilingType">
            Type of the ceiling.
            </param>
            <param name="bottomType">
            Type of the bottom.
            </param>
            <param name="wallThickness">
            The wall thickness.
            </param>
            <param name="ceilingHeight">
            Height of the ceiling.
            </param>
            <param name="ceilingWidth">
            Width of the ceiling.
            </param>
            <param name="bottomHeight">
            Height of the bottom.
            </param>
            <param name="bottomWidth">
            Width of the bottom.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureCylindricalTankStanding.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureCylindricalTankStanding.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureGeneralSettings">
            <summary>
            The test case TC_ConfigureGeneralSettings.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureGeneralSettings.Run(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Opens the tab Settings and configures the General Settings parameter. Use string.empty if you want to skip a parameter.
            </summary>
            <param name="linearizationType">The linearization type.</param>
            <param name="emptyCalibration">The empty calibration.</param>
            <param name="fullCalibration">The full calibration.</param>
            <param name="distanceUnit">The distance unit.</param>
            <param name="levelUnit">The level unit.</param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureGeneralSettings.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureGeneralSettings.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureHorizontalCylindricalTank">
            <summary>
            The test case TC_ConfigureHorizontalCylindricalTank.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureHorizontalCylindricalTank.Run(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Selects tank type Horizontal cylindrical tank and configures its parameter if needed. Use empty strings if you do not want to configure a parameter.
            </summary>
            <param name="height">
            The height.
            </param>
            <param name="diameter">
            The diameter.
            </param>
            <param name="length">
            The length.
            </param>
            <param name="angle">
            The angle.
            </param>
            <param name="endTypeRight">
            The end type right.
            </param>
            <param name="endTypeLeft">
            The end type left.
            </param>
            <param name="wallThickness">
            The wall thickness.
            </param>
            <param name="changePosition">
            The change position.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureHorizontalCylindricalTank.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureHorizontalCylindricalTank.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureModularTank">
            <summary>
            The test case TC_ConfigureModularTank.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureModularTank.Run(System.String,System.String)">
            <summary>
            Selects tank type Modular tank and configures its parameter if needed. Use empty strings if you do not want to configure a parameter.
            </summary>
            <param name="height">
            The height.
            </param>
            <param name="view">
            The view.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureModularTank.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureModularTank.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureModularTanksCircular">
            <summary>
            The test case TC_ConfigureModularTanksCircular.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureModularTanksCircular.Run(System.String)">
            <summary>
            Selects tank type Modular tank and configures its parameter if needed. Use empty strings if you do not want to configure a parameter.
            </summary>
            <param name="height">
            The height.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureModularTanksCircular.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureModularTanksCircular.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureSphericalTank">
            <summary>
            The test case TC_ConfigureSphericalTank.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureSphericalTank.Run(System.String,System.String)">
            <summary>
            Selects tank type Spherical tank and configures its parameter if needed. Use empty strings if you do not want to configure a parameter.
            </summary>
            <param name="height">
            The height.
            </param>
            <param name="diameter">
            The diameter.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureSphericalTank.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureSphericalTank.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureUserSettings">
            <summary>
            The test case TC_ConfigureUserSettings.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureUserSettings.Run(System.String)">
            <summary>
            Opens the tab Settings and configures the User Settings parameter.
            </summary>
            <param name="unitAfterLinearization">The unit after linearization.</param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureUserSettings.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ConfigureUserSettings.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Export">
            <summary>
            The test case TC_Export.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Export.Run">
            <summary>
            Exports a Linearization file with a default name to the report folder. Checks that there is no critical error.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Export.Run(System.String)">
            <summary>
            Exports a Linearization file. Checks that there is no critical error.
            </summary>
            <param name="fileName">
            Name and path of the file. Use this form: C:\Test\testData
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Export.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Export.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Import">
            <summary>
            The test case TC_Import.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Import.Run">
            <summary>
            Exports a Linearization file. Checks that there is no critical error.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Import.Run(System.String)">
            <summary>
            Exports a Linearization file. Checks that there is no critical error.
            </summary>
            <param name="fileName">
            Name and path of the file. Use this form: C:\Test\testData.csv
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Import.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_Import.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_OpenModuleOffline">
            <summary>
            The test case TC_OpenModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_OpenModuleOffline.Run">
            <summary>
            Opens the module when the device is offline
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_OpenModuleOffline.Run(System.Int32)">
            <summary>
            Opens the module when the device is offline
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_OpenModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_OpenModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_OpenModuleOnline.Run">
            <summary>
            Opens the module when the device is online
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the module when the device is online
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ReadTable">
            <summary>
            The test case TC_ReadTable.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ReadTable.Run(System.Int32)">
            <summary>
            Reads the Linearization Table, makes a screenshot of the diagram and table and checks that there is no critical error.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout in milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ReadTable.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_ReadTable.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_WriteTable">
            <summary>
            The test case TC_WriteTable.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_WriteTable.Run(System.Int32)">
            <summary>
            Write the Linearization Table, makes a screenshot of the diagram and table and checks that there is no critical error.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout in milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_WriteTable.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Linearization.TC_WriteTable.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_DragAndDropParameterIntoHeader">
            <summary>
            The test case TC_DragAndDropParameterIntoHeader.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_DragAndDropParameterIntoHeader.Run(System.String,System.String,System.String)">
            <summary>
            Runs the specified item identifier.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
            <returns><c>true</c> if successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_DragAndDropParameterIntoHeader.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_DragAndDropParameterIntoHeader.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ConnectToSoftwareUnderTest">
            <summary>
            The test case TC_ConnectToSoftwareUnderTest.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ConnectToSoftwareUnderTest.Run">
            <summary>
            Connects the testing interface using the config file TestInterface.txt in temp folder. Defaults will be used if file not found
            </summary>
            <returns><c>true</c> if connected, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ConnectToSoftwareUnderTest.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ConnectToSoftwareUnderTest.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_DisconnectSoftwareUnderTest">
            <summary>
            The test case TC_DisconnectSoftwareUnderTest.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_DisconnectSoftwareUnderTest.Run">
            <summary>
            Disconnects software under test
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_DisconnectSoftwareUnderTest.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_DisconnectSoftwareUnderTest.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatDeviceHasNoFailure">
            <summary>
            Class TC_CheckThatDeviceHasNoFailure.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatDeviceHasNoFailure.Run">
            <summary>
            Checking whether device is not in failure mode using the Namur Status displayed in the header
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatDeviceHasNoFailure.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatDeviceHasNoFailure.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameter">
            <summary>
            The test case TC_ChangeParameter.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameter.Run(System.String,System.String)">
            <summary>
            Changes the value of a parameter.
            </summary>
            <param name="pathToParameter">
            The path to the parameter. Use this form: Micropilot 5x//Setup//Full calibration (4):
            </param>
            <param name="value">
            The value for the parameter.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameter.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameter.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameterAndCheckValue">
            <summary>
            The test case TC_ChangeParameterAndCheckValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameterAndCheckValue.Run(System.String,System.String)">
            <summary>
            Changes the value of a parameter. Verifies that the value has changed afterwards.
            This TestCase is only valid with usage of displayed values, not with the usage of 
            index.
            </summary>
            <param name="pathToParameter">
            The path to the parameter. Use this form: Micropilot 5x//Setup//Full calibration (4):
            </param>
            <param name="value">
            The value for the parameter.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameterAndCheckValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameterAndCheckValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameterWithoutConfirmingAndCheckValue">
            <summary>
            The test case TC_ChangeParameterWithoutConfirmingAndCheckValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameterWithoutConfirmingAndCheckValue.Run(System.String,System.String)">
            <summary>
            Changes the value of a parameter, but does not confirm the change. Verifies that the value has not changed afterwards
            </summary>
            <param name="pathToParameter">
            The path to the parameter. Use this form: Micropilot 5x//Setup//Full calibration (4):
            </param>
            <param name="value">
            The value which will be changed
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameterWithoutConfirmingAndCheckValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ChangeParameterWithoutConfirmingAndCheckValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckNamurStatus">
            <summary>
            The test case TC_CheckNamurStatus.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckNamurStatus.Run(System.String)">
            <summary>
            Checks whether the actual Namur-Status matches the expected status.
            </summary>
            <param name="expectedNamurStatus">
            The expected Namur Status. Possible are 'OK', 'Function check', 'Failure', 'Out of specification', 'Maintenance Required' and 'Offline'.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckNamurStatus.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckNamurStatus.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckParameterStatus">
            <summary>
            The test case TC_CheckParameterStatus.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckParameterStatus.Run(System.String,System.String)">
            <summary>
            Compares the current state of a parameter to a expected state specified by the user.
            </summary>
            <param name="pathToParameter">
            The parameter name and path. Use this form: Micropilot 5x//Setup//Full calibration (4):
            </param>
            <param name="expectedState">
            The expected State. Possible states are Insecure, Invalid, Valid, Modified, Dynamic1, Dynamic2, ModifiedOutOfRange, ModifiedInvalidFormat, ModifiedWrong, WriteFailed, NotRecognized
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckParameterStatus.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckParameterStatus.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckParameterValue">
            <summary>
            The test case TC_CheckParameterValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckParameterValue.Run(System.String,System.String)">
            <summary>
            Checks the value of a parameter
            </summary>
            <param name="pathToParameter">
            Name and path of parameter to check. Use this form: Micropilot 5x//Setup//Full calibration (4):
            </param>
            <param name="expectedValue">
            Expected value
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckParameterValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckParameterValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatParameterAreNotInvalid">
            <summary>
            The test case TC_CheckThatParameterAreNotInvalid.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatParameterAreNotInvalid.Run">
            <summary>
            Examines the status of all parameter the DTM contains. Reports every parameter with the status 'Invalid';
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatParameterAreNotInvalid.Run(System.String)">
            <summary>
            Examines the status of one or more parameter. Reports every parameter with the status Invalid;
            </summary>
            <param name="parameterToCheck">
            String with all parameter to check. E.g. Micropilot 5x//Setup//Empty Calibration (3):;Micropilot 5x//Setup//Full Calibration (4):;Micropilot 5x//Setup//Distance (9):
            Separate each parameter with ; .
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatParameterAreNotInvalid.Run(System.Collections.Generic.List{System.String})">
            <summary>
            Examines the status of one or more parameter. Reports every parameter with the status 'Invalid';
            </summary>
            <param name="parameterToCheck">
            List with parameter to check. E.g. Micropilot 5x//Setup//Empty Calibration (3):, Micropilot 5x//Setup//Full Calibration (4):
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatParameterAreNotInvalid.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatParameterAreNotInvalid.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatParameterCannotBeSetToAnInvalidValue">
            <summary>
            The test case TC_CheckThatParameterCannotBeSetToAnInvalidValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatParameterCannotBeSetToAnInvalidValue.Run(System.String,System.String)">
            <summary>
            Checks that a parameter cannot be set to an invalid or out of range value.
            </summary>
            <param name="pathToParameter">
            The path to the parameter. Use this form: Micropilot 5x//Setup//Full calibration (4):
            </param>
            <param name="invalidValue">
            An invalid value for this parameter. This could be an out of range value or invalid characters.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatParameterCannotBeSetToAnInvalidValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CheckThatParameterCannotBeSetToAnInvalidValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CloseModuleOffline">
            <summary>
            The test case TC_CloseModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CloseModuleOffline.Run">
            <summary>
            Closes the Offline Parameterization
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CloseModuleOffline.Run(System.Int32)">
            <summary>
            Closes the Offline Parameterization
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CloseModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CloseModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CloseModuleOnline">
            <summary>
            The test case TC_CloseModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CloseModuleOnline.Run">
            <summary>
            Closes the Online Parameterization
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CloseModuleOnline.Run(System.Int32)">
            <summary>
            Closes the Online Parameterization
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CloseModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CloseModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_IsParameterExisting">
            <summary>
            The test case TC_IsParameterExisting.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_IsParameterExisting.Run(System.String,System.Boolean)">
            <summary>
            Runs this instance.
            </summary>
            <param name="pathToParameter">
            The path To Parameter.
            </param>
            <param name="shouldExist">
            The should Exist.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_IsParameterExisting.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_IsParameterExisting.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_OpenModuleOffline">
            <summary>
            The test case TC_OpenModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_OpenModuleOffline.Run">
            <summary>
            Opens the Offline Parameterization
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_OpenModuleOffline.Run(System.Int32)">
            <summary>
            Opens the Offline Parameterization
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_OpenModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_OpenModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_OpenModuleOnline.Run">
            <summary>
            Opens the Online Parameterization
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the Online Parameterization
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ResetDevice">
            <summary>
            The test case TC_ResetDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ResetDevice.Run(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Reset a device via Online Parameterization.
            </summary>
            <param name="pathToResetParameter">
            The path to the reset parameter. Use this form: Promass 100//Expert//System//Administration//Device reset:
            </param>
            <param name="value">
            Value for the reset. Use this form: To delivery settings
            </param>
            <param name="waitingTimeForDisconnect">
            The waiting period (in milliseconds) until the dtm has to be disconnected after a device restart. This can take some time with slower communication protocols. USE 0 IF THE DEVICE WILL NOT RESTART.
            </param>
            <param name="waitingTimeForReconnect">
            The waiting period (in milliseconds) until the dtm has to be reconnected after a device restart. This can take some time with slower communication protocols.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ResetDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ResetDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ReturnToHomeFromSilSequence">
            <summary>
            The test case TC_ReturnToHomeFromSilSequence.
            Steps:                   Expected result:
            Select [SIL] via tree    - Start page of [SIL] is displayed
                                     - Button [Next] is inactive
                                     - Button [Cancel] is inactive
                                     - Text field for [SIL] is available
            Select home-button       - Diagnostic page is displayed
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ReturnToHomeFromSilSequence.Run(System.String)">
            <summary>
            Opens SIL/WHG start page, then goes back to the diagnostic page via home button
            </summary>
            <param name="pathToSilWhgParameter">
            The path to the SIL/WHG parameter. E.g.: Levelflex FMP5x//Setup//Advanced setup//SIL/WHG confirmation.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ReturnToHomeFromSilSequence.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ReturnToHomeFromSilSequence.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CancelSilSequence">
            <summary>
            The test case TC_CancelSilSequence.
            Steps:                   Expected result:
            Select [SIL] via tree    - Start page of [SIL] is displayed
                                     - Button [Next] is inactive
                                     - Button [Cancel] is inactive
                                     - Text field for [SIL] is available
            Enter SIL Code 7452 to start [SIL]-sequence    - Button [Next] (or similar) becomes active
            Go forward to next page  - Parameter tree becomes hidden
                                     - Parameter is available that could be changed
                                     - Button [Next] is inactive
                                     - Button [Previous] is active
                                     - Button [Cancel] is active
            Change parameter and confirm    - Button [Next] becomes active
            Go forward to another page    - Parameter is available that could be changed
                                          - Button [Next] is inactive
                                          - Button [Previous] is active
                                          - Button [Cancel] is active"
            Change a parameter value validly    - Parameter is accepted
            Go back to a previous page    - Button [Next] is available and active 
                                          - Button [Previous] is available and active
                                          - Button [Cancel] is available and active
            Press button [Cancel]    - Start page of [SIL] is displayed
                                          -Button [Next] is inactive
                                          -Button [Cancel] is inactive
                                          -Parameter tree is displayed
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CancelSilSequence.Run(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Starts a SIL/WHG sequence but cancels during the process.
            </summary>
            <param name="pathToSilWhgParameter">
            The path to the SIL/WHG parameter. E.g.: Levelflex FMP5x//Setup//Advanced setup//SIL/WHG confirmation.
            </param>
            <param name="silWhgCode">
            The code for SIL/WHG.
            </param>
            <param name="timeoutForCanceling">
            The timeout in milliseconds for the canceling process. Canceling can take some time. Recommended: 15000 milliseconds.
            </param>
            <param name="timeoutForNextButton">
            The timeout in milliseconds for the next button to become active after a parameter has been set. This can take some time. Recommended: 15000 milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CancelSilSequence.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CancelSilSequence.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_LockSilAndCheckParameter">
            <summary>
            The test case TC_LockSilAndCheckParameter.
            Steps:                   Expected result:
            Select [SIL] via tree    - Start page of [SIL] is displayed
                                     - Button [Next] is inactive
                                     - Button [Cancel] is inactive
                                     - Text field for [SIL] is available
            Enter SIL Code 7452 to start [SIL]-sequence    - Button [Next] (or similar) becomes active
            Go through [SIL]-sequence, modify parameters and document them    - Parameters changed
            Enter SIL-Code 7452 to activate [SIL]-sequence    - SIL sequence is left, parameter are locked
            Check several menus    - All parameters are read only
            Select [Deactivate SIL/WHG] via tree    - Start page of [SIL] is displayed
                                     - Button [Next] is inactive
                                     - Button [Cancel] is inactive
                                     - Text field for SIL is available
            Enter SIL-Code 7452 to SIL unlock Device    - SIL sequence is left, parameter are unlocked
            Check several menus    - Parameters could be accessed
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_LockSilAndCheckParameter.Run(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Goes through a SIL/WHG sequence and locks the device. Unlocks it afterwards. The user can specify parameter for which the locking state will be checked during the test.
            </summary>
            <param name="pathToSilWhgParameter">
            The path to the SIL/WHG parameter. E.g.: Levelflex FMP5x//Setup//Advanced setup//SIL/WHG confirmation.
            </param>
            <param name="silWhgCode">
            The code for SIL/WHG.
            </param>
            <param name="pathToDeactivateSilWhg">
            The path To Deactivate Sil Whg. E.g.: Levelflex FMP5x//Setup//Advanced setup//Deactivate SIL/WHG.
            </param>
            <param name="pathToParameter">
            A string with all paths to parameter for which the locking state during the SIL WHG test will be checked. A path looks like this: Levelflex FMP5x//Setup//Full calibration (4):;Levelflex FMP5x//Setup//Full calibration (4):
            Separate each path with ; .
            </param>
            <param name="timeoutForSilWhgPageToDisappear">
            The timeout for SIL/WHG page to disappear after the SIL/WHG sequence is left or finished.
            </param>
            <param name="timeoutForNextButton">
            The timeout in milliseconds for the next button to become active after a parameter has been set. This can take some time. Recommended: 15000 milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_LockSilAndCheckParameter.Run(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32,System.Int32)">
            <summary>
            Goes through a SIL/WHG sequence and locks the device. Unlocks it afterwards. The user can specify parameter for which the locking state will be checked during the test.
            </summary>
            <param name="pathToSilWhgParameter">
            The path to the SIL/WHG parameter. E.g.: Levelflex FMP5x//Setup//Advanced setup//SIL/WHG confirmation.
            </param>
            <param name="silWhgCode">
            The code for SIL/WHG.
            </param>
            <param name="pathToDeactivateSilWhg">
            The path To Deactivate Sil Whg. E.g.: Levelflex FMP5x//Setup//Advanced setup//Deactivate SIL/WHG.
            </param>
            <param name="pathToParameter">
            A list with paths to parameter for which the locking state during the SIL WHG test will be checked. A path looks like this: Levelflex FMP5x//Setup//Full calibration (4).
            </param>
            <param name="timeoutForSilWhgPageToDisappear">
            The timeout for SIL/WHG page to disappear after the SIL/WHG sequence is left or finished.
            </param>
            <param name="timeoutForNextButton">
            The timeout in milliseconds for the next button to become active after a parameter has been set. This can take some time. Recommended: 15000 milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_LockSilAndCheckParameter.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_LockSilAndCheckParameter.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ReturnToHomeFromWhgSequence">
            <summary>
            The test case TC_ReturnToHomeFromWhgSequence.
            The test case TC_ReturnToHomeFromSilSequence.
            Steps:                   Expected result:
            Select [WHG] via tree    - Start page of [WHG] is displayed
                                     - Button [Next] is inactive
                                     - Button [Cancel] is inactive
                                     - Text field for WHG is available
            Select home-button       - Diagnostic page is displayed
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ReturnToHomeFromWhgSequence.Run(System.String)">
            <summary>
            Opens SIL/WHG start page, then goes back to the diagnostic page via home button
            </summary>
            <param name="pathToSilWhgParameter">
            The path to the SIL/WHG parameter. E.g.: Levelflex FMP5x//Setup//Advanced setup//SIL/WHG confirmation.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ReturnToHomeFromWhgSequence.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_ReturnToHomeFromWhgSequence.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CancelWhgSequence">
            <summary>
            The test case TC_CancelWhgSequence.
            Steps:                   Expected result:
            Select [SIL] via tree    - Start page of [WHG] is displayed
                                     - Button [Next] is inactive
                                     - Button [Cancel] is inactive
                                     - Text field for [WHG] is available
            Enter WHG Code 7450 to start [WHG]-sequence    - Button [Next] (or similar) becomes active
            Go forward to next page  - Parameter tree becomes hidden
                                     - Parameter is available that could be changed
                                     - Button [Next] is inactive
                                     - Button [Previous] is active
                                     - Button [Cancel] is active
            Change parameter and confirm    - Button [Next] becomes active
            Go forward to another page    - Parameter is available that could be changed
                                          - Button [Next] is inactive
                                          - Button [Previous] is active
                                          - Button [Cancel] is active"
            Change a parameter value validly    - Parameter is accepted
            Go back to a previous page    - Button [Next] is available and active 
                                          - Button [Previous] is available and active
                                          - Button [Cancel] is available and active
            Press button [Cancel]    - Start page of [WHG] is displayed
                                          -Button [Next] is inactive
                                          -Button [Cancel] is inactive
                                          -Parameter tree is displayed
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CancelWhgSequence.Run(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Starts a SIL/WHG sequence but cancels during the process.
            </summary>
            <param name="pathToSilWhgParameter">
            The path to the SIL/WHG parameter. E.g.: Levelflex FMP5x//Setup//Advanced setup//SIL/WHG confirmation.
            </param>
            <param name="silWhgCode">
            The code for SIL/WHG.
            </param>
            <param name="timeoutForCanceling">
            The timeout in milliseconds for the canceling process. Canceling can take some time. Recommended: 15000 milliseconds.
            </param>
            <param name="timeoutForNextButton">
            The timeout in milliseconds for the next button to become active after a parameter has been set. This can take some time. Recommended: 15000 milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CancelWhgSequence.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_CancelWhgSequence.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_LockWhgAndCheckParameter">
            <summary>
            The test case TC_LockWhgAndCheckParameter.
            Steps:                   Expected result:
            Select [WHG] via tree    - Start page of [WHG] is displayed
                                     - Button [Next] is inactive
                                     - Button [Cancel] is inactive
                                     - Text field for [WHG] is available
            Enter SIL Code 7450 to start [SIL]-sequence    - Button [Next] (or similar) becomes active
            Go through [WHG]-sequence, modify parameters and document them    - Parameters changed
            Enter SIL-Code 7450 to activate [SIL]-sequence    - SIL sequence is left, parameter are locked
            Check several menus    - All parameters are read only
            Select [Deactivate SIL/WHG] via tree    - Start page of [WHG] is displayed
                                     - Button [Next] is inactive
                                     - Button [Cancel] is inactive
                                     - Text field for WHG is available
            Enter WHG-Code 7450 to WHG unlock Device    - WHG sequence is left, parameter are unlocked
            Check several menus    - Parameters could be accessed
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_LockWhgAndCheckParameter.Run(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Goes through a SIL/WHG sequence and locks the device. Unlocks it afterwards. The user can specify parameter for which the locking state will be checked during the test.
            </summary>
            <param name="pathToSilWhgParameter">
            The path to the SIL/WHG parameter. E.g.: Levelflex FMP5x//Setup//Advanced setup//SIL/WHG confirmation.
            </param>
            <param name="silWhgCode">
            The code for SIL/WHG.
            </param>
            <param name="pathToDeactivateSilWhg">
            The path To Deactivate Sil Whg. E.g.: Levelflex FMP5x//Setup//Advanced setup//Deactivate SIL/WHG.
            </param>
            <param name="pathToParameter">
            A list with paths to parameter for which the locking state during the SIL WHG test will be checked. A path looks like this: Levelflex FMP5x//Setup//Full calibration (4).
            </param>
            <param name="timeoutForSilWhgPageToDisappear">
            The timeout for SIL/WHG page to disappear after the SIL/WHG sequence is left or finished.
            </param>
            <param name="timeoutForNextButton">
            The timeout in milliseconds for the next button to become active after a parameter has been set. This can take some time. Recommended: 15000 milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_LockWhgAndCheckParameter.Run(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32,System.Int32)">
            <summary>
            Goes through a SIL/WHG sequence and locks the device. Unlocks it afterwards. The user can specify parameter for which the locking state will be checked during the test.
            </summary>
            <param name="pathToSilWhgParameter">
            The path to the SIL/WHG parameter. E.g.: Levelflex FMP5x//Setup//Advanced setup//SIL/WHG confirmation.
            </param>
            <param name="silWhgCode">
            The code for SIL/WHG.
            </param>
            <param name="pathToDeactivateSilWhg">
            The path To Deactivate Sil Whg. E.g.: Levelflex FMP5x//Setup//Advanced setup//Deactivate SIL/WHG.
            </param>
            <param name="pathToParameter">
            A list with paths to parameter for which the locking state during the SIL WHG test will be checked. A path looks like this: Levelflex FMP5x//Setup//Full calibration (4).
            </param>
            <param name="timeoutForSilWhgPageToDisappear">
            The timeout for SIL/WHG page to disappear after the SIL/WHG sequence is left or finished.
            </param>
            <param name="timeoutForNextButton">
            The timeout in milliseconds for the next button to become active after a parameter has been set. This can take some time. Recommended: 15000 milliseconds.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_LockWhgAndCheckParameter.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_LockWhgAndCheckParameter.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_SelectItem">
            <summary>
            The test case TC_SelectItem.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_SelectItem.Run(System.String)">
            <summary>
            Changes the value of a parameter.
            </summary>
            <param name="pathToParameter">
            The path to the parameter. Use this form: Micropilot 5x//Setup//Full calibration (4):
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_SelectItem.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Parameterization.TC_SelectItem.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_CloseModule.Run">
            <summary>
            Closes the module Save/Restore
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes the module Save/Restore
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_OpenModuleOffline">
            <summary>
            The test case TC_OpenModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_OpenModuleOffline.Run">
            <summary>
            Opens the module Save/Restore when the device is offline.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_OpenModuleOffline.Run(System.Int32)">
            <summary>
            Opens the module Save/Restore when the device is offline.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_OpenModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_OpenModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_OpenModuleOnline.Run">
            <summary>
            Opens the module Save/Restore when the device is online.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the module Save/Restore when the device is online.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreInvalidFile">
            <summary>
            The test case TC_RestoreInvalidFile.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreInvalidFile.Run(System.String)">
            <summary>
            Tries to restore an invalid file and validates whether the modules behavior is correct and its not possible to restore.
            </summary>
            <param name="fileName">
            Filename and path of an invalid deh file. Use this form: C:\test\testdata.deh
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreInvalidFile.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreInvalidFile.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreWithDownload">
            <summary>
            The test case TC_RestoreWithDownload.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreWithDownload.Run">
            <summary>
            Performs a restore with download. File is loaded from a default file path in the report folder.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreWithDownload.Run(System.String)">
            <summary>
            Restores data with downloading it afterwards
            </summary>
            <param name="fileName">
            Name and path of the file. Use this form: C:\test\testfile.deh
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreWithDownload.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreWithDownload.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreWithoutDownload">
            <summary>
            The test case TC_RestoreWithoutDownload.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreWithoutDownload.Run">
            <summary>
            Performs a restore without download. File is loaded from a default file path in the report folder.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreWithoutDownload.Run(System.String)">
            <summary>
            Restores data without downloading it afterwards
            </summary>
            <param name="fileName">
            Name and path of the file. Use this form: C:\test\testfile.deh
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreWithoutDownload.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_RestoreWithoutDownload.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_SaveWithoutUpload">
            <summary>
            The test case TC_SaveWithoutUpload.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_SaveWithoutUpload.Run">
            <summary>
            Performs a save without download. File is saved to a default file path in the report folder.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_SaveWithoutUpload.Run(System.String)">
            <summary>
            Saves the data without uploading it
            </summary>
            <param name="fileName">
            Name and path of the file. Use this form: C:\test\testdata
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_SaveWithoutUpload.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_SaveWithoutUpload.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_SaveWithUpload">
            <summary>
            The test case TC_SaveWithUpload.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_SaveWithUpload.Run">
            <summary>
            Saves the data and performs an upload afterwards. File is saved in the report folder with a default file name.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_SaveWithUpload.Run(System.String)">
            <summary>
            Saves the data and performs an upload afterwards.
            </summary>
            <param name="fileName">
            Name and path of the file. Use this form: C:\test\testdata
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_SaveWithUpload.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.SaveRestore.TC_SaveWithUpload.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_ActivateViscositySoftwareOption">
            <summary>
            The test case TC_ActivateViscositySoftwareOption.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_ActivateViscositySoftwareOption.Run(System.String,System.String)">
            <summary>
            Activates the software option for Viscosity using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the software activation option parameter. Use this form: Promass 100//Expert//System//Administration//Activate SW option:
            </param>
            <param name="softwareOptionCode">
            The software option code.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_ActivateViscositySoftwareOption.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_ActivateViscositySoftwareOption.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Calculate">
            <summary>
            The test case TC_Calculate.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Calculate.Run">
            <summary>
            Calculates the Viscosity parameter
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Calculate.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Calculate.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CheckResultsAfterCalculation">
            <summary>
            The test case TC_CheckResultsAfterCalculation.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CheckResultsAfterCalculation.Run">
            <summary>
            Opens tab Fluid Properties and checks whether Reference viscosity represents a float value.
            Then opens tab Results and checks whether Calculation Model, Coefficient X1, Coefficient X2 and Reference Temperature have valid values.
            Finally opens tab Analysis and makes a screenshot of the module
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CheckResultsAfterCalculation.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CheckResultsAfterCalculation.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CloseModule">
            <summary>
            The test case TC_CloseModule.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CloseModule.Run">
            <summary>
            Closes the module Viscosity.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CloseModule.Run(System.Int32)">
            <summary>
            Closes the module Viscosity.
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module closing.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CloseModule.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CloseModule.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CompareCoefficients">
            <summary>
            The test case TC_CompareCoefficients.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CompareCoefficients.Run(System.String,System.String,System.String)">
            <summary>
            Compares the compensation coefficients from the Results tab with values provided by the user.
            </summary>
            <param name="accuracy">Maximum allowed difference between two coefficients.</param>
            <param name="expectedValueForX1">Value to compare the coefficient x1 with.</param>
            <param name="expectedValueForX2">Value to compare the coefficient x2 with.</param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CompareCoefficients.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CompareCoefficients.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CompareTableValue">
            <summary>
            The test case TC_CompareTableValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CompareTableValue.Run(System.Int32,System.Int32,System.String)">
            <summary>
            Gets a value from table and compares it to a reference value.
            </summary>
            <param name="row">
            The row.
            </param>
            <param name="column">
            The column.
            </param>
            <param name="referenceValue">
            The reference value.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CompareTableValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_CompareTableValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_ConfigureFluidPropertiesParameter">
            <summary>
            The test case TC_ConfigureFluidPropertiesParameter.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_ConfigureFluidPropertiesParameter.Run(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Configures the parameter of the tab Fluid Properties.
            </summary>
            <param name="dynamicViscosityUnit">
            The dynamic viscosity unit. Use string.empty if you want to skip this parameter.
            </param>
            <param name="temperatureUnit">
            The temperature unit. Use string.empty if you want to skip this parameter.
            </param>
            <param name="referenceTemperature">
            The reference temperature. Use string.empty if you want to skip this parameter.
            </param>
            <param name="firstColumn">
            The first column. Use string.empty if you want to skip this parameter.
            </param>
            <param name="secondColumn">
            The second column. Use string.empty if you want to skip this parameter.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_ConfigureFluidPropertiesParameter.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_ConfigureFluidPropertiesParameter.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_DeactivateViscositySoftwareOption">
            <summary>
            The test case TC_DeactivateViscositySoftwareOption.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_DeactivateViscositySoftwareOption.Run(System.String)">
            <summary>
            Deactivates the software option for Viscosity using the Online Parameterization
            </summary>
            <param name="pathToParameter">
            The path to the software activation option parameter. Use this form: Promass 100//Expert//System//Administration//Activate SW option:
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_DeactivateViscositySoftwareOption.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_DeactivateViscositySoftwareOption.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_DeleteViscosityData">
            <summary>
            The test case TC_DeleteViscosityData.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_DeleteViscosityData.Run">
            <summary>
            Deletes the current Viscosity data via button
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_DeleteViscosityData.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_DeleteViscosityData.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Export">
            <summary>
            The test case TC_Export.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Export.Run">
            <summary>
            Exports the Viscosity data to a file in the report folder.
            </summary> 
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>       
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Export.Run(System.String)">
            <summary>
            Exports Viscosity data
            </summary>
            <param name="fileName">
            Name and path of the export file. Use this form: C:\test\testExport
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Export.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Export.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Import">
            <summary>
            The test case TC_Import.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Import.Run">
            <summary>
            Imports the Viscosity data from a file in the report folder.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>        
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Import.Run(System.String)">
            <summary>
            Imports a VISCOSITY file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Import.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_Import.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_IsCalculateButtonActive">
            <summary>
            The test case TC_IsCalculateButtonActive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_IsCalculateButtonActive.Run">
            <summary>
            Verifies whether the button Calculate is active or not.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_IsCalculateButtonActive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_IsCalculateButtonActive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_IsCalculateButtonInactive">
            <summary>
            The test case TC_IsCalculateButtonInactive.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_IsCalculateButtonInactive.Run">
            <summary>
            Verifies whether the button Calculate is inactive or not
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_IsCalculateButtonInactive.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_IsCalculateButtonInactive.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_OpenModuleOffline">
            <summary>
            The test case TC_OpenModuleOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_OpenModuleOffline.Run">
            <summary>
            Opens the module Viscosity when the device is offline
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_OpenModuleOffline.Run(System.Int32)">
            <summary>
            Opens the module Viscosity when the device is offline
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_OpenModuleOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_OpenModuleOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_OpenModuleOnline">
            <summary>
            The test case TC_OpenModuleOnline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_OpenModuleOnline.Run">
            <summary>
            Opens the Module Viscosity when the device is online
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_OpenModuleOnline.Run(System.Int32)">
            <summary>
            Opens the Module Viscosity when the device is online
            </summary>
            <param name="timeoutInMilliseconds">
            The timeout In Milliseconds for the module opening.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_OpenModuleOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_OpenModuleOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_SetTableValue">
            <summary>
            The test case TC_SetTableValue.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_SetTableValue.Run(System.String)">
            <summary>
            Sets all table values provided from a string.E.g. 5.5;5.4;5.6;5.7
            </summary>
            <param name="inputValues">The input values.</param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_SetTableValue.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_SetTableValue.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_WriteValuesToDevice">
            <summary>
            The test case TC_WriteValuesToDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_WriteValuesToDevice.Run(System.Boolean)">
            <summary>
            Writes VISCOSITY values to the device.
            </summary>
            <param name="isSoftwareOptionEnabled">
            set to true if software option is enabled.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_WriteValuesToDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.DeviceFunction.CoDIA.Viscosity.TC_WriteValuesToDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_AddDeviceToProject">
            <summary>
            The test case TC_AddDeviceToProject.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_AddDeviceToProject.Run(System.String,System.String)">
            <summary>
            Adds a specified device to the project.
            </summary>
            <param name="parent">
            Name of the parent node where to add the device. E.g. Host PC or HART Communication
            </param>
            <param name="deviceName">
            Name of the device.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_AddDeviceToProject.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_AddDeviceToProject.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CloseHostApplication">
            <summary>
            The test case TC_CloseHostApplication.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CloseHostApplication.Run">
            <summary>
            Closes FieldCare without saving the current project.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>        
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CloseHostApplication.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CloseHostApplication.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CloseProject">
            <summary>
            The test case TC_CloseProject.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CloseProject.Run">
            <summary>
            Closes the current project without saving it.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CloseProject.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CloseProject.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_ConnectDevice">
            <summary>
            The test case TC_ConnectDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_ConnectDevice.Run">
            <summary>
            Connects currently selected device.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_ConnectDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_ConnectDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CreateNewProject">
            <summary>
            The test case TC_CreateNewProject.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CreateNewProject.Run">
            <summary>
            Creates a new project.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CreateNewProject.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CreateNewProject.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_CreateProjectAddCommDtmAndScan">
            <summary>
            The test case TC_CreateProjectAddCommDtmAndScan.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_CreateProjectAddCommDtmAndScan.Run(System.String,System.Int32,System.String)">
            <summary>
            Creates a new project, adds the specified CommDtm and creates a network
            </summary>
            <param name="commDtm">
            The comm DTM which will be used.
            </param>
            <param name="timeoutInMilliseconds">
            The timeout in milliseconds for the scanning progress.
            </param>
            <param name="networkTag">
            The network Tag for the device found.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_CreateProjectAddCommDtmAndScan.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_CreateProjectAddCommDtmAndScan.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_UpdateDtmCatalog">
            <summary>
            The test case TC_UpdateDtmCatalog.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_UpdateDtmCatalog.Run(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Opens the FieldCare Catalog via Menu, starts an update and adds new devices if necessary.
            </summary>
            <param name="timeToWaitForUpdateMessage">
            The time to wait for the update window to appear in milliseconds. Recommended: 5000.
            </param>
            <param name="timeoutForUpdateProgress">
            The timeout For the Update Progress. This depends on how many dtms are found. Recommended: 120000.
            </param>
            <param name="shouldFindNewOrChangedDevice">
            Set to true if new or changed devices are expected.
            </param>
            <param name="maxMinutesSinceDtmWasInstalled">
            The approximate time in minutes since the dtm has been installed
            </param>
            <param name="timeToWaitForMoving">
            The time To Wait For Moving. This is important if the update is huge.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_UpdateDtmCatalog.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_UpdateDtmCatalog.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_TESTAREA">
            <summary>
            Description of TC_TESTAREA.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_TESTAREA.Run(System.String[])">
            <summary>
            The run.
            </summary>
            <param name="testArray">
            The test array.
            </param>
            <returns>
            The string.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_TESTAREA.Run(System.String,System.Int32,System.Single)">
            <summary>
            The run.
            </summary>
            <param name="testString">
            The test string.
            </param>
            <param name="testInteger">
            The test integer.
            </param>
            <param name="testFloat">
            The test float.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.FieldCare.TC_TESTAREA.Run">
            <summary>
            Run test case
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtDownload">
            <summary>
            The test case TC_FdtDownload.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtDownload.Run">
            <summary>
            Performs a FDT-Download and checks that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtDownload.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtDownload.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtPrint">
            <summary>
            The test case TC_FdtPrint.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtPrint.Run(System.String,System.Int32)">
            <summary>
            Performs a FDT-Download and checks that there is no critical error afterwards.
            </summary>
            <param name="fileName">
            The file name and path to save data. Use this form: C:\test\fdtprint
            </param>
            <param name="timeoutInMilliseconds">
            The timeout in milliseconds. Be aware that printing can take several minutes.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtPrint.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtPrint.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtUpload">
            <summary>
            The test case TC_FDTUpload.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtUpload.Run">
            <summary>
            Performs a FDT-Upload and checks that there is no critical error afterwards.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtUpload.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.FDT.TC_FdtUpload.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_DisconnectDevice">
            <summary>
            The test case TC_DisconnectDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_DisconnectDevice.Run">
            <summary>
            Disconnects currently selected device.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_DisconnectDevice.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_DisconnectDevice.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_FindAndSelectDeviceInTopology">
            <summary>
            The test case TC_FindAndSelectDeviceInTopology.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_FindAndSelectDeviceInTopology.Run(System.String)">
            <summary>
            Finds and selects a device in the network topology.
            </summary>
            <param name="deviceName">
            Network tag of the device.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_FindAndSelectDeviceInTopology.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_FindAndSelectDeviceInTopology.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_LoadProject">
            <summary>
            The test case TC_LoadProject.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_LoadProject.Run(System.String)">
            <summary>
            Loads a FieldCare project.
            </summary>
            <param name="projectName">
            The project Name.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_LoadProject.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_LoadProject.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_OpenHostApplication">
            <summary>
            The test case TC_OpenHostApplication.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_OpenHostApplication.Run(System.String)">
            <summary>
            Opens FieldCare using installation path provided by the user.
            </summary>
            <param name="path">
            The installation path of FieldCare. Use this form: C:\Program Files (x86)\Endress+Hauser\FieldCare\Frame\FMPFrame.exe
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_OpenHostApplication.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_OpenHostApplication.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_SaveProject">
            <summary>
            The test case TC_SaveProject.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_SaveProject.Run">
            <summary>
            Saves the current project with a default project name (current date and time)
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_SaveProject.Run(System.String)">
            <summary>
            Saves the current project with a project name provided by the user.
            </summary>
            <param name="projectName">
            The project Name.
            </param>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_SaveProject.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_SaveProject.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CheckForCriticalError">
            <summary>
            The test case TC_CheckForCriticalError.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CheckForCriticalError.Run">
            <summary>
            The run.
            </summary>
            <returns>
            Returns true if test case is passed, false otherwise.
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CheckForCriticalError.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestCases.HostApplication.TC_CheckForCriticalError.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestModules.DeviceFunction.CoDIA.Compare.TM_CompareOnlineVsOffline">
            <summary>
            Class TM_CompareOnlineVsOffline.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.DeviceFunction.CoDIA.Compare.TM_CompareOnlineVsOffline.Run">
            <summary>
            Execute test module
            </summary>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestModules.DeviceFunction.CoDIA.Historom.TM_ChangeSettings">
            <summary>
            Description of TM_ChangeSettings.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.DeviceFunction.CoDIA.Historom.TM_ChangeSettings.Run">
            <summary>
            Opens Historom module and changes the channel assignments in tab settings, will check if assignment is correct after performing a read and opening tab statistic results
            </summary>
            <returns>true for success</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_DisconnectCurrentDeviceViaIcon">
            <summary>
            TM_DisconnectCurrentDevice connects currently selected device.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_DisconnectCurrentDeviceViaIcon.Run">
            <summary>
            Execute test module
            </summary>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_DisconnectCurrentDeviceViaIcon.Run(System.Int32)">
            <summary>
                Execute test module
            </summary>
            <param name="timeOutInMilliseconds">Time until action must be done successfully</param>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_AddParentDtm">
            <summary>
            Adds a Communication DTM to project (Host)
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_AddParentDtm.Run(System.String)">
            <summary>
            Execute test module
            </summary>
            <param name="communicationDtm">Name of Communication DTM</param>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_ConnectCurrentDeviceViaIcon">
            <summary>
            TM_ConnectCurrentDevice connects currently selected device.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_ConnectCurrentDeviceViaIcon.Run">
            <summary>
            Execute test module
            </summary>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_ConnectCurrentDeviceViaIcon.Run(System.Int32)">
            <summary>
            Execute test module
            </summary>
            <param name="timeOutInMilliseconds">Time until action must be done successfully</param>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_ConnectCurrentDeviceViaMenu">
            <summary>
            TM_ConnectCurrentDevice connects currently selected device.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_ConnectCurrentDeviceViaMenu.Run">
            <summary>
            Execute test module
            </summary>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_ConnectCurrentDeviceViaMenu.Run(System.Int32)">
            <summary>
                Execute test module
            </summary>
            <param name="timeOutInMilliseconds">Time until action must be done successfully</param>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_ConnectDisconnectSeveralTimesViaIcon">
            <summary>
            Connects and disconnects in a row for several times
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_ConnectDisconnectSeveralTimesViaIcon.Run(System.Int32)">
            <summary>
            Execute test module
            </summary>
            <param name="numberOfLoops">Number of loops to connect AND disconnect</param>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_ConnectDisconnectSeveralTimesViaMenu">
            <summary>
             Connects and disconnects in a row for several times
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_ConnectDisconnectSeveralTimesViaMenu.Run(System.Int32)">
            <summary>
            Execute test module
            </summary>
            <param name="numberOfLoops">Number of loops to connect AND disconnect</param>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_DisconnectCurrentDeviceViaMenu">
            <summary>
            TM_DisconnectCurrentDevice connects currently selected device.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_DisconnectCurrentDeviceViaMenu.Run">
            <summary>
                Execute test module
            </summary>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_DisconnectCurrentDeviceViaMenu.Run(System.Int32)">
            <summary>
            Execute test module
            </summary>
            <param name="timeOutInMilliseconds">Time until action must be done successfully</param>
            <returns>
                <br>True: If call worked fine</br>
                <br>False: If an error occurred</br>
            </returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_FindDevice">
            <summary>
            Description of Find Device.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestModules.HostApplication.FDT.FieldCare.TM_FindDevice.Run(System.String)">
            <summary>
            Runs the specified device name.
            </summary>
            <param name="deviceName">Name of the device.</param>
            <returns><c>true</c> if passed, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.AboutBox.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.AboutBox.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.AboutBox.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.AboutBox.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Compare.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Compare.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>        
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Compare.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Compare.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Concentration.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Concentration.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Concentration.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Concentration.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.ConcentrationV2.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.ConcentrationV2.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.ConcentrationV2.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.ConcentrationV2.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.CreateDocumentation.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.CreateDocumentation.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>        
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.CreateDocumentation.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.CreateDocumentation.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EnvelopeCurveShed.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EnvelopeCurveShed.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EnvelopeCurveShed.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EnvelopeCurveShed.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EnvelopeCurve.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EnvelopeCurve.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EnvelopeCurve.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EnvelopeCurve.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EventList.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EventList.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EventList.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.EventList.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Historom.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Historom.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Historom.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Historom.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Linearization.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Linearization.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Linearization.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Linearization.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Parameterization.VorlageSetupDeliveryOffline">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Parameterization.VorlageSetupDeliveryOffline.Run">
            <summary>
            The run.
            </summary>        
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Parameterization.VorlageSetupDeliveryOffline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Parameterization.VorlageSetupDeliveryOffline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Parameterization.TS_ResetDevice">
            <summary>
            The test suite TS_ResetDevice.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Parameterization.TS_ResetDevice.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Parameterization.VorlageSetupDeliveryOnline">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Parameterization.VorlageSetupDeliveryOnline.Run">
            <summary>
            The run.
            </summary>        
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Parameterization.VorlageSetupDeliveryOnline.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Parameterization.VorlageSetupDeliveryOnline.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.SaveRestore.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.SaveRestore.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.SaveRestore.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.SaveRestore.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Viscosity.VorlageSetupDelivery">
            <summary>
            The test case VorlageSetupDelivery.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Viscosity.VorlageSetupDelivery.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Viscosity.VorlageSetupDelivery.StartUp">
            <summary>
            The startup.
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.DeviceFunction.CoDIA.Viscosity.VorlageSetupDelivery.TearDown">
            <summary>
            The tear down.
            </summary>
        </member>
        <member name="T:EH.PCPS.TestAutomation.Testlibrary.TestSuites.HostApplication.FDT.FdtFunctions.TS_SetupDelivery">
            <summary>
            Setup Delivery Test FDT-Functions
            ---------------------------------
            Preconditions:
            - DTM ist online
            - Device supports FDT Functionality
            - Online und Offline Parametrierung enthalten unterschiedliche Werte
            ---------------------------------
            Teststeps:
            - Öffne Compare Datasets
                         - Modul geöffnet
            - Vergleiche Online Daten mit Offline Daten
                         - Für den Vergleich erlaubte Parameter stimmen überein
                         - Progressbar zeigt den Fortschritt des Vergleichs
            - Prüfe Parameter
                         - Parameter die übereinstimmen sollen, stimmen überein
                         - Parameter die nicht übereinstimmen sollen, stimmen nicht überein
            - Schließe Compare Datasets
                         - Modul geschlossen
            - Daten hochladen
                         - Vorgang beendet
            - Prüfe HostApplication
                         - Es ist keine Fehlermeldung verfügbar
                         - Es ist eine Erfolgsmeldung verfügbar
            - Öffne Compare Datasets
                         - Modul geöffnet
            - Vergleiche Online Daten mit Offline Daten
                         - Für den Vergleich erlaubte Parameter stimmen überein
                         - Progressbar zeigt den Fortschritt des Vergleichs
            - Prüfe Parameter
                         - Parameter die übereinstimmen sollen, stimmen überein
                         - Parameter die nicht übereinstimmen sollen, stimmen nicht überein
            - Schließe Compare Datasets
                         - Modul geschlossen
            - Daten runterladen
                         - Vorgang beendet
            - Prüfe HostApplication
                         - Es ist keine Fehlermeldung verfügbar
                         - Es ist eine Erfolgsmeldung verfügbar
            - Öffne Compare Datasets
                         - Modul geöffnet
            - Vergleiche Online Daten mit Offline Daten
                         - Für den Vergleich erlaubte Parameter stimmen überein
                         - Progressbar zeigt den Fortschritt des Vergleichs
            - Prüfe Parameter
                         - Parameter die übereinstimmen sollen, stimmen überein
                         - Parameter die nicht übereinstimmen sollen, stimmen nicht überein
            - Schließe Compare Datasets
                         - Modul geschlossen
            - Druck-Dialog öffnen (HostApplication)
                         - Druck Dialog geöffnet
            - Erstelle Dokumentation
                         - Dokument ist verfügbar
            - Vergleiche Dokument mit Referenzwerten aus einem Referenzdokument
                         - Parameterwerte Online sind gedruckt
                         - Einheiten sind gedruckt
                         - Angewählte Module wurden gedruckt
            </summary>
        </member>
        <member name="M:EH.PCPS.TestAutomation.Testlibrary.TestSuites.HostApplication.FDT.FdtFunctions.TS_SetupDelivery.Run(System.String)">
            <summary>
            The run.
            </summary>
            <param name="parameterList">
            A list of parameters which should be checked after a download
            </param>
        </member>
    </members>
</doc>
